/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.11.2 on Thu Jul 12 20:04:10 2012
 *
 * Copyright (c) 2010 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt.
 * 
 * This file may be used under the terms of the GNU General Public
 * License versions 2.0 or 3.0 as published by the Free Software
 * Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
 * included in the packaging of this file.  Alternatively you may (at
 * your option) use any later version of the GNU General Public
 * License if such license has been publicly approved by Riverbank
 * Computing Limited (or its successors, if any) and the KDE Free Qt
 * Foundation. In addition, as a special exception, Riverbank gives you
 * certain additional rights. These rights are described in the Riverbank
 * GPL Exception version 1.1, which can be found in the file
 * GPL_EXCEPTION.txt in this package.
 * 
 * Please review the following information to ensure GNU General
 * Public Licensing requirements will be met:
 * http://trolltech.com/products/qt/licenses/licensing/opensource/. If
 * you are unsure which license is appropriate for your use, please
 * review the following information:
 * http://trolltech.com/products/qt/licenses/licensing/licensingoverview
 * or contact the sales department at sales@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtDesigner.h"

#line 36 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtDesigner/customwidget.sip"
#include <customwidget.h>
#line 39 "sipQtDesignerQDesignerCustomWidgetInterface.cpp"

#line 41 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qstring.sip"
#include <qstring.h>
#line 43 "sipQtDesignerQDesignerCustomWidgetInterface.cpp"
#line 36 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtDesigner/abstractformeditor.sip"
#include <abstractformeditor.h>
#line 46 "sipQtDesignerQDesignerCustomWidgetInterface.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qwidget.sip"
#include <qwidget.h>
#line 49 "sipQtDesignerQDesignerCustomWidgetInterface.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qicon.sip"
#include <qicon.h>
#line 52 "sipQtDesignerQDesignerCustomWidgetInterface.cpp"


class sipQDesignerCustomWidgetInterface : public QDesignerCustomWidgetInterface
{
public:
    sipQDesignerCustomWidgetInterface();
    sipQDesignerCustomWidgetInterface(const QDesignerCustomWidgetInterface&);
    virtual ~sipQDesignerCustomWidgetInterface();

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    QString name() const;
    QString group() const;
    QString toolTip() const;
    QString whatsThis() const;
    QString includeFile() const;
    QIcon icon() const;
    bool isContainer() const;
    QWidget * createWidget(QWidget *);
    bool isInitialized() const;
    void initialize(QDesignerFormEditorInterface *);
    QString domXml() const;
    QString codeTemplate() const;

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQDesignerCustomWidgetInterface(const sipQDesignerCustomWidgetInterface &);
    sipQDesignerCustomWidgetInterface &operator = (const sipQDesignerCustomWidgetInterface &);

    char sipPyMethods[12];
};

sipQDesignerCustomWidgetInterface::sipQDesignerCustomWidgetInterface(): QDesignerCustomWidgetInterface(), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQDesignerCustomWidgetInterface::sipQDesignerCustomWidgetInterface(const QDesignerCustomWidgetInterface& a0): QDesignerCustomWidgetInterface(a0), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQDesignerCustomWidgetInterface::~sipQDesignerCustomWidgetInterface()
{
    sipCommonDtor(sipPySelf);
}

QString sipQDesignerCustomWidgetInterface::name() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[0]),sipPySelf,sipName_QDesignerCustomWidgetInterface,sipName_name);

    if (!meth)
        return QString();

    typedef QString (*sipVH_QtCore_62)(sip_gilstate_t,PyObject *);

    return ((sipVH_QtCore_62)(sipModuleAPI_QtDesigner_QtCore->em_virthandlers[62]))(sipGILState,meth);
}

QString sipQDesignerCustomWidgetInterface::group() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[1]),sipPySelf,sipName_QDesignerCustomWidgetInterface,sipName_group);

    if (!meth)
        return QString();

    typedef QString (*sipVH_QtCore_62)(sip_gilstate_t,PyObject *);

    return ((sipVH_QtCore_62)(sipModuleAPI_QtDesigner_QtCore->em_virthandlers[62]))(sipGILState,meth);
}

QString sipQDesignerCustomWidgetInterface::toolTip() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[2]),sipPySelf,sipName_QDesignerCustomWidgetInterface,sipName_toolTip);

    if (!meth)
        return QString();

    typedef QString (*sipVH_QtCore_62)(sip_gilstate_t,PyObject *);

    return ((sipVH_QtCore_62)(sipModuleAPI_QtDesigner_QtCore->em_virthandlers[62]))(sipGILState,meth);
}

QString sipQDesignerCustomWidgetInterface::whatsThis() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[3]),sipPySelf,sipName_QDesignerCustomWidgetInterface,sipName_whatsThis);

    if (!meth)
        return QString();

    typedef QString (*sipVH_QtCore_62)(sip_gilstate_t,PyObject *);

    return ((sipVH_QtCore_62)(sipModuleAPI_QtDesigner_QtCore->em_virthandlers[62]))(sipGILState,meth);
}

QString sipQDesignerCustomWidgetInterface::includeFile() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[4]),sipPySelf,sipName_QDesignerCustomWidgetInterface,sipName_includeFile);

    if (!meth)
        return QString();

    typedef QString (*sipVH_QtCore_62)(sip_gilstate_t,PyObject *);

    return ((sipVH_QtCore_62)(sipModuleAPI_QtDesigner_QtCore->em_virthandlers[62]))(sipGILState,meth);
}

QIcon sipQDesignerCustomWidgetInterface::icon() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[5]),sipPySelf,sipName_QDesignerCustomWidgetInterface,sipName_icon);

    if (!meth)
        return QIcon();

    extern QIcon sipVH_QtDesigner_9(sip_gilstate_t,PyObject *);

    return sipVH_QtDesigner_9(sipGILState,meth);
}

bool sipQDesignerCustomWidgetInterface::isContainer() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[6]),sipPySelf,sipName_QDesignerCustomWidgetInterface,sipName_isContainer);

    if (!meth)
        return 0;

    typedef bool (*sipVH_QtCore_7)(sip_gilstate_t,PyObject *);

    return ((sipVH_QtCore_7)(sipModuleAPI_QtDesigner_QtCore->em_virthandlers[7]))(sipGILState,meth);
}

QWidget * sipQDesignerCustomWidgetInterface::createWidget(QWidget *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[7],sipPySelf,sipName_QDesignerCustomWidgetInterface,sipName_createWidget);

    if (!meth)
        return 0;

    typedef QWidget * (*sipVH_QtGui_8)(sip_gilstate_t,PyObject *,QWidget *);

    return ((sipVH_QtGui_8)(sipModuleAPI_QtDesigner_QtGui->em_virthandlers[8]))(sipGILState,meth,a0);
}

bool sipQDesignerCustomWidgetInterface::isInitialized() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[8]),sipPySelf,NULL,sipName_isInitialized);

    if (!meth)
        return QDesignerCustomWidgetInterface::isInitialized();

    typedef bool (*sipVH_QtCore_7)(sip_gilstate_t,PyObject *);

    return ((sipVH_QtCore_7)(sipModuleAPI_QtDesigner_QtCore->em_virthandlers[7]))(sipGILState,meth);
}

void sipQDesignerCustomWidgetInterface::initialize(QDesignerFormEditorInterface *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[9],sipPySelf,NULL,sipName_initialize);

    if (!meth)
    {
        QDesignerCustomWidgetInterface::initialize(a0);
        return;
    }

    extern void sipVH_QtDesigner_8(sip_gilstate_t,PyObject *,QDesignerFormEditorInterface *);

    sipVH_QtDesigner_8(sipGILState,meth,a0);
}

QString sipQDesignerCustomWidgetInterface::domXml() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[10]),sipPySelf,NULL,sipName_domXml);

    if (!meth)
        return QDesignerCustomWidgetInterface::domXml();

    typedef QString (*sipVH_QtCore_62)(sip_gilstate_t,PyObject *);

    return ((sipVH_QtCore_62)(sipModuleAPI_QtDesigner_QtCore->em_virthandlers[62]))(sipGILState,meth);
}

QString sipQDesignerCustomWidgetInterface::codeTemplate() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[11]),sipPySelf,NULL,sipName_codeTemplate);

    if (!meth)
        return QDesignerCustomWidgetInterface::codeTemplate();

    typedef QString (*sipVH_QtCore_62)(sip_gilstate_t,PyObject *);

    return ((sipVH_QtCore_62)(sipModuleAPI_QtDesigner_QtCore->em_virthandlers[62]))(sipGILState,meth);
}


extern "C" {static PyObject *meth_QDesignerCustomWidgetInterface_name(PyObject *, PyObject *);}
static PyObject *meth_QDesignerCustomWidgetInterface_name(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    PyObject *sipOrigSelf = sipSelf;

    {
        QDesignerCustomWidgetInterface *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QDesignerCustomWidgetInterface, &sipCpp))
        {
            QString *sipRes;

            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QDesignerCustomWidgetInterface, sipName_name);
                return NULL;
            }

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QString(sipCpp->name());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDesignerCustomWidgetInterface, sipName_name, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QDesignerCustomWidgetInterface_group(PyObject *, PyObject *);}
static PyObject *meth_QDesignerCustomWidgetInterface_group(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    PyObject *sipOrigSelf = sipSelf;

    {
        QDesignerCustomWidgetInterface *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QDesignerCustomWidgetInterface, &sipCpp))
        {
            QString *sipRes;

            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QDesignerCustomWidgetInterface, sipName_group);
                return NULL;
            }

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QString(sipCpp->group());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDesignerCustomWidgetInterface, sipName_group, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QDesignerCustomWidgetInterface_toolTip(PyObject *, PyObject *);}
static PyObject *meth_QDesignerCustomWidgetInterface_toolTip(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    PyObject *sipOrigSelf = sipSelf;

    {
        QDesignerCustomWidgetInterface *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QDesignerCustomWidgetInterface, &sipCpp))
        {
            QString *sipRes;

            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QDesignerCustomWidgetInterface, sipName_toolTip);
                return NULL;
            }

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QString(sipCpp->toolTip());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDesignerCustomWidgetInterface, sipName_toolTip, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QDesignerCustomWidgetInterface_whatsThis(PyObject *, PyObject *);}
static PyObject *meth_QDesignerCustomWidgetInterface_whatsThis(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    PyObject *sipOrigSelf = sipSelf;

    {
        QDesignerCustomWidgetInterface *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QDesignerCustomWidgetInterface, &sipCpp))
        {
            QString *sipRes;

            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QDesignerCustomWidgetInterface, sipName_whatsThis);
                return NULL;
            }

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QString(sipCpp->whatsThis());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDesignerCustomWidgetInterface, sipName_whatsThis, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QDesignerCustomWidgetInterface_includeFile(PyObject *, PyObject *);}
static PyObject *meth_QDesignerCustomWidgetInterface_includeFile(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    PyObject *sipOrigSelf = sipSelf;

    {
        QDesignerCustomWidgetInterface *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QDesignerCustomWidgetInterface, &sipCpp))
        {
            QString *sipRes;

            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QDesignerCustomWidgetInterface, sipName_includeFile);
                return NULL;
            }

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QString(sipCpp->includeFile());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDesignerCustomWidgetInterface, sipName_includeFile, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QDesignerCustomWidgetInterface_icon(PyObject *, PyObject *);}
static PyObject *meth_QDesignerCustomWidgetInterface_icon(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    PyObject *sipOrigSelf = sipSelf;

    {
        QDesignerCustomWidgetInterface *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QDesignerCustomWidgetInterface, &sipCpp))
        {
            QIcon *sipRes;

            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QDesignerCustomWidgetInterface, sipName_icon);
                return NULL;
            }

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QIcon(sipCpp->icon());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QIcon,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDesignerCustomWidgetInterface, sipName_icon, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QDesignerCustomWidgetInterface_isContainer(PyObject *, PyObject *);}
static PyObject *meth_QDesignerCustomWidgetInterface_isContainer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    PyObject *sipOrigSelf = sipSelf;

    {
        QDesignerCustomWidgetInterface *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QDesignerCustomWidgetInterface, &sipCpp))
        {
            bool sipRes;

            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QDesignerCustomWidgetInterface, sipName_isContainer);
                return NULL;
            }

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->isContainer();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDesignerCustomWidgetInterface, sipName_isContainer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QDesignerCustomWidgetInterface_createWidget(PyObject *, PyObject *);}
static PyObject *meth_QDesignerCustomWidgetInterface_createWidget(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    PyObject *sipOrigSelf = sipSelf;

    {
        QWidget * a0;
        sipWrapper *sipOwner = 0;
        QDesignerCustomWidgetInterface *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJH", &sipSelf, sipType_QDesignerCustomWidgetInterface, &sipCpp, sipType_QWidget, &a0, &sipOwner))
        {
            QWidget *sipRes;

            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QDesignerCustomWidgetInterface, sipName_createWidget);
                return NULL;
            }

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->createWidget(a0);
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QWidget,(PyObject *)sipOwner);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDesignerCustomWidgetInterface, sipName_createWidget, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QDesignerCustomWidgetInterface_isInitialized(PyObject *, PyObject *);}
static PyObject *meth_QDesignerCustomWidgetInterface_isInitialized(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QDesignerCustomWidgetInterface *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QDesignerCustomWidgetInterface, &sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp->QDesignerCustomWidgetInterface::isInitialized() : sipCpp->isInitialized());
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDesignerCustomWidgetInterface, sipName_isInitialized, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QDesignerCustomWidgetInterface_initialize(PyObject *, PyObject *);}
static PyObject *meth_QDesignerCustomWidgetInterface_initialize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QDesignerFormEditorInterface * a0;
        QDesignerCustomWidgetInterface *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QDesignerCustomWidgetInterface, &sipCpp, sipType_QDesignerFormEditorInterface, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QDesignerCustomWidgetInterface::initialize(a0) : sipCpp->initialize(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDesignerCustomWidgetInterface, sipName_initialize, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QDesignerCustomWidgetInterface_domXml(PyObject *, PyObject *);}
static PyObject *meth_QDesignerCustomWidgetInterface_domXml(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QDesignerCustomWidgetInterface *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QDesignerCustomWidgetInterface, &sipCpp))
        {
            QString *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QString((sipSelfWasArg ? sipCpp->QDesignerCustomWidgetInterface::domXml() : sipCpp->domXml()));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDesignerCustomWidgetInterface, sipName_domXml, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QDesignerCustomWidgetInterface_codeTemplate(PyObject *, PyObject *);}
static PyObject *meth_QDesignerCustomWidgetInterface_codeTemplate(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QDesignerCustomWidgetInterface *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QDesignerCustomWidgetInterface, &sipCpp))
        {
            QString *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QString((sipSelfWasArg ? sipCpp->QDesignerCustomWidgetInterface::codeTemplate() : sipCpp->codeTemplate()));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDesignerCustomWidgetInterface, sipName_codeTemplate, NULL);

    return NULL;
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_QDesignerCustomWidgetInterface(void *, const sipTypeDef *);}
static void *cast_QDesignerCustomWidgetInterface(void *ptr, const sipTypeDef *targetType)
{
    if (targetType == sipType_QDesignerCustomWidgetInterface)
        return ptr;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_QDesignerCustomWidgetInterface(void *, int);}
static void release_QDesignerCustomWidgetInterface(void *sipCppV,int sipState)
{
    Py_BEGIN_ALLOW_THREADS

    if (sipState & SIP_DERIVED_CLASS)
        delete reinterpret_cast<sipQDesignerCustomWidgetInterface *>(sipCppV);
    else
        delete reinterpret_cast<QDesignerCustomWidgetInterface *>(sipCppV);

    Py_END_ALLOW_THREADS
}


extern "C" {static void dealloc_QDesignerCustomWidgetInterface(sipSimpleWrapper *);}
static void dealloc_QDesignerCustomWidgetInterface(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerived(sipSelf))
        reinterpret_cast<sipQDesignerCustomWidgetInterface *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsPyOwned(sipSelf))
    {
        release_QDesignerCustomWidgetInterface(sipGetAddress(sipSelf),sipSelf->flags);
    }
}


extern "C" {static void *init_QDesignerCustomWidgetInterface(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_QDesignerCustomWidgetInterface(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
    sipQDesignerCustomWidgetInterface *sipCpp = 0;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, ""))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new sipQDesignerCustomWidgetInterface();
            Py_END_ALLOW_THREADS

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    {
        const QDesignerCustomWidgetInterface * a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, "J9", sipType_QDesignerCustomWidgetInterface, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new sipQDesignerCustomWidgetInterface(*a0);
            Py_END_ALLOW_THREADS

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


static PyMethodDef methods_QDesignerCustomWidgetInterface[] = {
    {SIP_MLNAME_CAST(sipName_codeTemplate), meth_QDesignerCustomWidgetInterface_codeTemplate, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_createWidget), meth_QDesignerCustomWidgetInterface_createWidget, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_domXml), meth_QDesignerCustomWidgetInterface_domXml, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_group), meth_QDesignerCustomWidgetInterface_group, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_icon), meth_QDesignerCustomWidgetInterface_icon, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_includeFile), meth_QDesignerCustomWidgetInterface_includeFile, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_initialize), meth_QDesignerCustomWidgetInterface_initialize, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_isContainer), meth_QDesignerCustomWidgetInterface_isContainer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_isInitialized), meth_QDesignerCustomWidgetInterface_isInitialized, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_name), meth_QDesignerCustomWidgetInterface_name, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_toolTip), meth_QDesignerCustomWidgetInterface_toolTip, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_whatsThis), meth_QDesignerCustomWidgetInterface_whatsThis, METH_VARARGS, NULL}
};


pyqt4ClassTypeDef sipTypeDef_QtDesigner_QDesignerCustomWidgetInterface = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
        sipNameNr_QDesignerCustomWidgetInterface,
        {0}
    },
    {
        sipNameNr_QDesignerCustomWidgetInterface,
        {0, 0, 1},
        12, methods_QDesignerCustomWidgetInterface,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    0,
    sipNameNr_PyQt4_QtCore_pyqtWrapperType,
    sipNameNr_sip_simplewrapper,
    0,
    0,
    init_QDesignerCustomWidgetInterface,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QDesignerCustomWidgetInterface,
    0,
    0,
    0,
    release_QDesignerCustomWidgetInterface,
    cast_QDesignerCustomWidgetInterface,
    0,
    0,
    0
},
    0,
    0,
    0
};
