/*
 * Module code.
 *
 * Generated by SIP 4.11.2 on Thu Jul 12 20:04:00 2012
 *
 * Copyright (c) 2010 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt.
 * 
 * This file may be used under the terms of the GNU General Public
 * License versions 2.0 or 3.0 as published by the Free Software
 * Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
 * included in the packaging of this file.  Alternatively you may (at
 * your option) use any later version of the GNU General Public
 * License if such license has been publicly approved by Riverbank
 * Computing Limited (or its successors, if any) and the KDE Free Qt
 * Foundation. In addition, as a special exception, Riverbank gives you
 * certain additional rights. These rights are described in the Riverbank
 * GPL Exception version 1.1, which can be found in the file
 * GPL_EXCEPTION.txt in this package.
 * 
 * Please review the following information to ensure GNU General
 * Public Licensing requirements will be met:
 * http://trolltech.com/products/qt/licenses/licensing/opensource/. If
 * you are unsure which license is appropriate for your use, please
 * review the following information:
 * http://trolltech.com/products/qt/licenses/licensing/licensingoverview
 * or contact the sales department at sales@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtXml.h"

#line 41 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qstring.sip"
#include <qstring.h>
#line 39 "sipQtXmlcmodule.cpp"
#line 88 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtXml/qxml.sip"
#include <qxml.h>
#line 42 "sipQtXmlcmodule.cpp"
#line 116 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtXml/qxml.sip"
#include <qxml.h>
#line 45 "sipQtXmlcmodule.cpp"
#line 62 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtXml/qxml.sip"
#include <qxml.h>
#line 48 "sipQtXmlcmodule.cpp"
#line 206 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtXml/qxml.sip"
#include <qxml.h>
#line 51 "sipQtXmlcmodule.cpp"
#line 298 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtXml/qxml.sip"
#include <qxml.h>
#line 54 "sipQtXmlcmodule.cpp"
#line 280 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtXml/qxml.sip"
#include <qxml.h>
#line 57 "sipQtXmlcmodule.cpp"
#line 241 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtXml/qxml.sip"
#include <qxml.h>
#line 60 "sipQtXmlcmodule.cpp"
#line 219 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtXml/qxml.sip"
#include <qxml.h>
#line 63 "sipQtXmlcmodule.cpp"
#line 255 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtXml/qxml.sip"
#include <qxml.h>
#line 66 "sipQtXmlcmodule.cpp"
#line 268 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtXml/qxml.sip"
#include <qxml.h>
#line 69 "sipQtXmlcmodule.cpp"
#line 42 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 72 "sipQtXmlcmodule.cpp"
#line 77 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qchar.sip"
#include <qchar.h>
#line 75 "sipQtXmlcmodule.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qtextstream.sip"
#include <qtextstream.h>
#line 78 "sipQtXmlcmodule.cpp"
#line 67 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 81 "sipQtXmlcmodule.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 84 "sipQtXmlcmodule.cpp"
#line 173 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 87 "sipQtXmlcmodule.cpp"
#line 193 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 90 "sipQtXmlcmodule.cpp"
#line 211 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 93 "sipQtXmlcmodule.cpp"
#line 255 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 96 "sipQtXmlcmodule.cpp"
#line 281 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 99 "sipQtXmlcmodule.cpp"
#line 293 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 102 "sipQtXmlcmodule.cpp"
#line 313 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 105 "sipQtXmlcmodule.cpp"
#line 330 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 108 "sipQtXmlcmodule.cpp"
#line 369 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 111 "sipQtXmlcmodule.cpp"
#line 382 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 114 "sipQtXmlcmodule.cpp"
#line 394 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 117 "sipQtXmlcmodule.cpp"
#line 406 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 120 "sipQtXmlcmodule.cpp"
#line 420 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 123 "sipQtXmlcmodule.cpp"
#line 435 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 126 "sipQtXmlcmodule.cpp"
#line 447 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 129 "sipQtXmlcmodule.cpp"

/* Define the strings used by this module. */
const char sipStrings_QtXml[] = {
    'Q', 'D', 'o', 'm', 'I', 'm', 'p', 'l', 'e', 'm', 'e', 'n', 't', 'a', 't', 'i', 'o', 'n', ':', ':', 'I', 'n', 'v', 'a', 'l', 'i', 'd', 'D', 'a', 't', 'a', 'P', 'o', 'l', 'i', 'c', 'y', 0,
    'P', 'y', 'Q', 't', '4', '.', 'Q', 't', 'C', 'o', 'r', 'e', '.', 'p', 'y', 'q', 't', 'W', 'r', 'a', 'p', 'p', 'e', 'r', 'T', 'y', 'p', 'e', 0,
    'c', 'r', 'e', 'a', 't', 'e', 'P', 'r', 'o', 'c', 'e', 's', 's', 'i', 'n', 'g', 'I', 'n', 's', 't', 'r', 'u', 'c', 't', 'i', 'o', 'n', 0,
    'Q', 'D', 'o', 'm', 'P', 'r', 'o', 'c', 'e', 's', 's', 'i', 'n', 'g', 'I', 'n', 's', 't', 'r', 'u', 'c', 't', 'i', 'o', 'n', 0,
    'P', 'r', 'o', 'c', 'e', 's', 's', 'i', 'n', 'g', 'I', 'n', 's', 't', 'r', 'u', 'c', 't', 'i', 'o', 'n', 'N', 'o', 'd', 'e', 0,
    'Q', 'D', 'o', 'm', 'N', 'o', 'd', 'e', ':', ':', 'E', 'n', 'c', 'o', 'd', 'i', 'n', 'g', 'P', 'o', 'l', 'i', 'c', 'y', 0,
    't', 'o', 'P', 'r', 'o', 'c', 'e', 's', 's', 'i', 'n', 'g', 'I', 'n', 's', 't', 'r', 'u', 'c', 't', 'i', 'o', 'n', 0,
    'i', 's', 'P', 'r', 'o', 'c', 'e', 's', 's', 'i', 'n', 'g', 'I', 'n', 's', 't', 'r', 'u', 'c', 't', 'i', 'o', 'n', 0,
    'c', 'r', 'e', 'a', 't', 'e', 'D', 'o', 'c', 'u', 'm', 'e', 'n', 't', 'F', 'r', 'a', 'g', 'm', 'e', 'n', 't', 0,
    'E', 'n', 'c', 'o', 'd', 'i', 'n', 'g', 'F', 'r', 'o', 'm', 'T', 'e', 'x', 't', 'S', 't', 'r', 'e', 'a', 'm', 0,
    'p', 'r', 'e', 'v', 'i', 'o', 'u', 's', 'S', 'i', 'b', 'l', 'i', 'n', 'g', 'E', 'l', 'e', 'm', 'e', 'n', 't', 0,
    'p', 'r', 'o', 'c', 'e', 's', 's', 'i', 'n', 'g', 'I', 'n', 's', 't', 'r', 'u', 'c', 't', 'i', 'o', 'n', 0,
    'c', 'r', 'e', 'a', 't', 'e', 'E', 'n', 't', 'i', 't', 'y', 'R', 'e', 'f', 'e', 'r', 'e', 'n', 'c', 'e', 0,
    'Q', 'X', 'm', 'l', 'N', 'a', 'm', 'e', 's', 'p', 'a', 'c', 'e', 'S', 'u', 'p', 'p', 'o', 'r', 't', 0,
    'Q', 'D', 'o', 'm', 'D', 'o', 'c', 'u', 'm', 'e', 'n', 't', 'F', 'r', 'a', 'g', 'm', 'e', 'n', 't', 0,
    'E', 'n', 'c', 'o', 'd', 'i', 'n', 'g', 'F', 'r', 'o', 'm', 'D', 'o', 'c', 'u', 'm', 'e', 'n', 't', 0,
    'D', 'o', 'c', 'u', 'm', 'e', 'n', 't', 'F', 'r', 'a', 'g', 'm', 'e', 'n', 't', 'N', 'o', 'd', 'e', 0,
    's', 'e', 't', 'I', 'n', 'v', 'a', 'l', 'i', 'd', 'D', 'a', 't', 'a', 'P', 'o', 'l', 'i', 'c', 'y', 0,
    'i', 'g', 'n', 'o', 'r', 'a', 'b', 'l', 'e', 'W', 'h', 'i', 't', 'e', 's', 'p', 'a', 'c', 'e', 0,
    'Q', 'D', 'o', 'm', 'E', 'n', 't', 'i', 't', 'y', 'R', 'e', 'f', 'e', 'r', 'e', 'n', 'c', 'e', 0,
    'r', 'e', 'm', 'o', 'v', 'e', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 'N', 'o', 'd', 'e', 0,
    'e', 'l', 'e', 'm', 'e', 'n', 't', 's', 'B', 'y', 'T', 'a', 'g', 'N', 'a', 'm', 'e', 'N', 'S', 0,
    'E', 'n', 't', 'i', 't', 'y', 'R', 'e', 'f', 'e', 'r', 'e', 'n', 'c', 'e', 'N', 'o', 'd', 'e', 0,
    'Q', 'X', 'm', 'l', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'e', 'x', 't', 'e', 'r', 'n', 'a', 'l', 'E', 'n', 't', 'i', 't', 'y', 'D', 'e', 'c', 'l', 0,
    'i', 'n', 't', 'e', 'r', 'n', 'a', 'l', 'E', 'n', 't', 'i', 't', 'y', 'D', 'e', 'c', 'l', 0,
    'Q', 'X', 'm', 'l', 'L', 'e', 'x', 'i', 'c', 'a', 'l', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'Q', 'X', 'm', 'l', 'E', 'n', 't', 'i', 't', 'y', 'R', 'e', 's', 'o', 'l', 'v', 'e', 'r', 0,
    'u', 'n', 'p', 'a', 'r', 's', 'e', 'd', 'E', 'n', 't', 'i', 't', 'y', 'D', 'e', 'c', 'l', 0,
    's', 't', 'a', 'r', 't', 'P', 'r', 'e', 'f', 'i', 'x', 'M', 'a', 'p', 'p', 'i', 'n', 'g', 0,
    's', 'e', 't', 'D', 'o', 'c', 'u', 'm', 'e', 'n', 't', 'L', 'o', 'c', 'a', 't', 'o', 'r', 0,
    'Q', 'X', 'm', 'l', 'C', 'o', 'n', 't', 'e', 'n', 't', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'Q', 'X', 'm', 'l', 'P', 'a', 'r', 's', 'e', 'E', 'x', 'c', 'e', 'p', 't', 'i', 'o', 'n', 0,
    's', 'e', 't', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 'N', 'o', 'd', 'e', 'N', 'S', 0,
    'c', 'r', 'e', 'a', 't', 'e', 'C', 'D', 'A', 'T', 'A', 'S', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'n', 'e', 'x', 't', 'S', 'i', 'b', 'l', 'i', 'n', 'g', 'E', 'l', 'e', 'm', 'e', 'n', 't', 0,
    't', 'o', 'D', 'o', 'c', 'u', 'm', 'e', 'n', 't', 'F', 'r', 'a', 'g', 'm', 'e', 'n', 't', 0,
    'i', 's', 'D', 'o', 'c', 'u', 'm', 'e', 'n', 't', 'F', 'r', 'a', 'g', 'm', 'e', 'n', 't', 0,
    'Q', 'D', 'o', 'm', 'N', 'o', 'd', 'e', ':', ':', 'N', 'o', 'd', 'e', 'T', 'y', 'p', 'e', 0,
    'c', 'r', 'e', 'a', 't', 'e', 'D', 'o', 'c', 'u', 'm', 'e', 'n', 't', 'T', 'y', 'p', 'e', 0,
    'A', 'c', 'c', 'e', 'p', 't', 'I', 'n', 'v', 'a', 'l', 'i', 'd', 'C', 'h', 'a', 'r', 's', 0,
    'Q', 'D', 'o', 'm', 'I', 'm', 'p', 'l', 'e', 'm', 'e', 'n', 't', 'a', 't', 'i', 'o', 'n', 0,
    's', 'e', 't', 'L', 'e', 'x', 'i', 'c', 'a', 'l', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    's', 'e', 't', 'C', 'o', 'n', 't', 'e', 'n', 't', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'r', 'e', 'm', 'o', 'v', 'e', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 'N', 'S', 0,
    'Q', 'D', 'o', 'm', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'D', 'a', 't', 'a', 0,
    'r', 'e', 'm', 'o', 'v', 'e', 'N', 'a', 'm', 'e', 'd', 'I', 't', 'e', 'm', 'N', 'S', 0,
    'c', 'r', 'e', 'a', 't', 'e', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 'N', 'S', 0,
    'e', 'l', 'e', 'm', 'e', 'n', 't', 's', 'B', 'y', 'T', 'a', 'g', 'N', 'a', 'm', 'e', 0,
    'f', 'i', 'r', 's', 't', 'C', 'h', 'i', 'l', 'd', 'E', 'l', 'e', 'm', 'e', 'n', 't', 0,
    't', 'o', 'E', 'n', 't', 'i', 't', 'y', 'R', 'e', 'f', 'e', 'r', 'e', 'n', 'c', 'e', 0,
    'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'D', 'a', 't', 'a', 'N', 'o', 'd', 'e', 0,
    'i', 'n', 'v', 'a', 'l', 'i', 'd', 'D', 'a', 't', 'a', 'P', 'o', 'l', 'i', 'c', 'y', 0,
    's', 'e', 't', 'E', 'n', 't', 'i', 't', 'y', 'R', 'e', 's', 'o', 'l', 'v', 'e', 'r', 0,
    'i', 's', 'E', 'n', 't', 'i', 't', 'y', 'R', 'e', 'f', 'e', 'r', 'e', 'n', 'c', 'e', 0,
    's', 'i', 'p', '.', 's', 'i', 'm', 'p', 'l', 'e', 'w', 'r', 'a', 'p', 'p', 'e', 'r', 0,
    'Q', 'X', 'm', 'l', 'E', 'r', 'r', 'o', 'r', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'e', 'n', 'd', 'P', 'r', 'e', 'f', 'i', 'x', 'M', 'a', 'p', 'p', 'i', 'n', 'g', 0,
    'Q', 'X', 'm', 'l', 'S', 'i', 'm', 'p', 'l', 'e', 'R', 'e', 'a', 'd', 'e', 'r', 0,
    'Q', 'D', 'o', 'm', 'C', 'D', 'A', 'T', 'A', 'S', 'e', 'c', 't', 'i', 'o', 'n', 0,
    's', 'e', 't', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 'N', 'o', 'd', 'e', 0,
    'Q', 'D', 'o', 'm', 'N', 'a', 'm', 'e', 'd', 'N', 'o', 'd', 'e', 'M', 'a', 'p', 0,
    'Q', 'D', 'o', 'm', 'D', 'o', 'c', 'u', 'm', 'e', 'n', 't', 'T', 'y', 'p', 'e', 0,
    'l', 'a', 's', 't', 'C', 'h', 'i', 'l', 'd', 'E', 'l', 'e', 'm', 'e', 'n', 't', 0,
    'D', 'o', 'c', 'u', 'm', 'e', 'n', 't', 'T', 'y', 'p', 'e', 'N', 'o', 'd', 'e', 0,
    'C', 'D', 'A', 'T', 'A', 'S', 'e', 'c', 't', 'i', 'o', 'n', 'N', 'o', 'd', 'e', 0,
    'D', 'r', 'o', 'p', 'I', 'n', 'v', 'a', 'l', 'i', 'd', 'C', 'h', 'a', 'r', 's', 0,
    's', 'e', 'a', 'r', 'c', 'h', 'D', 'e', 'l', 'i', 'm', 'i', 't', 'e', 'r', 's', 0,
    'c', 'o', 'm', 'p', 'r', 'e', 's', 's', 'i', 'o', 'n', 'L', 'e', 'v', 'e', 'l', 0,
    'Q', 'X', 'm', 'l', 'D', 'e', 'c', 'l', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    's', 'e', 't', 'E', 'r', 'r', 'o', 'r', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'Q', 'X', 'm', 'l', 'I', 'n', 'p', 'u', 't', 'S', 'o', 'u', 'r', 'c', 'e', 0,
    'a', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 'N', 'o', 'd', 'e', 'N', 'S', 0,
    'r', 'e', 'm', 'o', 'v', 'e', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 0,
    'r', 'e', 'm', 'o', 'v', 'e', 'N', 'a', 'm', 'e', 'd', 'I', 't', 'e', 'm', 0,
    'd', 'o', 'c', 'u', 'm', 'e', 'n', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 0,
    'c', 'r', 'e', 'a', 't', 'e', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'N', 'S', 0,
    'c', 'r', 'e', 'a', 't', 'e', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 0,
    't', 'o', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'D', 'a', 't', 'a', 0,
    'i', 's', 'C', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 'D', 'a', 't', 'a', 0,
    'p', 'r', 'e', 'v', 'i', 'o', 'u', 's', 'S', 'i', 'b', 'l', 'i', 'n', 'g', 0,
    'Q', 'X', 'm', 'l', 'D', 'T', 'D', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    's', 'e', 't', 'D', 'e', 'c', 'l', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'l', 'e', 'x', 'i', 'c', 'a', 'l', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'c', 'o', 'n', 't', 'e', 'n', 't', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'Q', 'X', 'm', 'l', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'h', 'a', 's', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 'N', 'S', 0,
    's', 'e', 't', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 'N', 'S', 0,
    's', 'e', 't', 'N', 'a', 'm', 'e', 'd', 'I', 't', 'e', 'm', 'N', 'S', 0,
    'i', 'm', 'p', 'l', 'e', 'm', 'e', 'n', 't', 'a', 't', 'i', 'o', 'n', 0,
    'c', 'r', 'e', 'a', 't', 'e', 'T', 'e', 'x', 't', 'N', 'o', 'd', 'e', 0,
    'i', 'n', 't', 'e', 'r', 'n', 'a', 'l', 'S', 'u', 'b', 's', 'e', 't', 0,
    't', 'o', 'D', 'o', 'c', 'u', 'm', 'e', 'n', 't', 'T', 'y', 'p', 'e', 0,
    't', 'o', 'C', 'D', 'A', 'T', 'A', 'S', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'i', 's', 'D', 'o', 'c', 'u', 'm', 'e', 'n', 't', 'T', 'y', 'p', 'e', 0,
    'i', 's', 'C', 'D', 'A', 'T', 'A', 'S', 'e', 'c', 't', 'i', 'o', 'n', 0,
    'c', 'r', 'e', 'a', 't', 'e', 'D', 'o', 'c', 'u', 'm', 'e', 'n', 't', 0,
    'R', 'e', 't', 'u', 'r', 'n', 'N', 'u', 'l', 'l', 'N', 'o', 'd', 'e', 0,
    'e', 'n', 't', 'i', 't', 'y', 'R', 'e', 's', 'o', 'l', 'v', 'e', 'r', 0,
    'd', 'i', 's', 'a', 'm', 'b', 'i', 'g', 'u', 'a', 't', 'i', 'o', 'n', 0,
    'a', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 'D', 'e', 'c', 'l', 0,
    'r', 'e', 's', 'o', 'l', 'v', 'e', 'E', 'n', 't', 'i', 't', 'y', 0,
    's', 'k', 'i', 'p', 'p', 'e', 'd', 'E', 'n', 't', 'i', 't', 'y', 0,
    's', 't', 'a', 'r', 't', 'D', 'o', 'c', 'u', 'm', 'e', 'n', 't', 0,
    'p', 'a', 'r', 's', 'e', 'C', 'o', 'n', 't', 'i', 'n', 'u', 'e', 0,
    's', 'e', 't', 'D', 'T', 'D', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'E', 'n', 'd', 'O', 'f', 'D', 'o', 'c', 'u', 'm', 'e', 'n', 't', 0,
    'a', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 'N', 'o', 'd', 'e', 0,
    's', 'u', 'b', 's', 't', 'r', 'i', 'n', 'g', 'D', 'a', 't', 'a', 0,
    'c', 'r', 'e', 'a', 't', 'e', 'C', 'o', 'm', 'm', 'e', 'n', 't', 0,
    'c', 'r', 'e', 'a', 't', 'e', 'E', 'l', 'e', 'm', 'e', 'n', 't', 0,
    'h', 'a', 's', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'o', 'w', 'n', 'e', 'r', 'D', 'o', 'c', 'u', 'm', 'e', 'n', 't', 0,
    'h', 'a', 's', 'C', 'h', 'i', 'l', 'd', 'N', 'o', 'd', 'e', 's', 0,
    'n', 'o', 't', 'a', 't', 'i', 'o', 'n', 'D', 'e', 'c', 'l', 0,
    's', 't', 'a', 'r', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 0,
    'e', 'r', 'r', 'o', 'r', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'Q', 'D', 'o', 'm', 'N', 'o', 't', 'a', 't', 'i', 'o', 'n', 0,
    'o', 'w', 'n', 'e', 'r', 'E', 'l', 'e', 'm', 'e', 'n', 't', 0,
    's', 'e', 't', 'N', 'a', 'm', 'e', 'd', 'I', 't', 'e', 'm', 0,
    'Q', 'D', 'o', 'm', 'D', 'o', 'c', 'u', 'm', 'e', 'n', 't', 0,
    'Q', 'D', 'o', 'm', 'N', 'o', 'd', 'e', 'L', 'i', 's', 't', 0,
    's', 'e', 't', 'N', 'o', 'd', 'e', 'V', 'a', 'l', 'u', 'e', 0,
    'n', 'a', 'm', 'e', 's', 'p', 'a', 'c', 'e', 'U', 'R', 'I', 0,
    'r', 'e', 'p', 'l', 'a', 'c', 'e', 'C', 'h', 'i', 'l', 'd', 0,
    'i', 'n', 's', 'e', 'r', 't', 'B', 'e', 'f', 'o', 'r', 'e', 0,
    'N', 'o', 't', 'a', 't', 'i', 'o', 'n', 'N', 'o', 'd', 'e', 0,
    'D', 'o', 'c', 'u', 'm', 'e', 'n', 't', 'N', 'o', 'd', 'e', 0,
    'c', 'o', 'l', 'u', 'm', 'n', 'N', 'u', 'm', 'b', 'e', 'r', 0,
    'n', 'o', 't', 'a', 't', 'i', 'o', 'n', 'N', 'a', 'm', 'e', 0,
    'h', 'a', 's', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 0,
    'i', 'n', 'i', 't', 'i', 'a', 'l', 'V', 'a', 'l', 'u', 'e', 0,
    'd', 'e', 'f', 'a', 'u', 'l', 't', 'V', 'a', 'l', 'u', 'e', 0,
    's', 'e', 't', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 0,
    's', 't', 'a', 'r', 't', 'E', 'n', 't', 'i', 't', 'y', 0,
    'e', 'n', 'd', 'D', 'o', 'c', 'u', 'm', 'e', 'n', 't', 0,
    'Q', 'X', 'm', 'l', 'L', 'o', 'c', 'a', 't', 'o', 'r', 0,
    'd', 'e', 'c', 'l', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 0,
    'h', 'a', 's', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 0,
    'p', 'u', 's', 'h', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    'p', 'r', 'o', 'c', 'e', 's', 's', 'N', 'a', 'm', 'e', 0,
    'Q', 'D', 'o', 'm', 'C', 'o', 'm', 'm', 'e', 'n', 't', 0,
    'a', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 'N', 'S', 0,
    'Q', 'D', 'o', 'm', 'E', 'l', 'e', 'm', 'e', 'n', 't', 0,
    'r', 'e', 'p', 'l', 'a', 'c', 'e', 'D', 'a', 't', 'a', 0,
    'n', 'a', 'm', 'e', 'd', 'I', 't', 'e', 'm', 'N', 'S', 0,
    'e', 'r', 'r', 'o', 'r', 'C', 'o', 'l', 'u', 'm', 'n', 0,
    'e', 'l', 'e', 'm', 'e', 'n', 't', 'B', 'y', 'I', 'd', 0,
    'n', 'e', 'x', 't', 'S', 'i', 'b', 'l', 'i', 'n', 'g', 0,
    'i', 's', 'S', 'u', 'p', 'p', 'o', 'r', 't', 'e', 'd', 0,
    'a', 'p', 'p', 'e', 'n', 'd', 'C', 'h', 'i', 'l', 'd', 0,
    'r', 'e', 'm', 'o', 'v', 'e', 'C', 'h', 'i', 'l', 'd', 0,
    'i', 'n', 's', 'e', 'r', 't', 'A', 'f', 't', 'e', 'r', 0,
    'C', 'o', 'm', 'm', 'e', 'n', 't', 'N', 'o', 'd', 'e', 0,
    'E', 'l', 'e', 'm', 'e', 'n', 't', 'N', 'o', 'd', 'e', 0,
    't', 'o', 'B', 'y', 't', 'e', 'A', 'r', 'r', 'a', 'y', 0,
    'a', 'p', 'p', 'l', 'i', 'c', 'a', 't', 'i', 'o', 'n', 0,
    's', 'e', 't', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 0,
    'f', 'r', 'o', 'm', 'R', 'a', 'w', 'D', 'a', 't', 'a', 0,
    's', 'o', 'u', 'r', 'c', 'e', 'S', 't', 'a', 't', 'e', 0,
    'e', 'r', 'r', 'o', 'r', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'P', 'y', 'Q', 't', '4', '.', 'Q', 't', 'X', 'm', 'l', 0,
    's', 't', 'a', 'r', 't', 'C', 'D', 'A', 'T', 'A', 0,
    'f', 'a', 't', 'a', 'l', 'E', 'r', 'r', 'o', 'r', 0,
    'c', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 's', 0,
    'e', 'n', 'd', 'E', 'l', 'e', 'm', 'e', 'n', 't', 0,
    's', 'e', 't', 'F', 'e', 'a', 't', 'u', 'r', 'e', 0,
    'Q', 'X', 'm', 'l', 'R', 'e', 'a', 'd', 'e', 'r', 0,
    'p', 'o', 'p', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    'Q', 'D', 'o', 'm', 'E', 'n', 't', 'i', 't', 'y', 0,
    's', 'e', 't', 'T', 'a', 'g', 'N', 'a', 'm', 'e', 0,
    'd', 'e', 'l', 'e', 't', 'e', 'D', 'a', 't', 'a', 0,
    'i', 'n', 's', 'e', 'r', 't', 'D', 'a', 't', 'a', 0,
    'a', 'p', 'p', 'e', 'n', 'd', 'D', 'a', 't', 'a', 0,
    's', 'e', 't', 'C', 'o', 'n', 't', 'e', 'n', 't', 0,
    'i', 'm', 'p', 'o', 'r', 't', 'N', 'o', 'd', 'e', 0,
    't', 'o', 'N', 'o', 't', 'a', 't', 'i', 'o', 'n', 0,
    't', 'o', 'D', 'o', 'c', 'u', 'm', 'e', 'n', 't', 0,
    'i', 's', 'N', 'o', 't', 'a', 't', 'i', 'o', 'n', 0,
    'i', 's', 'D', 'o', 'c', 'u', 'm', 'e', 'n', 't', 0,
    'f', 'i', 'r', 's', 't', 'C', 'h', 'i', 'l', 'd', 0,
    'c', 'h', 'i', 'l', 'd', 'N', 'o', 'd', 'e', 's', 0,
    'p', 'a', 'r', 'e', 'n', 't', 'N', 'o', 'd', 'e', 0,
    'E', 'n', 't', 'i', 't', 'y', 'N', 'o', 'd', 'e', 0,
    'h', 'a', 's', 'F', 'e', 'a', 't', 'u', 'r', 'e', 0,
    'a', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    'l', 'i', 'n', 'e', 'N', 'u', 'm', 'b', 'e', 'r', 0,
    'f', 'i', 'e', 'l', 'd', 'W', 'i', 'd', 't', 'h', 0,
    's', 'o', 'u', 'r', 'c', 'e', 'T', 'e', 'x', 't', 0,
    'y', 'e', 'a', 'r', 'N', 'u', 'm', 'b', 'e', 'r', 0,
    'r', 'e', 't', 'u', 'r', 'n', 'C', 'o', 'd', 'e', 0,
    '_', '_', 'l', 's', 'h', 'i', 'f', 't', '_', '_', 0,
    'e', 'n', 'd', 'E', 'n', 't', 'i', 't', 'y', 0,
    'b', 'e', 'g', 'i', 'n', 'n', 'i', 'n', 'g', 0,
    'E', 'n', 'd', 'O', 'f', 'D', 'a', 't', 'a', 0,
    'f', 'e', 't', 'c', 'h', 'D', 'a', 't', 'a', 0,
    's', 'p', 'l', 'i', 't', 'N', 'a', 'm', 'e', 0,
    's', 'p', 'l', 'i', 't', 'T', 'e', 'x', 't', 0,
    'a', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 0,
    's', 'p', 'e', 'c', 'i', 'f', 'i', 'e', 'd', 0,
    'e', 'r', 'r', 'o', 'r', 'L', 'i', 'n', 'e', 0,
    'n', 'o', 't', 'a', 't', 'i', 'o', 'n', 's', 0,
    't', 'o', 'C', 'o', 'm', 'm', 'e', 'n', 't', 0,
    't', 'o', 'E', 'l', 'e', 'm', 'e', 'n', 't', 0,
    'n', 'a', 'm', 'e', 'd', 'I', 't', 'e', 'm', 0,
    'i', 's', 'E', 'l', 'e', 'm', 'e', 'n', 't', 0,
    's', 'e', 't', 'P', 'r', 'e', 'f', 'i', 'x', 0,
    'n', 'o', 'd', 'e', 'V', 'a', 'l', 'u', 'e', 0,
    'l', 'o', 'c', 'a', 'l', 'N', 'a', 'm', 'e', 0,
    'l', 'a', 's', 't', 'C', 'h', 'i', 'l', 'd', 0,
    'n', 'o', 'r', 'm', 'a', 'l', 'i', 'z', 'e', 0,
    'c', 'l', 'o', 'n', 'e', 'N', 'o', 'd', 'e', 0,
    'i', 's', 'C', 'o', 'm', 'm', 'e', 'n', 't', 0,
    'd', 'i', 'r', 'e', 'c', 't', 'o', 'r', 'y', 0,
    'm', 'a', 'x', 'L', 'e', 'n', 'g', 't', 'h', 0,
    'c', 'a', 'r', 'e', 't', 'M', 'o', 'd', 'e', 0,
    't', 'r', 'a', 'c', 'e', 'b', 'a', 'c', 'k', 0,
    's', 'i', 'g', 'n', 'a', 't', 'u', 'r', 'e', 0,
    'p', 'r', 'e', 'c', 'i', 's', 'i', 'o', 'n', 0,
    'e', 'n', 'd', 'C', 'D', 'A', 'T', 'A', 0,
    's', 't', 'a', 'r', 't', 'D', 'T', 'D', 0,
    'p', 'r', 'e', 'f', 'i', 'x', 'e', 's', 0,
    'Q', 'D', 'o', 'm', 'T', 'e', 'x', 't', 0,
    'Q', 'D', 'o', 'm', 'A', 't', 't', 'r', 0,
    'e', 'r', 'r', 'o', 'r', 'M', 's', 'g', 0,
    'e', 'n', 't', 'i', 't', 'i', 'e', 's', 0,
    't', 'o', 'E', 'n', 't', 'i', 't', 'y', 0,
    'i', 's', 'E', 'n', 't', 'i', 't', 'y', 0,
    'n', 'o', 'd', 'e', 'T', 'y', 'p', 'e', 0,
    'n', 'o', 'd', 'e', 'N', 'a', 'm', 'e', 0,
    'B', 'a', 's', 'e', 'N', 'o', 'd', 'e', 0,
    'Q', 'D', 'o', 'm', 'N', 'o', 'd', 'e', 0,
    'p', 'u', 'b', 'l', 'i', 'c', 'I', 'd', 0,
    's', 'y', 's', 't', 'e', 'm', 'I', 'd', 0,
    'b', 'e', 'h', 'a', 'v', 'i', 'o', 'r', 0,
    'f', 'i', 'l', 'l', 'C', 'h', 'a', 'r', 0,
    'p', 'r', 'i', 'o', 'r', 'i', 't', 'y', 0,
    's', 'e', 't', 'V', 'a', 'l', 'u', 'e', 0,
    'p', 'r', 'o', 'p', 'e', 'r', 't', 'y', 0,
    't', 'i', 'm', 'e', 'S', 'p', 'e', 'c', 0,
    't', 'o', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'q', 'v', 'a', 'r', 'h', 'a', 's', 'h', 0,
    'e', 'n', 'c', 'o', 'd', 'i', 'n', 'g', 0,
    'c', 'o', 'n', 't', 'a', 'i', 'n', 's', 0,
    't', 'r', 'u', 'n', 'c', 'a', 't', 'e', 0,
    'f', 'i', 'l', 'e', 'N', 'a', 'm', 'e', 0,
    'd', 'u', 'r', 'a', 't', 'i', 'o', 'n', 0,
    'c', 'o', 'm', 'm', 'e', 'n', 't', 0,
    'w', 'a', 'r', 'n', 'i', 'n', 'g', 0,
    'f', 'e', 'a', 't', 'u', 'r', 'e', 0,
    'd', 'o', 'c', 't', 'y', 'p', 'e', 0,
    't', 'a', 'g', 'N', 'a', 'm', 'e', 0,
    'o', 'p', 't', 'i', 'o', 'n', 's', 0,
    'e', 'n', 'a', 'b', 'l', 'e', 'd', 0,
    'm', 'a', 'p', 'R', 'o', 'o', 't', 0,
    'c', 'o', 'u', 'n', 't', 'r', 'y', 0,
    't', 'i', 'm', 'e', 'o', 'u', 't', 0,
    'q', 'v', 'a', 'r', 'm', 'a', 'p', 0,
    'q', 'v', 'a', 'r', 'l', 's', 't', 0,
    'q', 's', 't', 'r', 'l', 's', 't', 0,
    'm', 'e', 's', 's', 'a', 'g', 'e', 0,
    'p', 'e', 'r', 'c', 'e', 'n', 't', 0,
    'i', 'n', 'c', 'l', 'u', 'd', 'e', 0,
    'e', 'x', 'c', 'l', 'u', 'd', 'e', 0,
    'i', 's', 'E', 'm', 'p', 't', 'y', 0,
    '_', '_', 'l', 'e', 'n', '_', '_', 0,
    's', 'e', 't', 'D', 'a', 't', 'a', 0,
    'f', 'i', 'l', 't', 'e', 'r', 's', 0,
    'Q', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'e', 'n', 'd', 'D', 'T', 'D', 0,
    'i', 'n', 'd', 'e', 'n', 't', 0,
    't', 'o', 'T', 'e', 'x', 't', 0,
    't', 'o', 'A', 't', 't', 'r', 0,
    'i', 's', 'T', 'e', 'x', 't', 0,
    'i', 's', 'A', 't', 't', 'r', 0,
    'p', 'r', 'e', 'f', 'i', 'x', 0,
    't', 'a', 'r', 'g', 'e', 't', 0,
    's', 'i', 'g', 'n', 'a', 'l', 0,
    'l', 'o', 'c', 'a', 'l', 'e', 0,
    's', 'y', 'n', 't', 'a', 'x', 0,
    'p', 'r', 'o', 'p', 'e', 'r', 0,
    'r', 'e', 'g', 'E', 'x', 'p', 0,
    'v', 'a', 'l', 'u', 'e', '9', 0,
    'v', 'a', 'l', 'u', 'e', '8', 0,
    'v', 'a', 'l', 'u', 'e', '7', 0,
    'v', 'a', 'l', 'u', 'e', '6', 0,
    'v', 'a', 'l', 'u', 'e', '5', 0,
    'v', 'a', 'l', 'u', 'e', '4', 0,
    'v', 'a', 'l', 'u', 'e', '3', 0,
    'v', 'a', 'l', 'u', 'e', '2', 0,
    'v', 'a', 'l', 'u', 'e', '1', 0,
    'v', 'a', 'l', 'u', 'e', '0', 0,
    's', 'u', 'f', 'f', 'i', 'x', 0,
    's', 'e', 'c', 'o', 'n', 'd', 0,
    'r', 'e', 's', 'u', 'l', 't', 0,
    'f', 'o', 'r', 'm', 'a', 't', 0,
    'a', 'p', 'p', 'e', 'n', 'd', 0,
    'l', 'e', 'n', 'g', 't', 'h', 0,
    'i', 's', 'N', 'u', 'l', 'l', 0,
    'o', 'b', 'j', 'e', 'c', 't', 0,
    'c', 'o', 'l', 'u', 'm', 'n', 0,
    'o', 'f', 'f', 's', 'e', 't', 0,
    'm', 'a', 'x', 'l', 'e', 'n', 0,
    't', 'h', 'r', 'e', 'a', 'd', 0,
    'p', 'o', 'l', 'i', 'c', 'y', 0,
    'p', 'a', 'r', 'e', 'n', 't', 0,
    '_', '_', 'n', 'e', '_', '_', 0,
    '_', '_', 'e', 'q', '_', '_', 0,
    'p', 'a', 'r', 's', 'e', 0,
    'q', 'N', 'a', 'm', 'e', 0,
    'c', 'o', 'd', 'e', 'c', 0,
    'o', 't', 'h', 'e', 'r', 0,
    'm', 's', 'e', 'c', 's', 0,
    'c', 'o', 'u', 'n', 't', 0,
    'v', 'a', 'l', 'u', 'e', 0,
    'c', 'l', 'e', 'a', 'r', 0,
    'r', 'e', 's', 'e', 't', 0,
    'o', 'r', 'd', 'e', 'r', 0,
    'i', 'n', 'd', 'e', 'x', 0,
    'f', 'l', 'a', 'g', 's', 0,
    'e', 'r', 'r', 'o', 'r', 0,
    's', 't', 'a', 't', 'e', 0,
    'l', 'i', 'n', 'e', 0,
    'i', 't', 'e', 'm', 0,
    'd', 'e', 'e', 'p', 0,
    's', 'a', 'v', 'e', 0,
    'l', 'i', 's', 't', 0,
    'm', 'o', 'd', 'e', 0,
    'n', 'a', 'm', 'e', 0,
    'm', 's', 'e', 'c', 0,
    'q', 'v', 'a', 'r', 0,
    'q', 's', 't', 'r', 0,
    'h', 'i', 'n', 't', 0,
    'a', 'r', 'g', 'v', 0,
    'u', 'c', 's', '4', 0,
    'b', 'a', 's', 'e', 0,
    'f', 'r', 'o', 'm', 0,
    'f', 'i', 'l', 'l', 0,
    'h', 'i', 't', 's', 0,
    's', 'o', 'r', 't', 0,
    'r', 'o', 'l', 'e', 0,
    'p', 'a', 't', 'h', 0,
    'n', 'e', 'x', 't', 0,
    'd', 'a', 't', 'a', 0,
    'f', 'i', 'l', 'e', 0,
    's', 'i', 'z', 'e', 0,
    'c', 'o', 'd', 'e', 0,
    'u', 'r', 'i', 0,
    'n', 't', 'h', 0,
    'p', 'i', 'd', 0,
    'p', 'o', 's', 0,
    'm', 's', 'g', 0,
    't', 'o', 0,
    'o', 'k', 0,
    'j', 0,
    'f', 0,
};
#line 34 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 492 "sipQtXmlcmodule.cpp"

bool sipVH_QtXml_0(sip_gilstate_t sipGILState,PyObject *sipMethod,const QString& a0,const QString& a1,const QString& a2)
{
    bool sipRes = 0;
    PyObject *resObj = sipCallMethod(0,sipMethod,"NNN",new QString(a0),sipType_QString,NULL,new QString(a1),sipType_QString,NULL,new QString(a2),sipType_QString,NULL);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"b",&sipRes) < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

bool sipVH_QtXml_1(sip_gilstate_t sipGILState,PyObject *sipMethod,const QString& a0,const QString& a1)
{
    bool sipRes = 0;
    PyObject *resObj = sipCallMethod(0,sipMethod,"NN",new QString(a0),sipType_QString,NULL,new QString(a1),sipType_QString,NULL);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"b",&sipRes) < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

bool sipVH_QtXml_2(sip_gilstate_t sipGILState,PyObject *sipMethod,const QString& a0,const QString& a1,const QString& a2,const QString& a3,const QString& a4)
{
    bool sipRes = 0;
    PyObject *resObj = sipCallMethod(0,sipMethod,"NNNNN",new QString(a0),sipType_QString,NULL,new QString(a1),sipType_QString,NULL,new QString(a2),sipType_QString,NULL,new QString(a3),sipType_QString,NULL,new QString(a4),sipType_QString,NULL);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"b",&sipRes) < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

bool sipVH_QtXml_3(sip_gilstate_t sipGILState,PyObject *sipMethod,const QString& a0,const QString& a1,QXmlInputSource *&a2)
{
    bool sipRes = 0;
    PyObject *resObj = sipCallMethod(0,sipMethod,"NN",new QString(a0),sipType_QString,NULL,new QString(a1),sipType_QString,NULL);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"(bH0)",&sipRes,sipType_QXmlInputSource,&a2) < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

bool sipVH_QtXml_4(sip_gilstate_t sipGILState,PyObject *sipMethod,const QString& a0,const QString& a1,const QString& a2,const QString& a3)
{
    bool sipRes = 0;
    PyObject *resObj = sipCallMethod(0,sipMethod,"NNNN",new QString(a0),sipType_QString,NULL,new QString(a1),sipType_QString,NULL,new QString(a2),sipType_QString,NULL,new QString(a3),sipType_QString,NULL);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"b",&sipRes) < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

bool sipVH_QtXml_5(sip_gilstate_t sipGILState,PyObject *sipMethod,const QXmlParseException& a0)
{
    bool sipRes = 0;
    PyObject *resObj = sipCallMethod(0,sipMethod,"N",new QXmlParseException(a0),sipType_QXmlParseException,NULL);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"b",&sipRes) < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

bool sipVH_QtXml_6(sip_gilstate_t sipGILState,PyObject *sipMethod,const QString& a0,const QString& a1,const QString& a2,const QXmlAttributes& a3)
{
    bool sipRes = 0;
    PyObject *resObj = sipCallMethod(0,sipMethod,"NNNN",new QString(a0),sipType_QString,NULL,new QString(a1),sipType_QString,NULL,new QString(a2),sipType_QString,NULL,new QXmlAttributes(a3),sipType_QXmlAttributes,NULL);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"b",&sipRes) < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

void sipVH_QtXml_7(sip_gilstate_t sipGILState,PyObject *sipMethod,QXmlLocator *a0)
{
    PyObject *resObj = sipCallMethod(0,sipMethod,"D",a0,sipType_QXmlLocator,NULL);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"Z") < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)
}

bool sipVH_QtXml_8(sip_gilstate_t sipGILState,PyObject *sipMethod,const QXmlInputSource *a0,bool a1)
{
    bool sipRes = 0;
    PyObject *resObj = sipCallMethod(0,sipMethod,"Db",const_cast<QXmlInputSource *>(a0),sipType_QXmlInputSource,NULL,a1);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"b",&sipRes) < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

bool sipVH_QtXml_9(sip_gilstate_t sipGILState,PyObject *sipMethod,const QXmlInputSource *a0)
{
    bool sipRes = 0;
    PyObject *resObj = sipCallMethod(0,sipMethod,"D",const_cast<QXmlInputSource *>(a0),sipType_QXmlInputSource,NULL);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"b",&sipRes) < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

QXmlDeclHandler * sipVH_QtXml_10(sip_gilstate_t sipGILState,PyObject *sipMethod)
{
    QXmlDeclHandler * sipRes = 0;
    PyObject *resObj = sipCallMethod(0,sipMethod,"");

    if (!resObj || sipParseResult(0,sipMethod,resObj,"H0",sipType_QXmlDeclHandler,&sipRes) < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

void sipVH_QtXml_11(sip_gilstate_t sipGILState,PyObject *sipMethod,QXmlDeclHandler *a0)
{
    PyObject *resObj = sipCallMethod(0,sipMethod,"D",a0,sipType_QXmlDeclHandler,NULL);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"Z") < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)
}

QXmlLexicalHandler * sipVH_QtXml_12(sip_gilstate_t sipGILState,PyObject *sipMethod)
{
    QXmlLexicalHandler * sipRes = 0;
    PyObject *resObj = sipCallMethod(0,sipMethod,"");

    if (!resObj || sipParseResult(0,sipMethod,resObj,"H0",sipType_QXmlLexicalHandler,&sipRes) < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

void sipVH_QtXml_13(sip_gilstate_t sipGILState,PyObject *sipMethod,QXmlLexicalHandler *a0)
{
    PyObject *resObj = sipCallMethod(0,sipMethod,"D",a0,sipType_QXmlLexicalHandler,NULL);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"Z") < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)
}

QXmlErrorHandler * sipVH_QtXml_14(sip_gilstate_t sipGILState,PyObject *sipMethod)
{
    QXmlErrorHandler * sipRes = 0;
    PyObject *resObj = sipCallMethod(0,sipMethod,"");

    if (!resObj || sipParseResult(0,sipMethod,resObj,"H0",sipType_QXmlErrorHandler,&sipRes) < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

void sipVH_QtXml_15(sip_gilstate_t sipGILState,PyObject *sipMethod,QXmlErrorHandler *a0)
{
    PyObject *resObj = sipCallMethod(0,sipMethod,"D",a0,sipType_QXmlErrorHandler,NULL);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"Z") < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)
}

QXmlContentHandler * sipVH_QtXml_16(sip_gilstate_t sipGILState,PyObject *sipMethod)
{
    QXmlContentHandler * sipRes = 0;
    PyObject *resObj = sipCallMethod(0,sipMethod,"");

    if (!resObj || sipParseResult(0,sipMethod,resObj,"H0",sipType_QXmlContentHandler,&sipRes) < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

void sipVH_QtXml_17(sip_gilstate_t sipGILState,PyObject *sipMethod,QXmlContentHandler *a0)
{
    PyObject *resObj = sipCallMethod(0,sipMethod,"D",a0,sipType_QXmlContentHandler,NULL);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"Z") < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)
}

QXmlDTDHandler * sipVH_QtXml_18(sip_gilstate_t sipGILState,PyObject *sipMethod)
{
    QXmlDTDHandler * sipRes = 0;
    PyObject *resObj = sipCallMethod(0,sipMethod,"");

    if (!resObj || sipParseResult(0,sipMethod,resObj,"H0",sipType_QXmlDTDHandler,&sipRes) < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

void sipVH_QtXml_19(sip_gilstate_t sipGILState,PyObject *sipMethod,QXmlDTDHandler *a0)
{
    PyObject *resObj = sipCallMethod(0,sipMethod,"D",a0,sipType_QXmlDTDHandler,NULL);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"Z") < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)
}

QXmlEntityResolver * sipVH_QtXml_20(sip_gilstate_t sipGILState,PyObject *sipMethod)
{
    QXmlEntityResolver * sipRes = 0;
    PyObject *resObj = sipCallMethod(0,sipMethod,"");

    if (!resObj || sipParseResult(0,sipMethod,resObj,"H0",sipType_QXmlEntityResolver,&sipRes) < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

void sipVH_QtXml_21(sip_gilstate_t sipGILState,PyObject *sipMethod,QXmlEntityResolver *a0)
{
    PyObject *resObj = sipCallMethod(0,sipMethod,"D",a0,sipType_QXmlEntityResolver,NULL);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"Z") < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)
}

void sipVH_QtXml_22(sip_gilstate_t sipGILState,PyObject *sipMethod,const QString& a0,void *a1)
{
    PyObject *resObj = sipCallMethod(0,sipMethod,"NV",new QString(a0),sipType_QString,NULL,a1);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"Z") < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)
}

void * sipVH_QtXml_23(sip_gilstate_t sipGILState,PyObject *sipMethod,const QString& a0,bool *a1)
{
    void * sipRes = 0;
    PyObject *resObj = sipCallMethod(0,sipMethod,"N",new QString(a0),sipType_QString,NULL);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"(Vb)",&sipRes,a1) < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

void sipVH_QtXml_24(sip_gilstate_t sipGILState,PyObject *sipMethod,const QString& a0,bool a1)
{
    PyObject *resObj = sipCallMethod(0,sipMethod,"Nb",new QString(a0),sipType_QString,NULL,a1);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"Z") < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)
}

bool sipVH_QtXml_25(sip_gilstate_t sipGILState,PyObject *sipMethod,const QString& a0,bool *a1)
{
    bool sipRes = 0;
    PyObject *resObj = sipCallMethod(0,sipMethod,"N",new QString(a0),sipType_QString,NULL);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"(bb)",&sipRes,a1) < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

bool sipVH_QtXml_26(sip_gilstate_t sipGILState,PyObject *sipMethod,const QXmlInputSource& a0)
{
    bool sipRes = 0;
    PyObject *resObj = sipCallMethod(0,sipMethod,"N",new QXmlInputSource(a0),sipType_QXmlInputSource,NULL);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"b",&sipRes) < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

QString sipVH_QtXml_27(sip_gilstate_t sipGILState,PyObject *sipMethod,const QByteArray& a0,bool a1)
{
    QString sipRes;
    PyObject *resObj = sipCallMethod(0,sipMethod,"Nb",new QByteArray(a0),sipType_QByteArray,NULL,a1);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"H5",sipType_QString,&sipRes) < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

QChar sipVH_QtXml_28(sip_gilstate_t sipGILState,PyObject *sipMethod)
{
    QChar sipRes;
    PyObject *resObj = sipCallMethod(0,sipMethod,"");

    if (!resObj || sipParseResult(0,sipMethod,resObj,"H5",sipType_QChar,&sipRes) < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

void sipVH_QtXml_29(sip_gilstate_t sipGILState,PyObject *sipMethod,const QByteArray& a0)
{
    PyObject *resObj = sipCallMethod(0,sipMethod,"N",new QByteArray(a0),sipType_QByteArray,NULL);

    if (!resObj || sipParseResult(0,sipMethod,resObj,"Z") < 0)
        PyErr_Print();

    Py_XDECREF(resObj);
    Py_DECREF(sipMethod);

    SIP_RELEASE_GIL(sipGILState)
}


extern "C" {static PyObject *slot___lshift__(PyObject *,PyObject *);}
static PyObject *slot___lshift__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = NULL;

    {
        QTextStream * a0;
        const QDomNode * a1;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "J9J9", sipType_QTextStream, &a0, sipType_QDomNode, &a1))
        {
            QTextStream *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = &(*a0 << *a1);
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QTextStream,NULL);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return NULL;

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}

static sipPySlotExtenderDef slotExtenders[] = {
    {(void *)slot___lshift__, lshift_slot, {0, 0, 0}},
    {NULL, (sipPySlotType)0, {0, 0, 0}}
};
static sipEnumTypeDef enumTypes[] = {
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QDomNode__EncodingPolicy, {0}}, sipNameNr_EncodingPolicy, 13, NULL},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QDomNode__NodeType, {0}}, sipNameNr_NodeType, 13, NULL},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QDomImplementation__InvalidDataPolicy, {0}}, sipNameNr_InvalidDataPolicy, 10, NULL},
};


/*
 * This defines each type in this module.
 */
static sipTypeDef *typesTable[] = {
    &sipTypeDef_QtXml_QDomAttr.super.ctd_base,
    &sipTypeDef_QtXml_QDomCDATASection.super.ctd_base,
    &sipTypeDef_QtXml_QDomCharacterData.super.ctd_base,
    &sipTypeDef_QtXml_QDomComment.super.ctd_base,
    &sipTypeDef_QtXml_QDomDocument.super.ctd_base,
    &sipTypeDef_QtXml_QDomDocumentFragment.super.ctd_base,
    &sipTypeDef_QtXml_QDomDocumentType.super.ctd_base,
    &sipTypeDef_QtXml_QDomElement.super.ctd_base,
    &sipTypeDef_QtXml_QDomEntity.super.ctd_base,
    &sipTypeDef_QtXml_QDomEntityReference.super.ctd_base,
    &sipTypeDef_QtXml_QDomImplementation.super.ctd_base,
    &enumTypes[2].etd_base,
    &sipTypeDef_QtXml_QDomNamedNodeMap.super.ctd_base,
    &sipTypeDef_QtXml_QDomNode.super.ctd_base,
    &enumTypes[0].etd_base,
    &enumTypes[1].etd_base,
    &sipTypeDef_QtXml_QDomNodeList.super.ctd_base,
    &sipTypeDef_QtXml_QDomNotation.super.ctd_base,
    &sipTypeDef_QtXml_QDomProcessingInstruction.super.ctd_base,
    &sipTypeDef_QtXml_QDomText.super.ctd_base,
    &sipTypeDef_QtXml_QXmlAttributes.super.ctd_base,
    &sipTypeDef_QtXml_QXmlContentHandler.super.ctd_base,
    &sipTypeDef_QtXml_QXmlDTDHandler.super.ctd_base,
    &sipTypeDef_QtXml_QXmlDeclHandler.super.ctd_base,
    &sipTypeDef_QtXml_QXmlDefaultHandler.super.ctd_base,
    &sipTypeDef_QtXml_QXmlEntityResolver.super.ctd_base,
    &sipTypeDef_QtXml_QXmlErrorHandler.super.ctd_base,
    &sipTypeDef_QtXml_QXmlInputSource.super.ctd_base,
    &sipTypeDef_QtXml_QXmlLexicalHandler.super.ctd_base,
    &sipTypeDef_QtXml_QXmlLocator.super.ctd_base,
    &sipTypeDef_QtXml_QXmlNamespaceSupport.super.ctd_base,
    &sipTypeDef_QtXml_QXmlParseException.super.ctd_base,
    &sipTypeDef_QtXml_QXmlReader.super.ctd_base,
    &sipTypeDef_QtXml_QXmlSimpleReader.super.ctd_base,
};


/*
 * This defines the virtual handlers that this module implements and can be
 * used by other modules.
 */
static sipVirtHandlerFunc virtHandlersTable[] = {
    (sipVirtHandlerFunc)sipVH_QtXml_0,
    (sipVirtHandlerFunc)sipVH_QtXml_1,
    (sipVirtHandlerFunc)sipVH_QtXml_2,
    (sipVirtHandlerFunc)sipVH_QtXml_3,
    (sipVirtHandlerFunc)sipVH_QtXml_4,
    (sipVirtHandlerFunc)sipVH_QtXml_5,
    (sipVirtHandlerFunc)sipVH_QtXml_6,
    (sipVirtHandlerFunc)sipVH_QtXml_7,
    (sipVirtHandlerFunc)sipVH_QtXml_8,
    (sipVirtHandlerFunc)sipVH_QtXml_9,
    (sipVirtHandlerFunc)sipVH_QtXml_10,
    (sipVirtHandlerFunc)sipVH_QtXml_11,
    (sipVirtHandlerFunc)sipVH_QtXml_12,
    (sipVirtHandlerFunc)sipVH_QtXml_13,
    (sipVirtHandlerFunc)sipVH_QtXml_14,
    (sipVirtHandlerFunc)sipVH_QtXml_15,
    (sipVirtHandlerFunc)sipVH_QtXml_16,
    (sipVirtHandlerFunc)sipVH_QtXml_17,
    (sipVirtHandlerFunc)sipVH_QtXml_18,
    (sipVirtHandlerFunc)sipVH_QtXml_19,
    (sipVirtHandlerFunc)sipVH_QtXml_20,
    (sipVirtHandlerFunc)sipVH_QtXml_21,
    (sipVirtHandlerFunc)sipVH_QtXml_22,
    (sipVirtHandlerFunc)sipVH_QtXml_23,
    (sipVirtHandlerFunc)sipVH_QtXml_24,
    (sipVirtHandlerFunc)sipVH_QtXml_25,
    (sipVirtHandlerFunc)sipVH_QtXml_26,
    (sipVirtHandlerFunc)sipVH_QtXml_27,
    (sipVirtHandlerFunc)sipVH_QtXml_28,
    (sipVirtHandlerFunc)sipVH_QtXml_29,
};


/* This defines the modules that this module needs to import. */
static sipImportedModuleDef importsTable[] = {
    {"PyQt4.QtCore", 0, NULL},
    {NULL, -1, NULL}
};


/* This defines the API versions and ranges in use. */
static int apiVersions[] = {sipNameNr_QString, 0, 2, -1};


/* This defines this module. */
sipExportedModuleDef sipModuleAPI_QtXml = {
    0,
    SIP_API_MINOR_NR,
    sipNameNr_PyQt4_QtXml,
    0,
    0,
    sipStrings_QtXml,
    importsTable,
    NULL,
    34,
    typesTable,
    NULL,
    0,
    NULL,
    0,
    NULL,
    virtHandlersTable,
    NULL,
    {NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL},
    NULL,
    NULL,
    slotExtenders,
    NULL,
    NULL,
    NULL,
    apiVersions,
    NULL
};


/* The SIP API and the APIs of any imported modules. */
const sipAPIDef *sipAPI_QtXml;
const sipExportedModuleDef *sipModuleAPI_QtXml_QtCore;

sip_qt_metaobject_func sip_QtXml_qt_metaobject;
sip_qt_metacall_func sip_QtXml_qt_metacall;
sip_qt_metacast_func sip_QtXml_qt_metacast;


/* The Python module initialisation function. */
#if PY_MAJOR_VERSION >= 3
#define SIP_MODULE_ENTRY        PyInit_QtXml
#define SIP_MODULE_TYPE         PyObject *
#define SIP_MODULE_DISCARD(r)   Py_DECREF(r)
#define SIP_MODULE_RETURN(r)    return (r)
#else
#define SIP_MODULE_ENTRY        initQtXml
#define SIP_MODULE_TYPE         void
#define SIP_MODULE_DISCARD(r)
#define SIP_MODULE_RETURN(r)    return
#endif

#if defined(SIP_STATIC_MODULE)
extern "C" SIP_MODULE_TYPE SIP_MODULE_ENTRY()
#else
PyMODINIT_FUNC SIP_MODULE_ENTRY()
#endif
{
    static PyMethodDef sip_methods[] = {
        {0, 0, 0, 0}
    };

#if PY_MAJOR_VERSION >= 3
    static PyModuleDef sip_module_def = {
        PyModuleDef_HEAD_INIT,
        "PyQt4.QtXml",
        NULL,
        -1,
        sip_methods,
        NULL,
        NULL,
        NULL,
        NULL
    };
#endif

    PyObject *sipModule, *sipModuleDict;
#if !defined(SIP_USE_PYCAPSULE)
    PyObject *sip_sipmod, *sip_capiobj;
#endif

    /* Initialise the module and get it's dictionary. */
#if PY_MAJOR_VERSION >= 3
    sipModule = PyModule_Create(&sip_module_def);
#elif PY_VERSION_HEX >= 0x02050000
    sipModule = Py_InitModule(sipName_PyQt4_QtXml, sip_methods);
#else
    sipModule = Py_InitModule(const_cast<char *>(sipName_PyQt4_QtXml), sip_methods);
#endif

    if (sipModule == NULL)
        SIP_MODULE_RETURN(NULL);

    sipModuleDict = PyModule_GetDict(sipModule);

    /* Get the SIP module's API. */
#if defined(SIP_USE_PYCAPSULE)

    sipAPI_QtXml = reinterpret_cast<const sipAPIDef *>(PyCapsule_Import("sip._C_API", 0));

    if (sipAPI_QtXml == NULL)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(NULL);
    }

#else

#if PY_VERSION_HEX >= 0x02050000
    sip_sipmod = PyImport_ImportModule("sip");
#else
    sip_sipmod = PyImport_ImportModule(const_cast<char *>("sip"));
#endif

    if (sip_sipmod == NULL)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(NULL);
    }

    sip_capiobj = PyDict_GetItemString(PyModule_GetDict(sip_sipmod), "_C_API");

    if (sip_capiobj == NULL || !PyCObject_Check(sip_capiobj))
    {
        Py_DECREF(sip_sipmod);
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(NULL);
    }

    sipAPI_QtXml = reinterpret_cast<const sipAPIDef *>(PyCObject_AsVoidPtr(sip_capiobj));

#endif

    /* Export the module and publish it's API. */
    if (sipExportModule(&sipModuleAPI_QtXml,SIP_API_MAJOR_NR,SIP_API_MINOR_NR,0) < 0)
    {
#if !defined(SIP_USE_PYCAPSULE)
        Py_DECREF(sip_sipmod);
#endif
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(0);
    }

    sip_QtXml_qt_metaobject = (sip_qt_metaobject_func)sipImportSymbol("qtcore_qt_metaobject");
    sip_QtXml_qt_metacall = (sip_qt_metacall_func)sipImportSymbol("qtcore_qt_metacall");
    sip_QtXml_qt_metacast = (sip_qt_metacast_func)sipImportSymbol("qtcore_qt_metacast");

    /* Initialise the module now all its dependencies have been set up. */
    if (sipInitModule(&sipModuleAPI_QtXml,sipModuleDict) < 0)
    {
#if !defined(SIP_USE_PYCAPSULE)
        Py_DECREF(sip_sipmod);
#endif
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(0);
    }

    /* Get the APIs of the modules that this one is dependent on. */
    sipModuleAPI_QtXml_QtCore = sipModuleAPI_QtXml.em_imports[0].im_module;

    SIP_MODULE_RETURN(sipModule);
}
