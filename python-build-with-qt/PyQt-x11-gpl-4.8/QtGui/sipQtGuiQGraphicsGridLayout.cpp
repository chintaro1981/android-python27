/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.11.2 on Thu Jul 12 20:03:19 2012
 *
 * Copyright (c) 2010 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt.
 * 
 * This file may be used under the terms of the GNU General Public
 * License versions 2.0 or 3.0 as published by the Free Software
 * Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
 * included in the packaging of this file.  Alternatively you may (at
 * your option) use any later version of the GNU General Public
 * License if such license has been publicly approved by Riverbank
 * Computing Limited (or its successors, if any) and the KDE Free Qt
 * Foundation. In addition, as a special exception, Riverbank gives you
 * certain additional rights. These rights are described in the Riverbank
 * GPL Exception version 1.1, which can be found in the file
 * GPL_EXCEPTION.txt in this package.
 * 
 * Please review the following information to ensure GNU General
 * Public Licensing requirements will be met:
 * http://trolltech.com/products/qt/licenses/licensing/opensource/. If
 * you are unsure which license is appropriate for your use, please
 * review the following information:
 * http://trolltech.com/products/qt/licenses/licensing/licensingoverview
 * or contact the sales department at sales@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtGui.h"

#line 38 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicsgridlayout.sip"
#include <qgraphicsgridlayout.h>
#line 39 "sipQtGuiQGraphicsGridLayout.cpp"

#line 38 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicslayoutitem.sip"
#include <qgraphicslayoutitem.h>
#line 43 "sipQtGuiQGraphicsGridLayout.cpp"
#line 98 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qsize.sip"
#include <qsize.h>
#line 46 "sipQtGuiQGraphicsGridLayout.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 49 "sipQtGuiQGraphicsGridLayout.cpp"
#line 158 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qrect.sip"
#include <qrect.h>
#line 52 "sipQtGuiQGraphicsGridLayout.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 55 "sipQtGuiQGraphicsGridLayout.cpp"
#line 36 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 58 "sipQtGuiQGraphicsGridLayout.cpp"
#line 44 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 61 "sipQtGuiQGraphicsGridLayout.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qsizepolicy.sip"
#include <qsizepolicy.h>
#line 64 "sipQtGuiQGraphicsGridLayout.cpp"


class sipQGraphicsGridLayout : public QGraphicsGridLayout
{
public:
    sipQGraphicsGridLayout(QGraphicsLayoutItem *);
    virtual ~sipQGraphicsGridLayout();

    /*
     * There is a public method for every protected method visible from
     * this class.
     */
    void sipProtect_setGraphicsItem(QGraphicsItem *);
    void sipProtect_setOwnedByLayout(bool);
    void sipProtect_addChildLayoutItem(QGraphicsLayoutItem *);

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    int count() const;
    QGraphicsLayoutItem * itemAt(int) const;
    void removeAt(int);
    void invalidate();
    void setGeometry(const QRectF&);
    QSizeF sizeHint(Qt::SizeHint,const QSizeF&) const;
    void getContentsMargins(qreal *,qreal *,qreal *,qreal *) const;
    void widgetEvent(QEvent *);
    void updateGeometry();

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQGraphicsGridLayout(const sipQGraphicsGridLayout &);
    sipQGraphicsGridLayout &operator = (const sipQGraphicsGridLayout &);

    char sipPyMethods[9];
};

sipQGraphicsGridLayout::sipQGraphicsGridLayout(QGraphicsLayoutItem *a0): QGraphicsGridLayout(a0), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsGridLayout::~sipQGraphicsGridLayout()
{
    sipCommonDtor(sipPySelf);
}

int sipQGraphicsGridLayout::count() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[0]),sipPySelf,NULL,sipName_count);

    if (!meth)
        return QGraphicsGridLayout::count();

    typedef int (*sipVH_QtCore_6)(sip_gilstate_t,PyObject *);

    return ((sipVH_QtCore_6)(sipModuleAPI_QtGui_QtCore->em_virthandlers[6]))(sipGILState,meth);
}

QGraphicsLayoutItem * sipQGraphicsGridLayout::itemAt(int a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[1]),sipPySelf,NULL,sipName_itemAt);

    if (!meth)
        return QGraphicsGridLayout::itemAt(a0);

    extern QGraphicsLayoutItem * sipVH_QtGui_204(sip_gilstate_t,PyObject *,int);

    return sipVH_QtGui_204(sipGILState,meth,a0);
}

void sipQGraphicsGridLayout::removeAt(int a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,NULL,sipName_removeAt);

    if (!meth)
    {
        QGraphicsGridLayout::removeAt(a0);
        return;
    }

    typedef void (*sipVH_QtCore_4)(sip_gilstate_t,PyObject *,int);

    ((sipVH_QtCore_4)(sipModuleAPI_QtGui_QtCore->em_virthandlers[4]))(sipGILState,meth,a0);
}

void sipQGraphicsGridLayout::invalidate()
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[3],sipPySelf,NULL,sipName_invalidate);

    if (!meth)
    {
        QGraphicsGridLayout::invalidate();
        return;
    }

    typedef void (*sipVH_QtCore_11)(sip_gilstate_t,PyObject *);

    ((sipVH_QtCore_11)(sipModuleAPI_QtGui_QtCore->em_virthandlers[11]))(sipGILState,meth);
}

void sipQGraphicsGridLayout::setGeometry(const QRectF& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[4],sipPySelf,NULL,sipName_setGeometry);

    if (!meth)
    {
        QGraphicsGridLayout::setGeometry(a0);
        return;
    }

    extern void sipVH_QtGui_137(sip_gilstate_t,PyObject *,const QRectF&);

    sipVH_QtGui_137(sipGILState,meth,a0);
}

QSizeF sipQGraphicsGridLayout::sizeHint(Qt::SizeHint a0,const QSizeF& a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[5]),sipPySelf,NULL,sipName_sizeHint);

    if (!meth)
        return QGraphicsGridLayout::sizeHint(a0,a1);

    extern QSizeF sipVH_QtGui_192(sip_gilstate_t,PyObject *,Qt::SizeHint,const QSizeF&);

    return sipVH_QtGui_192(sipGILState,meth,a0,a1);
}

void sipQGraphicsGridLayout::getContentsMargins(qreal *a0,qreal *a1,qreal *a2,qreal *a3) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[6]),sipPySelf,NULL,sipName_getContentsMargins);

    if (!meth)
    {
        QGraphicsLayout::getContentsMargins(a0,a1,a2,a3);
        return;
    }

    extern void sipVH_QtGui_197(sip_gilstate_t,PyObject *,qreal *,qreal *,qreal *,qreal *);

    sipVH_QtGui_197(sipGILState,meth,a0,a1,a2,a3);
}

void sipQGraphicsGridLayout::widgetEvent(QEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[7],sipPySelf,NULL,sipName_widgetEvent);

    if (!meth)
    {
        QGraphicsLayout::widgetEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_17)(sip_gilstate_t,PyObject *,QEvent *);

    ((sipVH_QtCore_17)(sipModuleAPI_QtGui_QtCore->em_virthandlers[17]))(sipGILState,meth,a0);
}

void sipQGraphicsGridLayout::updateGeometry()
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[8],sipPySelf,NULL,sipName_updateGeometry);

    if (!meth)
    {
        QGraphicsLayout::updateGeometry();
        return;
    }

    typedef void (*sipVH_QtCore_11)(sip_gilstate_t,PyObject *);

    ((sipVH_QtCore_11)(sipModuleAPI_QtGui_QtCore->em_virthandlers[11]))(sipGILState,meth);
}

void sipQGraphicsGridLayout::sipProtect_setGraphicsItem(QGraphicsItem *a0)
{
    QGraphicsLayoutItem::setGraphicsItem(a0);
}

void sipQGraphicsGridLayout::sipProtect_setOwnedByLayout(bool a0)
{
    QGraphicsLayoutItem::setOwnedByLayout(a0);
}

void sipQGraphicsGridLayout::sipProtect_addChildLayoutItem(QGraphicsLayoutItem *a0)
{
    QGraphicsLayout::addChildLayoutItem(a0);
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_setGraphicsItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setGraphicsItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsItem * a0;
        sipQGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, sipType_QGraphicsItem, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtect_setGraphicsItem(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setGraphicsItem, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_setOwnedByLayout(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setOwnedByLayout(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
        sipQGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtect_setOwnedByLayout(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setOwnedByLayout, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_addChildLayoutItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_addChildLayoutItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsLayoutItem * a0;
        sipQGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, sipType_QGraphicsLayoutItem, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtect_addChildLayoutItem(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_addChildLayoutItem, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_addItem(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_addItem(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsLayoutItem * a0;
        int a1;
        int a2;
        int a3;
        int a4;
        Qt::Alignment a5def = 0;
        Qt::Alignment * a5 = &a5def;
        int a5State = 0;
        QGraphicsGridLayout *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            NULL,
            NULL,
            NULL,
            sipName_alignment,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ:iiii|J1", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, sipType_QGraphicsLayoutItem, &a0, &a1, &a2, &a3, &a4, sipType_Qt_Alignment, &a5, &a5State))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->addItem(a0,a1,a2,a3,a4,*a5);
            Py_END_ALLOW_THREADS
            sipReleaseType(a5,sipType_Qt_Alignment,a5State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        QGraphicsLayoutItem * a0;
        int a1;
        int a2;
        Qt::Alignment a3def = 0;
        Qt::Alignment * a3 = &a3def;
        int a3State = 0;
        sipWrapper *sipOwner = 0;
        QGraphicsGridLayout *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            NULL,
            sipName_alignment,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJHii|J1", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, sipType_QGraphicsLayoutItem, &a0, &sipOwner, &a1, &a2, sipType_Qt_Alignment, &a3, &a3State))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->addItem(a0,a1,a2,*a3);
            Py_END_ALLOW_THREADS

            if (sipOwner)
                sipTransferTo(sipSelf, (PyObject *)sipOwner);
            else
                sipTransferBack(sipSelf);
            sipReleaseType(a3,sipType_Qt_Alignment,a3State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_addItem, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_setHorizontalSpacing(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setHorizontalSpacing(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        qreal a0;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setHorizontalSpacing(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setHorizontalSpacing, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_horizontalSpacing(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_horizontalSpacing(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp))
        {
            qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->horizontalSpacing();
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_horizontalSpacing, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_setVerticalSpacing(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setVerticalSpacing(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        qreal a0;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setVerticalSpacing(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setVerticalSpacing, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_verticalSpacing(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_verticalSpacing(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp))
        {
            qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->verticalSpacing();
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_verticalSpacing, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_setSpacing(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setSpacing(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        qreal a0;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setSpacing(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setSpacing, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_setRowSpacing(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setRowSpacing(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        qreal a1;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bid", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setRowSpacing(a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setRowSpacing, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_rowSpacing(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_rowSpacing(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
            qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->rowSpacing(a0);
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_rowSpacing, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_setColumnSpacing(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setColumnSpacing(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        qreal a1;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bid", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setColumnSpacing(a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setColumnSpacing, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_columnSpacing(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_columnSpacing(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
            qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->columnSpacing(a0);
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_columnSpacing, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_setRowStretchFactor(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setRowStretchFactor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        int a1;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bii", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setRowStretchFactor(a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setRowStretchFactor, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_rowStretchFactor(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_rowStretchFactor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
            int sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->rowStretchFactor(a0);
            Py_END_ALLOW_THREADS

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_rowStretchFactor, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_setColumnStretchFactor(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setColumnStretchFactor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        int a1;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bii", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setColumnStretchFactor(a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setColumnStretchFactor, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_columnStretchFactor(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_columnStretchFactor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
            int sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->columnStretchFactor(a0);
            Py_END_ALLOW_THREADS

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_columnStretchFactor, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_setRowMinimumHeight(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setRowMinimumHeight(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        qreal a1;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bid", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setRowMinimumHeight(a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setRowMinimumHeight, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_rowMinimumHeight(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_rowMinimumHeight(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
            qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->rowMinimumHeight(a0);
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_rowMinimumHeight, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_setRowPreferredHeight(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setRowPreferredHeight(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        qreal a1;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bid", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setRowPreferredHeight(a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setRowPreferredHeight, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_rowPreferredHeight(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_rowPreferredHeight(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
            qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->rowPreferredHeight(a0);
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_rowPreferredHeight, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_setRowMaximumHeight(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setRowMaximumHeight(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        qreal a1;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bid", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setRowMaximumHeight(a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setRowMaximumHeight, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_rowMaximumHeight(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_rowMaximumHeight(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
            qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->rowMaximumHeight(a0);
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_rowMaximumHeight, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_setRowFixedHeight(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setRowFixedHeight(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        qreal a1;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bid", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setRowFixedHeight(a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setRowFixedHeight, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_setColumnMinimumWidth(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setColumnMinimumWidth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        qreal a1;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bid", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setColumnMinimumWidth(a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setColumnMinimumWidth, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_columnMinimumWidth(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_columnMinimumWidth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
            qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->columnMinimumWidth(a0);
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_columnMinimumWidth, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_setColumnPreferredWidth(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setColumnPreferredWidth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        qreal a1;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bid", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setColumnPreferredWidth(a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setColumnPreferredWidth, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_columnPreferredWidth(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_columnPreferredWidth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
            qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->columnPreferredWidth(a0);
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_columnPreferredWidth, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_setColumnMaximumWidth(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setColumnMaximumWidth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        qreal a1;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bid", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setColumnMaximumWidth(a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setColumnMaximumWidth, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_columnMaximumWidth(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_columnMaximumWidth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
            qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->columnMaximumWidth(a0);
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_columnMaximumWidth, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_setColumnFixedWidth(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setColumnFixedWidth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        qreal a1;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bid", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setColumnFixedWidth(a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setColumnFixedWidth, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_setRowAlignment(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setRowAlignment(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        Qt::Alignment * a1;
        int a1State = 0;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiJ1", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0, sipType_Qt_Alignment, &a1, &a1State))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setRowAlignment(a0,*a1);
            Py_END_ALLOW_THREADS
            sipReleaseType(a1,sipType_Qt_Alignment,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setRowAlignment, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_rowAlignment(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_rowAlignment(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
            Qt::Alignment *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new Qt::Alignment(sipCpp->rowAlignment(a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_Qt_Alignment,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_rowAlignment, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_setColumnAlignment(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setColumnAlignment(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        Qt::Alignment * a1;
        int a1State = 0;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiJ1", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0, sipType_Qt_Alignment, &a1, &a1State))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setColumnAlignment(a0,*a1);
            Py_END_ALLOW_THREADS
            sipReleaseType(a1,sipType_Qt_Alignment,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setColumnAlignment, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_columnAlignment(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_columnAlignment(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
            Qt::Alignment *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new Qt::Alignment(sipCpp->columnAlignment(a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_Qt_Alignment,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_columnAlignment, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_setAlignment(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setAlignment(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsLayoutItem * a0;
        Qt::Alignment * a1;
        int a1State = 0;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J1", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, sipType_QGraphicsLayoutItem, &a0, sipType_Qt_Alignment, &a1, &a1State))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setAlignment(a0,*a1);
            Py_END_ALLOW_THREADS
            sipReleaseType(a1,sipType_Qt_Alignment,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setAlignment, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_alignment(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_alignment(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsLayoutItem * a0;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, sipType_QGraphicsLayoutItem, &a0))
        {
            Qt::Alignment *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new Qt::Alignment(sipCpp->alignment(a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_Qt_Alignment,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_alignment, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_rowCount(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_rowCount(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp))
        {
            int sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->rowCount();
            Py_END_ALLOW_THREADS

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_rowCount, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_columnCount(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_columnCount(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp))
        {
            int sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->columnCount();
            Py_END_ALLOW_THREADS

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_columnCount, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_itemAt(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_itemAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        int a0;
        int a1;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bii", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0, &a1))
        {
            QGraphicsLayoutItem *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->itemAt(a0,a1);
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsLayoutItem,NULL);
        }
    }

    {
        int a0;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
            QGraphicsLayoutItem *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp->QGraphicsGridLayout::itemAt(a0) : sipCpp->itemAt(a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsLayoutItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_itemAt, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_count(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_count(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp))
        {
            int sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp->QGraphicsGridLayout::count() : sipCpp->count());
            Py_END_ALLOW_THREADS

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_count, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_removeAt(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_removeAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        int a0;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, &a0))
        {
#line 86 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicsgridlayout.sip"
        // The ownership of any existing item must be passed back to Python.
        QGraphicsLayoutItem *itm;
        
        if (a0 < sipCpp->count())
            itm = sipCpp->itemAt(a0);
        else
            itm = 0;
        
        Py_BEGIN_ALLOW_THREADS
        sipSelfWasArg ? sipCpp->QGraphicsGridLayout::removeAt(a0)
                      : sipCpp->removeAt(a0);
        Py_END_ALLOW_THREADS
        
        if (itm)
        {
            PyObject *itmo = sipGetPyObject(itm, sipType_QGraphicsLayoutItem);
        
            if (itmo)
                sipTransferBack(itmo);
        }
#line 1530 "sipQtGuiQGraphicsGridLayout.cpp"

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_removeAt, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_invalidate(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_invalidate(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsGridLayout::invalidate() : sipCpp->invalidate());
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_invalidate, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_setGeometry(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_setGeometry(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QRectF * a0;
        QGraphicsGridLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, sipType_QRectF, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsGridLayout::setGeometry(*a0) : sipCpp->setGeometry(*a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_setGeometry, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsGridLayout_sizeHint(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsGridLayout_sizeHint(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        Qt::SizeHint a0;
        const QSizeF& a1def = QSizeF();
        const QSizeF * a1 = &a1def;
        QGraphicsGridLayout *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_constraint,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BE|J9", &sipSelf, sipType_QGraphicsGridLayout, &sipCpp, sipType_Qt_SizeHint, &a0, sipType_QSizeF, &a1))
        {
            QSizeF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QSizeF((sipSelfWasArg ? sipCpp->QGraphicsGridLayout::sizeHint(a0,*a1) : sipCpp->sizeHint(a0,*a1)));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QSizeF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsGridLayout, sipName_sizeHint, NULL);

    return NULL;
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_QGraphicsGridLayout(void *, const sipTypeDef *);}
static void *cast_QGraphicsGridLayout(void *ptr, const sipTypeDef *targetType)
{
    void *res;

    if (targetType == sipType_QGraphicsGridLayout)
        return ptr;

    if ((res = ((const sipClassTypeDef *)sipType_QGraphicsLayout)->ctd_cast((QGraphicsLayout *)(QGraphicsGridLayout *)ptr,targetType)) != NULL)
        return res;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_QGraphicsGridLayout(void *, int);}
static void release_QGraphicsGridLayout(void *sipCppV,int sipState)
{
    Py_BEGIN_ALLOW_THREADS

    if (sipState & SIP_DERIVED_CLASS)
        delete reinterpret_cast<sipQGraphicsGridLayout *>(sipCppV);
    else
        delete reinterpret_cast<QGraphicsGridLayout *>(sipCppV);

    Py_END_ALLOW_THREADS
}


extern "C" {static void dealloc_QGraphicsGridLayout(sipSimpleWrapper *);}
static void dealloc_QGraphicsGridLayout(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerived(sipSelf))
        reinterpret_cast<sipQGraphicsGridLayout *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsPyOwned(sipSelf))
    {
        release_QGraphicsGridLayout(sipGetAddress(sipSelf),sipSelf->flags);
    }
}


extern "C" {static void *init_QGraphicsGridLayout(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_QGraphicsGridLayout(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQGraphicsGridLayout *sipCpp = 0;

    {
        QGraphicsLayoutItem * a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QGraphicsLayoutItem, &a0, sipOwner))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new sipQGraphicsGridLayout(a0);
            Py_END_ALLOW_THREADS

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QGraphicsGridLayout[] = {{175, 255, 1}};


static PyMethodDef methods_QGraphicsGridLayout[] = {
    {SIP_MLNAME_CAST(sipName_addChildLayoutItem), meth_QGraphicsGridLayout_addChildLayoutItem, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_addItem), (PyCFunction)meth_QGraphicsGridLayout_addItem, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_alignment), meth_QGraphicsGridLayout_alignment, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_columnAlignment), meth_QGraphicsGridLayout_columnAlignment, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_columnCount), meth_QGraphicsGridLayout_columnCount, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_columnMaximumWidth), meth_QGraphicsGridLayout_columnMaximumWidth, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_columnMinimumWidth), meth_QGraphicsGridLayout_columnMinimumWidth, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_columnPreferredWidth), meth_QGraphicsGridLayout_columnPreferredWidth, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_columnSpacing), meth_QGraphicsGridLayout_columnSpacing, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_columnStretchFactor), meth_QGraphicsGridLayout_columnStretchFactor, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_count), meth_QGraphicsGridLayout_count, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_horizontalSpacing), meth_QGraphicsGridLayout_horizontalSpacing, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_invalidate), meth_QGraphicsGridLayout_invalidate, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_itemAt), meth_QGraphicsGridLayout_itemAt, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_removeAt), meth_QGraphicsGridLayout_removeAt, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_rowAlignment), meth_QGraphicsGridLayout_rowAlignment, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_rowCount), meth_QGraphicsGridLayout_rowCount, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_rowMaximumHeight), meth_QGraphicsGridLayout_rowMaximumHeight, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_rowMinimumHeight), meth_QGraphicsGridLayout_rowMinimumHeight, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_rowPreferredHeight), meth_QGraphicsGridLayout_rowPreferredHeight, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_rowSpacing), meth_QGraphicsGridLayout_rowSpacing, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_rowStretchFactor), meth_QGraphicsGridLayout_rowStretchFactor, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setAlignment), meth_QGraphicsGridLayout_setAlignment, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setColumnAlignment), meth_QGraphicsGridLayout_setColumnAlignment, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setColumnFixedWidth), meth_QGraphicsGridLayout_setColumnFixedWidth, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setColumnMaximumWidth), meth_QGraphicsGridLayout_setColumnMaximumWidth, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setColumnMinimumWidth), meth_QGraphicsGridLayout_setColumnMinimumWidth, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setColumnPreferredWidth), meth_QGraphicsGridLayout_setColumnPreferredWidth, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setColumnSpacing), meth_QGraphicsGridLayout_setColumnSpacing, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setColumnStretchFactor), meth_QGraphicsGridLayout_setColumnStretchFactor, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setGeometry), meth_QGraphicsGridLayout_setGeometry, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setGraphicsItem), meth_QGraphicsGridLayout_setGraphicsItem, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setHorizontalSpacing), meth_QGraphicsGridLayout_setHorizontalSpacing, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setOwnedByLayout), meth_QGraphicsGridLayout_setOwnedByLayout, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setRowAlignment), meth_QGraphicsGridLayout_setRowAlignment, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setRowFixedHeight), meth_QGraphicsGridLayout_setRowFixedHeight, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setRowMaximumHeight), meth_QGraphicsGridLayout_setRowMaximumHeight, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setRowMinimumHeight), meth_QGraphicsGridLayout_setRowMinimumHeight, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setRowPreferredHeight), meth_QGraphicsGridLayout_setRowPreferredHeight, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setRowSpacing), meth_QGraphicsGridLayout_setRowSpacing, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setRowStretchFactor), meth_QGraphicsGridLayout_setRowStretchFactor, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setSpacing), meth_QGraphicsGridLayout_setSpacing, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setVerticalSpacing), meth_QGraphicsGridLayout_setVerticalSpacing, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_sizeHint), (PyCFunction)meth_QGraphicsGridLayout_sizeHint, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_verticalSpacing), meth_QGraphicsGridLayout_verticalSpacing, METH_VARARGS, NULL}
};


pyqt4ClassTypeDef sipTypeDef_QtGui_QGraphicsGridLayout = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_CLASS,
        sipNameNr_QGraphicsGridLayout,
        {0}
    },
    {
        sipNameNr_QGraphicsGridLayout,
        {0, 0, 1},
        45, methods_QGraphicsGridLayout,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    0,
    -1,
    -1,
    supers_QGraphicsGridLayout,
    0,
    init_QGraphicsGridLayout,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QGraphicsGridLayout,
    0,
    0,
    0,
    release_QGraphicsGridLayout,
    cast_QGraphicsGridLayout,
    0,
    0,
    0
},
    0,
    0,
    0
};
