/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.11.2 on Thu Jul 12 20:03:16 2012
 *
 * Copyright (c) 2010 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt.
 * 
 * This file may be used under the terms of the GNU General Public
 * License versions 2.0 or 3.0 as published by the Free Software
 * Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
 * included in the packaging of this file.  Alternatively you may (at
 * your option) use any later version of the GNU General Public
 * License if such license has been publicly approved by Riverbank
 * Computing Limited (or its successors, if any) and the KDE Free Qt
 * Foundation. In addition, as a special exception, Riverbank gives you
 * certain additional rights. These rights are described in the Riverbank
 * GPL Exception version 1.1, which can be found in the file
 * GPL_EXCEPTION.txt in this package.
 * 
 * Please review the following information to ensure GNU General
 * Public Licensing requirements will be met:
 * http://trolltech.com/products/qt/licenses/licensing/opensource/. If
 * you are unsure which license is appropriate for your use, please
 * review the following information:
 * http://trolltech.com/products/qt/licenses/licensing/licensingoverview
 * or contact the sales department at sales@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtGui.h"

#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qstyleoption.sip"
#include <qstyleoption.h>
#line 39 "sipQtGuiQStyleOption.cpp"

#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 43 "sipQtGuiQStyleOption.cpp"
#line 36 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qfontmetrics.sip"
#include <qfontmetrics.h>
#line 46 "sipQtGuiQStyleOption.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qpalette.sip"
#include <qpalette.h>
#line 49 "sipQtGuiQStyleOption.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qrect.sip"
#include <qrect.h>
#line 52 "sipQtGuiQStyleOption.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qstyle.sip"
#include <qstyle.h>
#line 55 "sipQtGuiQStyleOption.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qwidget.sip"
#include <qwidget.h>
#line 58 "sipQtGuiQStyleOption.cpp"


extern "C" {static PyObject *meth_QStyleOption_init(PyObject *, PyObject *);}
static PyObject *meth_QStyleOption_init(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QWidget * a0;
        QStyleOption *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QStyleOption, &sipCpp, sipType_QWidget, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->init(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QStyleOption, sipName_init, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QStyleOption_initFrom(PyObject *, PyObject *);}
static PyObject *meth_QStyleOption_initFrom(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QWidget * a0;
        QStyleOption *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QStyleOption, &sipCpp, sipType_QWidget, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->initFrom(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QStyleOption, sipName_initFrom, NULL);

    return NULL;
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_QStyleOption(void *, const sipTypeDef *);}
static void *cast_QStyleOption(void *ptr, const sipTypeDef *targetType)
{
    if (targetType == sipType_QStyleOption)
        return ptr;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_QStyleOption(void *, int);}
static void release_QStyleOption(void *sipCppV,int)
{
    Py_BEGIN_ALLOW_THREADS

    delete reinterpret_cast<QStyleOption *>(sipCppV);

    Py_END_ALLOW_THREADS
}


extern "C" {static void assign_QStyleOption(void *, SIP_SSIZE_T, const void *);}
static void assign_QStyleOption(void *sipDst, SIP_SSIZE_T sipDstIdx, const void *sipSrc)
{
    reinterpret_cast<QStyleOption *>(sipDst)[sipDstIdx] = *reinterpret_cast<const QStyleOption *>(sipSrc);
}


extern "C" {static void *array_QStyleOption(SIP_SSIZE_T);}
static void *array_QStyleOption(SIP_SSIZE_T sipNrElem)
{
    return new QStyleOption[sipNrElem];
}


extern "C" {static void *copy_QStyleOption(const void *, SIP_SSIZE_T);}
static void *copy_QStyleOption(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new QStyleOption(reinterpret_cast<const QStyleOption *>(sipSrc)[sipSrcIdx]);
}


extern "C" {static void dealloc_QStyleOption(sipSimpleWrapper *);}
static void dealloc_QStyleOption(sipSimpleWrapper *sipSelf)
{
    if (sipIsPyOwned(sipSelf))
    {
        release_QStyleOption(sipGetAddress(sipSelf),0);
    }
}


extern "C" {static void *init_QStyleOption(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_QStyleOption(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
    QStyleOption *sipCpp = 0;

    {
        int a0 = QStyleOption::Version;
        int a1 = QStyleOption::SO_Default;

        static const char *sipKwdList[] = {
            sipName_version,
            sipName_type,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|ii", &a0, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new QStyleOption(a0,a1);
            Py_END_ALLOW_THREADS

            return sipCpp;
        }
    }

    {
        const QStyleOption * a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, "J9", sipType_QStyleOption, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new QStyleOption(*a0);
            Py_END_ALLOW_THREADS

            return sipCpp;
        }
    }

    return NULL;
}


static PyMethodDef methods_QStyleOption[] = {
    {SIP_MLNAME_CAST(sipName_init), meth_QStyleOption_init, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_initFrom), meth_QStyleOption_initFrom, METH_VARARGS, NULL}
};

static sipEnumMemberDef enummembers_QStyleOption[] = {
    {sipName_SO_Button, QStyleOption::SO_Button, 490},
    {sipName_SO_ComboBox, QStyleOption::SO_ComboBox, 490},
    {sipName_SO_Complex, QStyleOption::SO_Complex, 490},
    {sipName_SO_ComplexCustomBase, QStyleOption::SO_ComplexCustomBase, 490},
    {sipName_SO_CustomBase, QStyleOption::SO_CustomBase, 490},
    {sipName_SO_Default, QStyleOption::SO_Default, 490},
    {sipName_SO_DockWidget, QStyleOption::SO_DockWidget, 490},
    {sipName_SO_FocusRect, QStyleOption::SO_FocusRect, 490},
    {sipName_SO_Frame, QStyleOption::SO_Frame, 490},
    {sipName_SO_GraphicsItem, QStyleOption::SO_GraphicsItem, 490},
    {sipName_SO_GroupBox, QStyleOption::SO_GroupBox, 490},
    {sipName_SO_Header, QStyleOption::SO_Header, 490},
    {sipName_SO_MenuItem, QStyleOption::SO_MenuItem, 490},
    {sipName_SO_ProgressBar, QStyleOption::SO_ProgressBar, 490},
    {sipName_SO_Q3DockWindow, QStyleOption::SO_Q3DockWindow, 490},
    {sipName_SO_Q3ListView, QStyleOption::SO_Q3ListView, 490},
    {sipName_SO_Q3ListViewItem, QStyleOption::SO_Q3ListViewItem, 490},
    {sipName_SO_RubberBand, QStyleOption::SO_RubberBand, 490},
    {sipName_SO_SizeGrip, QStyleOption::SO_SizeGrip, 490},
    {sipName_SO_Slider, QStyleOption::SO_Slider, 490},
    {sipName_SO_SpinBox, QStyleOption::SO_SpinBox, 490},
    {sipName_SO_Tab, QStyleOption::SO_Tab, 490},
    {sipName_SO_TabBarBase, QStyleOption::SO_TabBarBase, 490},
    {sipName_SO_TabWidgetFrame, QStyleOption::SO_TabWidgetFrame, 490},
    {sipName_SO_TitleBar, QStyleOption::SO_TitleBar, 490},
    {sipName_SO_ToolBar, QStyleOption::SO_ToolBar, 490},
    {sipName_SO_ToolBox, QStyleOption::SO_ToolBox, 490},
    {sipName_SO_ToolButton, QStyleOption::SO_ToolButton, 490},
    {sipName_SO_ViewItem, QStyleOption::SO_ViewItem, 490},
    {sipName_Type, QStyleOption::Type, 491},
    {sipName_Version, QStyleOption::Version, 492},
};


extern "C" {static PyObject *varget_QStyleOption_direction(void *, PyObject *);}
static PyObject *varget_QStyleOption_direction(void *sipSelf, PyObject *)
{
    Qt::LayoutDirection sipVal;
    QStyleOption *sipCpp = reinterpret_cast<QStyleOption *>(sipSelf);

    sipVal = sipCpp->direction;

    return sipConvertFromEnum(sipVal, sipType_Qt_LayoutDirection);
}


extern "C" {static int varset_QStyleOption_direction(void *, PyObject *, PyObject *);}
static int varset_QStyleOption_direction(void *sipSelf, PyObject *sipPy, PyObject *)
{
    Qt::LayoutDirection sipVal;
    QStyleOption *sipCpp = reinterpret_cast<QStyleOption *>(sipSelf);

    sipVal = (Qt::LayoutDirection)SIPLong_AsLong(sipPy);

    if (PyErr_Occurred() != NULL)
        return -1;

    sipCpp->direction = sipVal;

    return 0;
}


extern "C" {static PyObject *varget_QStyleOption_fontMetrics(void *, PyObject *);}
static PyObject *varget_QStyleOption_fontMetrics(void *sipSelf, PyObject *)
{
    QFontMetrics *sipVal;
    QStyleOption *sipCpp = reinterpret_cast<QStyleOption *>(sipSelf);

    sipVal = &sipCpp->fontMetrics;

    return sipConvertFromType(sipVal,sipType_QFontMetrics, NULL);
}


extern "C" {static int varset_QStyleOption_fontMetrics(void *, PyObject *, PyObject *);}
static int varset_QStyleOption_fontMetrics(void *sipSelf, PyObject *sipPy, PyObject *)
{
    QFontMetrics *sipVal;
    QStyleOption *sipCpp = reinterpret_cast<QStyleOption *>(sipSelf);

    int sipIsErr = 0;

    sipVal = reinterpret_cast<QFontMetrics *>(sipForceConvertToType(sipPy,sipType_QFontMetrics,NULL,SIP_NOT_NONE,NULL,&sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->fontMetrics = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_QStyleOption_palette(void *, PyObject *);}
static PyObject *varget_QStyleOption_palette(void *sipSelf, PyObject *)
{
    QPalette *sipVal;
    QStyleOption *sipCpp = reinterpret_cast<QStyleOption *>(sipSelf);

    sipVal = &sipCpp->palette;

    return sipConvertFromType(sipVal,sipType_QPalette, NULL);
}


extern "C" {static int varset_QStyleOption_palette(void *, PyObject *, PyObject *);}
static int varset_QStyleOption_palette(void *sipSelf, PyObject *sipPy, PyObject *)
{
    QPalette *sipVal;
    QStyleOption *sipCpp = reinterpret_cast<QStyleOption *>(sipSelf);

    int sipIsErr = 0;

    sipVal = reinterpret_cast<QPalette *>(sipForceConvertToType(sipPy,sipType_QPalette,NULL,SIP_NOT_NONE,NULL,&sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->palette = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_QStyleOption_rect(void *, PyObject *);}
static PyObject *varget_QStyleOption_rect(void *sipSelf, PyObject *)
{
    QRect *sipVal;
    QStyleOption *sipCpp = reinterpret_cast<QStyleOption *>(sipSelf);

    sipVal = &sipCpp->rect;

    return sipConvertFromType(sipVal,sipType_QRect, NULL);
}


extern "C" {static int varset_QStyleOption_rect(void *, PyObject *, PyObject *);}
static int varset_QStyleOption_rect(void *sipSelf, PyObject *sipPy, PyObject *)
{
    QRect *sipVal;
    QStyleOption *sipCpp = reinterpret_cast<QStyleOption *>(sipSelf);

    int sipIsErr = 0;

    sipVal = reinterpret_cast<QRect *>(sipForceConvertToType(sipPy,sipType_QRect,NULL,SIP_NOT_NONE,NULL,&sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->rect = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_QStyleOption_state(void *, PyObject *);}
static PyObject *varget_QStyleOption_state(void *sipSelf, PyObject *)
{
    QStyle::State *sipVal;
    QStyleOption *sipCpp = reinterpret_cast<QStyleOption *>(sipSelf);

    sipVal = &sipCpp->state;

    return sipConvertFromType(sipVal,sipType_QStyle_State, NULL);
}


extern "C" {static int varset_QStyleOption_state(void *, PyObject *, PyObject *);}
static int varset_QStyleOption_state(void *sipSelf, PyObject *sipPy, PyObject *)
{
    QStyle::State *sipVal;
    QStyleOption *sipCpp = reinterpret_cast<QStyleOption *>(sipSelf);

    int sipValState;
    int sipIsErr = 0;

    sipVal = reinterpret_cast<QStyle::State *>(sipForceConvertToType(sipPy,sipType_QStyle_State,NULL,SIP_NOT_NONE,&sipValState,&sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->state = *sipVal;

    sipReleaseType(sipVal, sipType_QStyle_State, sipValState);

    return 0;
}


extern "C" {static PyObject *varget_QStyleOption_type(void *, PyObject *);}
static PyObject *varget_QStyleOption_type(void *sipSelf, PyObject *)
{
    int sipVal;
    QStyleOption *sipCpp = reinterpret_cast<QStyleOption *>(sipSelf);

    sipVal = sipCpp->type;

    return SIPLong_FromLong(sipVal);
}


extern "C" {static int varset_QStyleOption_type(void *, PyObject *, PyObject *);}
static int varset_QStyleOption_type(void *sipSelf, PyObject *sipPy, PyObject *)
{
    int sipVal;
    QStyleOption *sipCpp = reinterpret_cast<QStyleOption *>(sipSelf);

    sipVal = (int)SIPLong_AsLong(sipPy);

    if (PyErr_Occurred() != NULL)
        return -1;

    sipCpp->type = sipVal;

    return 0;
}


extern "C" {static PyObject *varget_QStyleOption_version(void *, PyObject *);}
static PyObject *varget_QStyleOption_version(void *sipSelf, PyObject *)
{
    int sipVal;
    QStyleOption *sipCpp = reinterpret_cast<QStyleOption *>(sipSelf);

    sipVal = sipCpp->version;

    return SIPLong_FromLong(sipVal);
}


extern "C" {static int varset_QStyleOption_version(void *, PyObject *, PyObject *);}
static int varset_QStyleOption_version(void *sipSelf, PyObject *sipPy, PyObject *)
{
    int sipVal;
    QStyleOption *sipCpp = reinterpret_cast<QStyleOption *>(sipSelf);

    sipVal = (int)SIPLong_AsLong(sipPy);

    if (PyErr_Occurred() != NULL)
        return -1;

    sipCpp->version = sipVal;

    return 0;
}

sipVariableDef variables_QStyleOption[] = {
    {sipName_direction, varget_QStyleOption_direction, varset_QStyleOption_direction, 0},
    {sipName_fontMetrics, varget_QStyleOption_fontMetrics, varset_QStyleOption_fontMetrics, 0},
    {sipName_palette, varget_QStyleOption_palette, varset_QStyleOption_palette, 0},
    {sipName_rect, varget_QStyleOption_rect, varset_QStyleOption_rect, 0},
    {sipName_state, varget_QStyleOption_state, varset_QStyleOption_state, 0},
    {sipName_type, varget_QStyleOption_type, varset_QStyleOption_type, 0},
    {sipName_version, varget_QStyleOption_version, varset_QStyleOption_version, 0},
};


pyqt4ClassTypeDef sipTypeDef_QtGui_QStyleOption = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_CLASS,
        sipNameNr_QStyleOption,
        {0}
    },
    {
        sipNameNr_QStyleOption,
        {0, 0, 1},
        2, methods_QStyleOption,
        31, enummembers_QStyleOption,
        7, variables_QStyleOption,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    0,
    sipNameNr_PyQt4_QtCore_pyqtWrapperType,
    sipNameNr_sip_simplewrapper,
    0,
    0,
    init_QStyleOption,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QStyleOption,
    assign_QStyleOption,
    array_QStyleOption,
    copy_QStyleOption,
    release_QStyleOption,
    cast_QStyleOption,
    0,
    0,
    0
},
    0,
    0,
    0
};
