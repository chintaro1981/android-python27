/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.11.2 on Thu Jul 12 20:03:19 2012
 *
 * Copyright (c) 2010 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt.
 * 
 * This file may be used under the terms of the GNU General Public
 * License versions 2.0 or 3.0 as published by the Free Software
 * Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
 * included in the packaging of this file.  Alternatively you may (at
 * your option) use any later version of the GNU General Public
 * License if such license has been publicly approved by Riverbank
 * Computing Limited (or its successors, if any) and the KDE Free Qt
 * Foundation. In addition, as a special exception, Riverbank gives you
 * certain additional rights. These rights are described in the Riverbank
 * GPL Exception version 1.1, which can be found in the file
 * GPL_EXCEPTION.txt in this package.
 * 
 * Please review the following information to ensure GNU General
 * Public Licensing requirements will be met:
 * http://trolltech.com/products/qt/licenses/licensing/opensource/. If
 * you are unsure which license is appropriate for your use, please
 * review the following information:
 * http://trolltech.com/products/qt/licenses/licensing/licensingoverview
 * or contact the sales department at sales@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtGui.h"

#line 38 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicslayoutitem.sip"
#include <qgraphicslayoutitem.h>
#line 39 "sipQtGuiQGraphicsLayoutItem.cpp"

#line 44 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 43 "sipQtGuiQGraphicsLayoutItem.cpp"
#line 98 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qsize.sip"
#include <qsize.h>
#line 46 "sipQtGuiQGraphicsLayoutItem.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 49 "sipQtGuiQGraphicsLayoutItem.cpp"
#line 158 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qrect.sip"
#include <qrect.h>
#line 52 "sipQtGuiQGraphicsLayoutItem.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qsizepolicy.sip"
#include <qsizepolicy.h>
#line 55 "sipQtGuiQGraphicsLayoutItem.cpp"


class sipQGraphicsLayoutItem : public QGraphicsLayoutItem
{
public:
    sipQGraphicsLayoutItem(QGraphicsLayoutItem *,bool);
    virtual ~sipQGraphicsLayoutItem();

    /*
     * There is a public method for every protected method visible from
     * this class.
     */
    QSizeF sipProtect_sizeHint(Qt::SizeHint,const QSizeF&) const;
    void sipProtect_setGraphicsItem(QGraphicsItem *);
    void sipProtect_setOwnedByLayout(bool);

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void setGeometry(const QRectF&);
    void getContentsMargins(qreal *,qreal *,qreal *,qreal *) const;
    void updateGeometry();
    QSizeF sizeHint(Qt::SizeHint,const QSizeF&) const;

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQGraphicsLayoutItem(const sipQGraphicsLayoutItem &);
    sipQGraphicsLayoutItem &operator = (const sipQGraphicsLayoutItem &);

    char sipPyMethods[4];
};

sipQGraphicsLayoutItem::sipQGraphicsLayoutItem(QGraphicsLayoutItem *a0,bool a1): QGraphicsLayoutItem(a0,a1), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsLayoutItem::~sipQGraphicsLayoutItem()
{
    sipCommonDtor(sipPySelf);
}

void sipQGraphicsLayoutItem::setGeometry(const QRectF& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_setGeometry);

    if (!meth)
    {
        QGraphicsLayoutItem::setGeometry(a0);
        return;
    }

    extern void sipVH_QtGui_137(sip_gilstate_t,PyObject *,const QRectF&);

    sipVH_QtGui_137(sipGILState,meth,a0);
}

void sipQGraphicsLayoutItem::getContentsMargins(qreal *a0,qreal *a1,qreal *a2,qreal *a3) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[1]),sipPySelf,NULL,sipName_getContentsMargins);

    if (!meth)
    {
        QGraphicsLayoutItem::getContentsMargins(a0,a1,a2,a3);
        return;
    }

    extern void sipVH_QtGui_197(sip_gilstate_t,PyObject *,qreal *,qreal *,qreal *,qreal *);

    sipVH_QtGui_197(sipGILState,meth,a0,a1,a2,a3);
}

void sipQGraphicsLayoutItem::updateGeometry()
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,NULL,sipName_updateGeometry);

    if (!meth)
    {
        QGraphicsLayoutItem::updateGeometry();
        return;
    }

    typedef void (*sipVH_QtCore_11)(sip_gilstate_t,PyObject *);

    ((sipVH_QtCore_11)(sipModuleAPI_QtGui_QtCore->em_virthandlers[11]))(sipGILState,meth);
}

QSizeF sipQGraphicsLayoutItem::sizeHint(Qt::SizeHint a0,const QSizeF& a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[3]),sipPySelf,sipName_QGraphicsLayoutItem,sipName_sizeHint);

    if (!meth)
        return QSizeF();

    extern QSizeF sipVH_QtGui_192(sip_gilstate_t,PyObject *,Qt::SizeHint,const QSizeF&);

    return sipVH_QtGui_192(sipGILState,meth,a0,a1);
}

QSizeF sipQGraphicsLayoutItem::sipProtect_sizeHint(Qt::SizeHint a0,const QSizeF& a1) const
{
    return sizeHint(a0,a1);
}

void sipQGraphicsLayoutItem::sipProtect_setGraphicsItem(QGraphicsItem *a0)
{
    QGraphicsLayoutItem::setGraphicsItem(a0);
}

void sipQGraphicsLayoutItem::sipProtect_setOwnedByLayout(bool a0)
{
    QGraphicsLayoutItem::setOwnedByLayout(a0);
}


extern "C" {static PyObject *meth_QGraphicsLayoutItem_setSizePolicy(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_setSizePolicy(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const QSizePolicy * a0;
        QGraphicsLayoutItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ9", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, sipType_QSizePolicy, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setSizePolicy(*a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        QSizePolicy::Policy a0;
        QSizePolicy::Policy a1;
        QSizePolicy::ControlType a2 = QSizePolicy::DefaultType;
        QGraphicsLayoutItem *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            sipName_controlType,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BEE|E", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, sipType_QSizePolicy_Policy, &a0, sipType_QSizePolicy_Policy, &a1, sipType_QSizePolicy_ControlType, &a2))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setSizePolicy(a0,a1,a2);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_setSizePolicy, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsLayoutItem_sizePolicy(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_sizePolicy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
            QSizePolicy *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QSizePolicy(sipCpp->sizePolicy());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QSizePolicy,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_sizePolicy, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsLayoutItem_setMinimumSize(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_setMinimumSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QSizeF * a0;
        QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, sipType_QSizeF, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setMinimumSize(*a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        qreal a0;
        qreal a1;
        QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, &a0, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setMinimumSize(a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_setMinimumSize, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsLayoutItem_minimumSize(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_minimumSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
            QSizeF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QSizeF(sipCpp->minimumSize());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QSizeF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_minimumSize, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsLayoutItem_setMinimumWidth(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_setMinimumWidth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        qreal a0;
        QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setMinimumWidth(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_setMinimumWidth, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsLayoutItem_setMinimumHeight(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_setMinimumHeight(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        qreal a0;
        QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setMinimumHeight(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_setMinimumHeight, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsLayoutItem_setPreferredSize(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_setPreferredSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QSizeF * a0;
        QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, sipType_QSizeF, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setPreferredSize(*a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        qreal a0;
        qreal a1;
        QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, &a0, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setPreferredSize(a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_setPreferredSize, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsLayoutItem_preferredSize(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_preferredSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
            QSizeF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QSizeF(sipCpp->preferredSize());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QSizeF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_preferredSize, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsLayoutItem_setPreferredWidth(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_setPreferredWidth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        qreal a0;
        QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setPreferredWidth(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_setPreferredWidth, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsLayoutItem_setPreferredHeight(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_setPreferredHeight(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        qreal a0;
        QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setPreferredHeight(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_setPreferredHeight, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsLayoutItem_setMaximumSize(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_setMaximumSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QSizeF * a0;
        QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, sipType_QSizeF, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setMaximumSize(*a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        qreal a0;
        qreal a1;
        QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, &a0, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setMaximumSize(a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_setMaximumSize, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsLayoutItem_maximumSize(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_maximumSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
            QSizeF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QSizeF(sipCpp->maximumSize());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QSizeF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_maximumSize, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsLayoutItem_setMaximumWidth(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_setMaximumWidth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        qreal a0;
        QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setMaximumWidth(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_setMaximumWidth, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsLayoutItem_setMaximumHeight(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_setMaximumHeight(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        qreal a0;
        QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setMaximumHeight(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_setMaximumHeight, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsLayoutItem_setGeometry(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_setGeometry(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QRectF * a0;
        QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, sipType_QRectF, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsLayoutItem::setGeometry(*a0) : sipCpp->setGeometry(*a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_setGeometry, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsLayoutItem_geometry(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_geometry(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
            QRectF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->geometry());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_geometry, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsLayoutItem_getContentsMargins(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_getContentsMargins(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsLayoutItem::getContentsMargins(&a0,&a1,&a2,&a3) : sipCpp->getContentsMargins(&a0,&a1,&a2,&a3));
            Py_END_ALLOW_THREADS

            return sipBuildResult(0,"(dddd)",a0,a1,a2,a3);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_getContentsMargins, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsLayoutItem_contentsRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_contentsRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
            QRectF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->contentsRect());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_contentsRect, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsLayoutItem_effectiveSizeHint(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_effectiveSizeHint(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        Qt::SizeHint a0;
        const QSizeF& a1def = QSizeF();
        const QSizeF * a1 = &a1def;
        QGraphicsLayoutItem *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_constraint,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BE|J9", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, sipType_Qt_SizeHint, &a0, sipType_QSizeF, &a1))
        {
            QSizeF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QSizeF(sipCpp->effectiveSizeHint(a0,*a1));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QSizeF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_effectiveSizeHint, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsLayoutItem_updateGeometry(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_updateGeometry(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsLayoutItem::updateGeometry() : sipCpp->updateGeometry());
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_updateGeometry, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsLayoutItem_parentLayoutItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_parentLayoutItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
            QGraphicsLayoutItem *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->parentLayoutItem();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsLayoutItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_parentLayoutItem, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsLayoutItem_setParentLayoutItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_setParentLayoutItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsLayoutItem * a0;
        sipWrapper *sipOwner = 0;
        QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJH", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, sipType_QGraphicsLayoutItem, &a0, &sipOwner))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setParentLayoutItem(a0);
            Py_END_ALLOW_THREADS

            if (sipOwner)
                sipTransferTo(sipSelf, (PyObject *)sipOwner);
            else
                sipTransferBack(sipSelf);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_setParentLayoutItem, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsLayoutItem_isLayout(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_isLayout(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->isLayout();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_isLayout, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsLayoutItem_minimumWidth(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_minimumWidth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
            qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->minimumWidth();
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_minimumWidth, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsLayoutItem_minimumHeight(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_minimumHeight(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
            qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->minimumHeight();
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_minimumHeight, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsLayoutItem_preferredWidth(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_preferredWidth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
            qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->preferredWidth();
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_preferredWidth, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsLayoutItem_preferredHeight(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_preferredHeight(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
            qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->preferredHeight();
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_preferredHeight, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsLayoutItem_maximumWidth(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_maximumWidth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
            qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->maximumWidth();
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_maximumWidth, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsLayoutItem_maximumHeight(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_maximumHeight(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
            qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->maximumHeight();
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_maximumHeight, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsLayoutItem_graphicsItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_graphicsItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
            QGraphicsItem *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->graphicsItem();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_graphicsItem, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsLayoutItem_ownedByLayout(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_ownedByLayout(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->ownedByLayout();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_ownedByLayout, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsLayoutItem_sizeHint(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_sizeHint(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    PyObject *sipOrigSelf = sipSelf;

    {
        Qt::SizeHint a0;
        const QSizeF& a1def = QSizeF();
        const QSizeF * a1 = &a1def;
        sipQGraphicsLayoutItem *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_constraint,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BE|J9", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, sipType_Qt_SizeHint, &a0, sipType_QSizeF, &a1))
        {
            QSizeF *sipRes;

            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QGraphicsLayoutItem, sipName_sizeHint);
                return NULL;
            }

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QSizeF(sipCpp->sipProtect_sizeHint(a0,*a1));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QSizeF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_sizeHint, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsLayoutItem_setGraphicsItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_setGraphicsItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsItem * a0;
        sipQGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, sipType_QGraphicsItem, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtect_setGraphicsItem(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_setGraphicsItem, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsLayoutItem_setOwnedByLayout(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLayoutItem_setOwnedByLayout(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
        sipQGraphicsLayoutItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QGraphicsLayoutItem, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtect_setOwnedByLayout(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLayoutItem, sipName_setOwnedByLayout, NULL);

    return NULL;
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_QGraphicsLayoutItem(void *, const sipTypeDef *);}
static void *cast_QGraphicsLayoutItem(void *ptr, const sipTypeDef *targetType)
{
    if (targetType == sipType_QGraphicsLayoutItem)
        return ptr;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_QGraphicsLayoutItem(void *, int);}
static void release_QGraphicsLayoutItem(void *sipCppV,int sipState)
{
    Py_BEGIN_ALLOW_THREADS

    if (sipState & SIP_DERIVED_CLASS)
        delete reinterpret_cast<sipQGraphicsLayoutItem *>(sipCppV);
    else
        delete reinterpret_cast<QGraphicsLayoutItem *>(sipCppV);

    Py_END_ALLOW_THREADS
}


extern "C" {static void dealloc_QGraphicsLayoutItem(sipSimpleWrapper *);}
static void dealloc_QGraphicsLayoutItem(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerived(sipSelf))
        reinterpret_cast<sipQGraphicsLayoutItem *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsPyOwned(sipSelf))
    {
        release_QGraphicsLayoutItem(sipGetAddress(sipSelf),sipSelf->flags);
    }
}


extern "C" {static void *init_QGraphicsLayoutItem(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_QGraphicsLayoutItem(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQGraphicsLayoutItem *sipCpp = 0;

    {
        QGraphicsLayoutItem * a0 = 0;
        bool a1 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
            sipName_isLayout,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JHb", sipType_QGraphicsLayoutItem, &a0, sipOwner, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new sipQGraphicsLayoutItem(a0,a1);
            Py_END_ALLOW_THREADS

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


static PyMethodDef methods_QGraphicsLayoutItem[] = {
    {SIP_MLNAME_CAST(sipName_contentsRect), meth_QGraphicsLayoutItem_contentsRect, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_effectiveSizeHint), (PyCFunction)meth_QGraphicsLayoutItem_effectiveSizeHint, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_geometry), meth_QGraphicsLayoutItem_geometry, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_getContentsMargins), meth_QGraphicsLayoutItem_getContentsMargins, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_graphicsItem), meth_QGraphicsLayoutItem_graphicsItem, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_isLayout), meth_QGraphicsLayoutItem_isLayout, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_maximumHeight), meth_QGraphicsLayoutItem_maximumHeight, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_maximumSize), meth_QGraphicsLayoutItem_maximumSize, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_maximumWidth), meth_QGraphicsLayoutItem_maximumWidth, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_minimumHeight), meth_QGraphicsLayoutItem_minimumHeight, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_minimumSize), meth_QGraphicsLayoutItem_minimumSize, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_minimumWidth), meth_QGraphicsLayoutItem_minimumWidth, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_ownedByLayout), meth_QGraphicsLayoutItem_ownedByLayout, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_parentLayoutItem), meth_QGraphicsLayoutItem_parentLayoutItem, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_preferredHeight), meth_QGraphicsLayoutItem_preferredHeight, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_preferredSize), meth_QGraphicsLayoutItem_preferredSize, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_preferredWidth), meth_QGraphicsLayoutItem_preferredWidth, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setGeometry), meth_QGraphicsLayoutItem_setGeometry, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setGraphicsItem), meth_QGraphicsLayoutItem_setGraphicsItem, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setMaximumHeight), meth_QGraphicsLayoutItem_setMaximumHeight, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setMaximumSize), meth_QGraphicsLayoutItem_setMaximumSize, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setMaximumWidth), meth_QGraphicsLayoutItem_setMaximumWidth, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setMinimumHeight), meth_QGraphicsLayoutItem_setMinimumHeight, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setMinimumSize), meth_QGraphicsLayoutItem_setMinimumSize, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setMinimumWidth), meth_QGraphicsLayoutItem_setMinimumWidth, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setOwnedByLayout), meth_QGraphicsLayoutItem_setOwnedByLayout, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setParentLayoutItem), meth_QGraphicsLayoutItem_setParentLayoutItem, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setPreferredHeight), meth_QGraphicsLayoutItem_setPreferredHeight, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setPreferredSize), meth_QGraphicsLayoutItem_setPreferredSize, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setPreferredWidth), meth_QGraphicsLayoutItem_setPreferredWidth, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setSizePolicy), (PyCFunction)meth_QGraphicsLayoutItem_setSizePolicy, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_sizeHint), (PyCFunction)meth_QGraphicsLayoutItem_sizeHint, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_sizePolicy), meth_QGraphicsLayoutItem_sizePolicy, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_updateGeometry), meth_QGraphicsLayoutItem_updateGeometry, METH_VARARGS, NULL}
};


pyqt4ClassTypeDef sipTypeDef_QtGui_QGraphicsLayoutItem = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
        sipNameNr_QGraphicsLayoutItem,
        {0}
    },
    {
        sipNameNr_QGraphicsLayoutItem,
        {0, 0, 1},
        34, methods_QGraphicsLayoutItem,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    0,
    sipNameNr_PyQt4_QtCore_pyqtWrapperType,
    -1,
    0,
    0,
    init_QGraphicsLayoutItem,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QGraphicsLayoutItem,
    0,
    0,
    0,
    release_QGraphicsLayoutItem,
    cast_QGraphicsLayoutItem,
    0,
    0,
    0
},
    0,
    0,
    0
};
