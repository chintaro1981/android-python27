/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.11.2 on Thu Jul 12 20:03:19 2012
 *
 * Copyright (c) 2010 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt.
 * 
 * This file may be used under the terms of the GNU General Public
 * License versions 2.0 or 3.0 as published by the Free Software
 * Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
 * included in the packaging of this file.  Alternatively you may (at
 * your option) use any later version of the GNU General Public
 * License if such license has been publicly approved by Riverbank
 * Computing Limited (or its successors, if any) and the KDE Free Qt
 * Foundation. In addition, as a special exception, Riverbank gives you
 * certain additional rights. These rights are described in the Riverbank
 * GPL Exception version 1.1, which can be found in the file
 * GPL_EXCEPTION.txt in this package.
 * 
 * Please review the following information to ensure GNU General
 * Public Licensing requirements will be met:
 * http://trolltech.com/products/qt/licenses/licensing/opensource/. If
 * you are unsure which license is appropriate for your use, please
 * review the following information:
 * http://trolltech.com/products/qt/licenses/licensing/licensingoverview
 * or contact the sales department at sales@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtGui.h"

#line 38 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicsproxywidget.sip"
#include <qgraphicsproxywidget.h>
#line 39 "sipQtGuiQGraphicsProxyWidget.cpp"

#line 44 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 43 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 46 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qwidget.sip"
#include <qwidget.h>
#line 49 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 198 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 52 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 228 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 55 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 98 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qsize.sip"
#include <qsize.h>
#line 58 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 61 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 372 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 64 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 344 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 67 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 88 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 70 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 58 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 73 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 36 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 76 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 145 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 79 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 115 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 82 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 464 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 85 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 453 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 88 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 39 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qobject.sip"
#include <qobject.h>
#line 91 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 41 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 94 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 611 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 99 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 1760 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qstyleoption.sip"
#include <qstyleoption.h>
#line 102 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 158 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qrect.sip"
#include <qrect.h>
#line 105 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 249 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 108 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 431 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 111 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 92 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qpoint.sip"
#include <qpoint.h>
#line 114 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qstyleoption.sip"
#include <qstyleoption.h>
#line 117 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qpainterpath.sip"
#include <qpainterpath.h>
#line 55 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qpainterpath.sip"
#include <qpainterpath.h>
#line 122 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 125 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qlist.sip"
#include <qlist.h>
#line 125 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 36 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qaction.sip"
#include <qaction.h>
#line 128 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qkeysequence.sip"
#include <qkeysequence.h>
#line 131 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 192 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicswidget.sip"
#include <qgraphicswidget.h>
#line 134 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 41 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qstring.sip"
#include <qstring.h>
#line 137 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qpalette.sip"
#include <qpalette.h>
#line 140 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qfont.sip"
#include <qfont.h>
#line 143 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qstyle.sip"
#include <qstyle.h>
#line 146 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 38 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicslayout.sip"
#include <qgraphicslayout.h>
#line 149 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 152 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 315 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 155 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 303 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 158 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 38 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qlist.sip"
#include <qlist.h>
#line 161 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 42 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 164 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 125 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qlist.sip"
#include <qlist.h>
#line 167 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 36 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qthread.sip"
#include <qthread.h>
#line 170 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qregexp.sip"
#include <qregexp.h>
#line 173 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 36 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 176 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 179 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 125 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qlist.sip"
#include <qlist.h>
#line 182 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 38 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicstransform.sip"
#include <qgraphicstransform.h>
#line 185 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 44 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicseffect.sip"
#include <qgraphicseffect.h>
#line 188 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 1035 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 191 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 44 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qtransform.sip"
#include <qtransform.h>
#line 194 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qregion.sip"
#include <qregion.h>
#line 197 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qsize.sip"
#include <qsize.h>
#line 200 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 125 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qlist.sip"
#include <qlist.h>
#line 203 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 504 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 522 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 208 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 336 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qpolygon.sip"
#include <qpolygon.h>
#line 211 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qmatrix.sip"
#include <qmatrix.h>
#line 214 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 217 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qcursor.sip"
#include <qcursor.h>
#line 220 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 44 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 223 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 1000 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 226 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 44 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicsscene.sip"
#include <qgraphicsscene.h>
#line 229 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 38 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicslayoutitem.sip"
#include <qgraphicslayoutitem.h>
#line 232 "sipQtGuiQGraphicsProxyWidget.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qsizepolicy.sip"
#include <qsizepolicy.h>
#line 235 "sipQtGuiQGraphicsProxyWidget.cpp"


class sipQGraphicsProxyWidget : public QGraphicsProxyWidget
{
public:
    sipQGraphicsProxyWidget(QGraphicsItem *,Qt::WindowFlags);
    virtual ~sipQGraphicsProxyWidget();

    int qt_metacall(QMetaObject::Call,int,void **);
    void *qt_metacast(const char *);
    const QMetaObject *metaObject() const;

    /*
     * There is a public method for every protected method visible from
     * this class.
     */
    void sipProtect_setGraphicsItem(QGraphicsItem *);
    void sipProtect_setOwnedByLayout(bool);
    void sipProtectVirt_inputMethodEvent(bool,QInputMethodEvent *);
    QVariant sipProtectVirt_inputMethodQuery(bool,Qt::InputMethodQuery) const;
    void sipProtect_prepareGeometryChange();
    bool sipProtectVirt_sceneEventFilter(bool,QGraphicsItem *,QEvent *);
    QObject * sipProtect_sender() const;
    int sipProtect_receivers(const char *) const;
    void sipProtectVirt_timerEvent(bool,QTimerEvent *);
    void sipProtectVirt_childEvent(bool,QChildEvent *);
    void sipProtectVirt_customEvent(bool,QEvent *);
    void sipProtectVirt_connectNotify(bool,const char *);
    void sipProtectVirt_disconnectNotify(bool,const char *);
    void sipProtect_updateMicroFocus();
    void sipProtectVirt_initStyleOption(bool,QStyleOption *) const;
    void sipProtectVirt_updateGeometry(bool);
    bool sipProtectVirt_sceneEvent(bool,QEvent *);
    bool sipProtectVirt_windowFrameEvent(bool,QEvent *);
    Qt::WindowFrameSection sipProtectVirt_windowFrameSectionAt(bool,const QPointF&) const;
    void sipProtectVirt_changeEvent(bool,QEvent *);
    void sipProtectVirt_closeEvent(bool,QCloseEvent *);
    void sipProtectVirt_moveEvent(bool,QGraphicsSceneMoveEvent *);
    void sipProtectVirt_polishEvent(bool);
    void sipProtectVirt_grabKeyboardEvent(bool,QEvent *);
    void sipProtectVirt_ungrabKeyboardEvent(bool,QEvent *);
    QVariant sipProtectVirt_itemChange(bool,QGraphicsItem::GraphicsItemChange,const QVariant&);
    bool sipProtectVirt_event(bool,QEvent *);
    bool sipProtectVirt_eventFilter(bool,QObject *,QEvent *);
    void sipProtectVirt_showEvent(bool,QShowEvent *);
    void sipProtectVirt_hideEvent(bool,QHideEvent *);
    void sipProtectVirt_contextMenuEvent(bool,QGraphicsSceneContextMenuEvent *);
    void sipProtectVirt_hoverEnterEvent(bool,QGraphicsSceneHoverEvent *);
    void sipProtectVirt_hoverLeaveEvent(bool,QGraphicsSceneHoverEvent *);
    void sipProtectVirt_hoverMoveEvent(bool,QGraphicsSceneHoverEvent *);
    void sipProtectVirt_grabMouseEvent(bool,QEvent *);
    void sipProtectVirt_ungrabMouseEvent(bool,QEvent *);
    void sipProtectVirt_mouseMoveEvent(bool,QGraphicsSceneMouseEvent *);
    void sipProtectVirt_mousePressEvent(bool,QGraphicsSceneMouseEvent *);
    void sipProtectVirt_mouseReleaseEvent(bool,QGraphicsSceneMouseEvent *);
    void sipProtectVirt_mouseDoubleClickEvent(bool,QGraphicsSceneMouseEvent *);
    void sipProtectVirt_wheelEvent(bool,QGraphicsSceneWheelEvent *);
    void sipProtectVirt_keyPressEvent(bool,QKeyEvent *);
    void sipProtectVirt_keyReleaseEvent(bool,QKeyEvent *);
    void sipProtectVirt_focusInEvent(bool,QFocusEvent *);
    void sipProtectVirt_focusOutEvent(bool,QFocusEvent *);
    bool sipProtectVirt_focusNextPrevChild(bool,bool);
    QSizeF sipProtectVirt_sizeHint(bool,Qt::SizeHint,const QSizeF&) const;
    void sipProtectVirt_resizeEvent(bool,QGraphicsSceneResizeEvent *);
    void sipProtectVirt_dragEnterEvent(bool,QGraphicsSceneDragDropEvent *);
    void sipProtectVirt_dragLeaveEvent(bool,QGraphicsSceneDragDropEvent *);
    void sipProtectVirt_dragMoveEvent(bool,QGraphicsSceneDragDropEvent *);
    void sipProtectVirt_dropEvent(bool,QGraphicsSceneDragDropEvent *);
    QGraphicsProxyWidget * sipProtect_newProxyWidget(const QWidget *);

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void setGeometry(const QRectF&);
    void paint(QPainter *,const QStyleOptionGraphicsItem *,QWidget *);
    int type() const;
    QVariant itemChange(QGraphicsItem::GraphicsItemChange,const QVariant&);
    bool event(QEvent *);
    bool eventFilter(QObject *,QEvent *);
    void showEvent(QShowEvent *);
    void hideEvent(QHideEvent *);
    void contextMenuEvent(QGraphicsSceneContextMenuEvent *);
    void hoverEnterEvent(QGraphicsSceneHoverEvent *);
    void hoverLeaveEvent(QGraphicsSceneHoverEvent *);
    void hoverMoveEvent(QGraphicsSceneHoverEvent *);
    void grabMouseEvent(QEvent *);
    void ungrabMouseEvent(QEvent *);
    void mouseMoveEvent(QGraphicsSceneMouseEvent *);
    void mousePressEvent(QGraphicsSceneMouseEvent *);
    void mouseReleaseEvent(QGraphicsSceneMouseEvent *);
    void mouseDoubleClickEvent(QGraphicsSceneMouseEvent *);
    void wheelEvent(QGraphicsSceneWheelEvent *);
    void keyPressEvent(QKeyEvent *);
    void keyReleaseEvent(QKeyEvent *);
    void focusInEvent(QFocusEvent *);
    void focusOutEvent(QFocusEvent *);
    bool focusNextPrevChild(bool);
    QSizeF sizeHint(Qt::SizeHint,const QSizeF&) const;
    void resizeEvent(QGraphicsSceneResizeEvent *);
    void dragEnterEvent(QGraphicsSceneDragDropEvent *);
    void dragLeaveEvent(QGraphicsSceneDragDropEvent *);
    void dragMoveEvent(QGraphicsSceneDragDropEvent *);
    void dropEvent(QGraphicsSceneDragDropEvent *);
    void getContentsMargins(qreal *,qreal *,qreal *,qreal *) const;
    void paintWindowFrame(QPainter *,const QStyleOptionGraphicsItem *,QWidget *);
    QRectF boundingRect() const;
    QPainterPath shape() const;
    void initStyleOption(QStyleOption *) const;
    void updateGeometry();
    bool sceneEvent(QEvent *);
    bool windowFrameEvent(QEvent *);
    Qt::WindowFrameSection windowFrameSectionAt(const QPointF&) const;
    void changeEvent(QEvent *);
    void closeEvent(QCloseEvent *);
    void moveEvent(QGraphicsSceneMoveEvent *);
    void polishEvent();
    void grabKeyboardEvent(QEvent *);
    void ungrabKeyboardEvent(QEvent *);
    void timerEvent(QTimerEvent *);
    void childEvent(QChildEvent *);
    void customEvent(QEvent *);
    void connectNotify(const char *);
    void disconnectNotify(const char *);
    void advance(int);
    bool contains(const QPointF&) const;
    bool collidesWithItem(const QGraphicsItem *,Qt::ItemSelectionMode) const;
    bool collidesWithPath(const QPainterPath&,Qt::ItemSelectionMode) const;
    bool isObscuredBy(const QGraphicsItem *) const;
    QPainterPath opaqueArea() const;
    void inputMethodEvent(QInputMethodEvent *);
    QVariant inputMethodQuery(Qt::InputMethodQuery) const;
    bool sceneEventFilter(QGraphicsItem *,QEvent *);

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQGraphicsProxyWidget(const sipQGraphicsProxyWidget &);
    sipQGraphicsProxyWidget &operator = (const sipQGraphicsProxyWidget &);

    char sipPyMethods[59];
};

sipQGraphicsProxyWidget::sipQGraphicsProxyWidget(QGraphicsItem *a0,Qt::WindowFlags a1): QGraphicsProxyWidget(a0,a1), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsProxyWidget::~sipQGraphicsProxyWidget()
{
    sipCommonDtor(sipPySelf);
}

const QMetaObject *sipQGraphicsProxyWidget::metaObject() const
{
    return sip_QtGui_qt_metaobject(sipPySelf,sipType_QGraphicsProxyWidget);
}

int sipQGraphicsProxyWidget::qt_metacall(QMetaObject::Call _c,int _id,void **_a)
{
    _id = QGraphicsProxyWidget::qt_metacall(_c,_id,_a);

    if (_id >= 0)
        _id = sip_QtGui_qt_metacall(sipPySelf,sipType_QGraphicsProxyWidget,_c,_id,_a);

    return _id;
}

void *sipQGraphicsProxyWidget::qt_metacast(const char *_clname)
{
    return (sip_QtGui_qt_metacast && sip_QtGui_qt_metacast(sipPySelf,sipType_QGraphicsProxyWidget,_clname)) ? this : QGraphicsProxyWidget::qt_metacast(_clname);
}

void sipQGraphicsProxyWidget::setGeometry(const QRectF& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_setGeometry);

    if (!meth)
    {
        QGraphicsProxyWidget::setGeometry(a0);
        return;
    }

    extern void sipVH_QtGui_137(sip_gilstate_t,PyObject *,const QRectF&);

    sipVH_QtGui_137(sipGILState,meth,a0);
}

void sipQGraphicsProxyWidget::paint(QPainter *a0,const QStyleOptionGraphicsItem *a1,QWidget *a2)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[1],sipPySelf,NULL,sipName_paint);

    if (!meth)
    {
        QGraphicsProxyWidget::paint(a0,a1,a2);
        return;
    }

    extern void sipVH_QtGui_196(sip_gilstate_t,PyObject *,QPainter *,const QStyleOptionGraphicsItem *,QWidget *);

    sipVH_QtGui_196(sipGILState,meth,a0,a1,a2);
}

int sipQGraphicsProxyWidget::type() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[2]),sipPySelf,NULL,sipName_type);

    if (!meth)
        return QGraphicsProxyWidget::type();

    typedef int (*sipVH_QtCore_6)(sip_gilstate_t,PyObject *);

    return ((sipVH_QtCore_6)(sipModuleAPI_QtGui_QtCore->em_virthandlers[6]))(sipGILState,meth);
}

QVariant sipQGraphicsProxyWidget::itemChange(QGraphicsItem::GraphicsItemChange a0,const QVariant& a1)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[3],sipPySelf,NULL,sipName_itemChange);

    if (!meth)
        return QGraphicsProxyWidget::itemChange(a0,a1);

    extern QVariant sipVH_QtGui_191(sip_gilstate_t,PyObject *,QGraphicsItem::GraphicsItemChange,const QVariant&);

    return sipVH_QtGui_191(sipGILState,meth,a0,a1);
}

bool sipQGraphicsProxyWidget::event(QEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[4],sipPySelf,NULL,sipName_event);

    if (!meth)
        return QGraphicsProxyWidget::event(a0);

    typedef bool (*sipVH_QtCore_5)(sip_gilstate_t,PyObject *,QEvent *);

    return ((sipVH_QtCore_5)(sipModuleAPI_QtGui_QtCore->em_virthandlers[5]))(sipGILState,meth,a0);
}

bool sipQGraphicsProxyWidget::eventFilter(QObject *a0,QEvent *a1)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[5],sipPySelf,NULL,sipName_eventFilter);

    if (!meth)
        return QGraphicsProxyWidget::eventFilter(a0,a1);

    typedef bool (*sipVH_QtCore_18)(sip_gilstate_t,PyObject *,QObject *,QEvent *);

    return ((sipVH_QtCore_18)(sipModuleAPI_QtGui_QtCore->em_virthandlers[18]))(sipGILState,meth,a0,a1);
}

void sipQGraphicsProxyWidget::showEvent(QShowEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[6],sipPySelf,NULL,sipName_showEvent);

    if (!meth)
    {
        QGraphicsProxyWidget::showEvent(a0);
        return;
    }

    extern void sipVH_QtGui_2(sip_gilstate_t,PyObject *,QShowEvent *);

    sipVH_QtGui_2(sipGILState,meth,a0);
}

void sipQGraphicsProxyWidget::hideEvent(QHideEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[7],sipPySelf,NULL,sipName_hideEvent);

    if (!meth)
    {
        QGraphicsProxyWidget::hideEvent(a0);
        return;
    }

    extern void sipVH_QtGui_1(sip_gilstate_t,PyObject *,QHideEvent *);

    sipVH_QtGui_1(sipGILState,meth,a0);
}

void sipQGraphicsProxyWidget::contextMenuEvent(QGraphicsSceneContextMenuEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[8],sipPySelf,NULL,sipName_contextMenuEvent);

    if (!meth)
    {
        QGraphicsProxyWidget::contextMenuEvent(a0);
        return;
    }

    extern void sipVH_QtGui_203(sip_gilstate_t,PyObject *,QGraphicsSceneContextMenuEvent *);

    sipVH_QtGui_203(sipGILState,meth,a0);
}

void sipQGraphicsProxyWidget::hoverEnterEvent(QGraphicsSceneHoverEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[9],sipPySelf,NULL,sipName_hoverEnterEvent);

    if (!meth)
    {
        QGraphicsProxyWidget::hoverEnterEvent(a0);
        return;
    }

    extern void sipVH_QtGui_187(sip_gilstate_t,PyObject *,QGraphicsSceneHoverEvent *);

    sipVH_QtGui_187(sipGILState,meth,a0);
}

void sipQGraphicsProxyWidget::hoverLeaveEvent(QGraphicsSceneHoverEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[10],sipPySelf,NULL,sipName_hoverLeaveEvent);

    if (!meth)
    {
        QGraphicsProxyWidget::hoverLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_187(sip_gilstate_t,PyObject *,QGraphicsSceneHoverEvent *);

    sipVH_QtGui_187(sipGILState,meth,a0);
}

void sipQGraphicsProxyWidget::hoverMoveEvent(QGraphicsSceneHoverEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[11],sipPySelf,NULL,sipName_hoverMoveEvent);

    if (!meth)
    {
        QGraphicsProxyWidget::hoverMoveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_187(sip_gilstate_t,PyObject *,QGraphicsSceneHoverEvent *);

    sipVH_QtGui_187(sipGILState,meth,a0);
}

void sipQGraphicsProxyWidget::grabMouseEvent(QEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[12],sipPySelf,NULL,sipName_grabMouseEvent);

    if (!meth)
    {
        QGraphicsProxyWidget::grabMouseEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_17)(sip_gilstate_t,PyObject *,QEvent *);

    ((sipVH_QtCore_17)(sipModuleAPI_QtGui_QtCore->em_virthandlers[17]))(sipGILState,meth,a0);
}

void sipQGraphicsProxyWidget::ungrabMouseEvent(QEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[13],sipPySelf,NULL,sipName_ungrabMouseEvent);

    if (!meth)
    {
        QGraphicsProxyWidget::ungrabMouseEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_17)(sip_gilstate_t,PyObject *,QEvent *);

    ((sipVH_QtCore_17)(sipModuleAPI_QtGui_QtCore->em_virthandlers[17]))(sipGILState,meth,a0);
}

void sipQGraphicsProxyWidget::mouseMoveEvent(QGraphicsSceneMouseEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[14],sipPySelf,NULL,sipName_mouseMoveEvent);

    if (!meth)
    {
        QGraphicsProxyWidget::mouseMoveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_200(sip_gilstate_t,PyObject *,QGraphicsSceneMouseEvent *);

    sipVH_QtGui_200(sipGILState,meth,a0);
}

void sipQGraphicsProxyWidget::mousePressEvent(QGraphicsSceneMouseEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[15],sipPySelf,NULL,sipName_mousePressEvent);

    if (!meth)
    {
        QGraphicsProxyWidget::mousePressEvent(a0);
        return;
    }

    extern void sipVH_QtGui_200(sip_gilstate_t,PyObject *,QGraphicsSceneMouseEvent *);

    sipVH_QtGui_200(sipGILState,meth,a0);
}

void sipQGraphicsProxyWidget::mouseReleaseEvent(QGraphicsSceneMouseEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[16],sipPySelf,NULL,sipName_mouseReleaseEvent);

    if (!meth)
    {
        QGraphicsProxyWidget::mouseReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtGui_200(sip_gilstate_t,PyObject *,QGraphicsSceneMouseEvent *);

    sipVH_QtGui_200(sipGILState,meth,a0);
}

void sipQGraphicsProxyWidget::mouseDoubleClickEvent(QGraphicsSceneMouseEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[17],sipPySelf,NULL,sipName_mouseDoubleClickEvent);

    if (!meth)
    {
        QGraphicsProxyWidget::mouseDoubleClickEvent(a0);
        return;
    }

    extern void sipVH_QtGui_200(sip_gilstate_t,PyObject *,QGraphicsSceneMouseEvent *);

    sipVH_QtGui_200(sipGILState,meth,a0);
}

void sipQGraphicsProxyWidget::wheelEvent(QGraphicsSceneWheelEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[18],sipPySelf,NULL,sipName_wheelEvent);

    if (!meth)
    {
        QGraphicsProxyWidget::wheelEvent(a0);
        return;
    }

    extern void sipVH_QtGui_199(sip_gilstate_t,PyObject *,QGraphicsSceneWheelEvent *);

    sipVH_QtGui_199(sipGILState,meth,a0);
}

void sipQGraphicsProxyWidget::keyPressEvent(QKeyEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[19],sipPySelf,NULL,sipName_keyPressEvent);

    if (!meth)
    {
        QGraphicsProxyWidget::keyPressEvent(a0);
        return;
    }

    extern void sipVH_QtGui_25(sip_gilstate_t,PyObject *,QKeyEvent *);

    sipVH_QtGui_25(sipGILState,meth,a0);
}

void sipQGraphicsProxyWidget::keyReleaseEvent(QKeyEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[20],sipPySelf,NULL,sipName_keyReleaseEvent);

    if (!meth)
    {
        QGraphicsProxyWidget::keyReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtGui_25(sip_gilstate_t,PyObject *,QKeyEvent *);

    sipVH_QtGui_25(sipGILState,meth,a0);
}

void sipQGraphicsProxyWidget::focusInEvent(QFocusEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[21],sipPySelf,NULL,sipName_focusInEvent);

    if (!meth)
    {
        QGraphicsProxyWidget::focusInEvent(a0);
        return;
    }

    extern void sipVH_QtGui_24(sip_gilstate_t,PyObject *,QFocusEvent *);

    sipVH_QtGui_24(sipGILState,meth,a0);
}

void sipQGraphicsProxyWidget::focusOutEvent(QFocusEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[22],sipPySelf,NULL,sipName_focusOutEvent);

    if (!meth)
    {
        QGraphicsProxyWidget::focusOutEvent(a0);
        return;
    }

    extern void sipVH_QtGui_24(sip_gilstate_t,PyObject *,QFocusEvent *);

    sipVH_QtGui_24(sipGILState,meth,a0);
}

bool sipQGraphicsProxyWidget::focusNextPrevChild(bool a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[23],sipPySelf,NULL,sipName_focusNextPrevChild);

    if (!meth)
        return QGraphicsProxyWidget::focusNextPrevChild(a0);

    extern bool sipVH_QtGui_11(sip_gilstate_t,PyObject *,bool);

    return sipVH_QtGui_11(sipGILState,meth,a0);
}

QSizeF sipQGraphicsProxyWidget::sizeHint(Qt::SizeHint a0,const QSizeF& a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[24]),sipPySelf,NULL,sipName_sizeHint);

    if (!meth)
        return QGraphicsProxyWidget::sizeHint(a0,a1);

    extern QSizeF sipVH_QtGui_192(sip_gilstate_t,PyObject *,Qt::SizeHint,const QSizeF&);

    return sipVH_QtGui_192(sipGILState,meth,a0,a1);
}

void sipQGraphicsProxyWidget::resizeEvent(QGraphicsSceneResizeEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[25],sipPySelf,NULL,sipName_resizeEvent);

    if (!meth)
    {
        QGraphicsProxyWidget::resizeEvent(a0);
        return;
    }

    extern void sipVH_QtGui_188(sip_gilstate_t,PyObject *,QGraphicsSceneResizeEvent *);

    sipVH_QtGui_188(sipGILState,meth,a0);
}

void sipQGraphicsProxyWidget::dragEnterEvent(QGraphicsSceneDragDropEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[26],sipPySelf,NULL,sipName_dragEnterEvent);

    if (!meth)
    {
        QGraphicsProxyWidget::dragEnterEvent(a0);
        return;
    }

    extern void sipVH_QtGui_202(sip_gilstate_t,PyObject *,QGraphicsSceneDragDropEvent *);

    sipVH_QtGui_202(sipGILState,meth,a0);
}

void sipQGraphicsProxyWidget::dragLeaveEvent(QGraphicsSceneDragDropEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[27],sipPySelf,NULL,sipName_dragLeaveEvent);

    if (!meth)
    {
        QGraphicsProxyWidget::dragLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_202(sip_gilstate_t,PyObject *,QGraphicsSceneDragDropEvent *);

    sipVH_QtGui_202(sipGILState,meth,a0);
}

void sipQGraphicsProxyWidget::dragMoveEvent(QGraphicsSceneDragDropEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[28],sipPySelf,NULL,sipName_dragMoveEvent);

    if (!meth)
    {
        QGraphicsProxyWidget::dragMoveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_202(sip_gilstate_t,PyObject *,QGraphicsSceneDragDropEvent *);

    sipVH_QtGui_202(sipGILState,meth,a0);
}

void sipQGraphicsProxyWidget::dropEvent(QGraphicsSceneDragDropEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[29],sipPySelf,NULL,sipName_dropEvent);

    if (!meth)
    {
        QGraphicsProxyWidget::dropEvent(a0);
        return;
    }

    extern void sipVH_QtGui_202(sip_gilstate_t,PyObject *,QGraphicsSceneDragDropEvent *);

    sipVH_QtGui_202(sipGILState,meth,a0);
}

void sipQGraphicsProxyWidget::getContentsMargins(qreal *a0,qreal *a1,qreal *a2,qreal *a3) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[30]),sipPySelf,NULL,sipName_getContentsMargins);

    if (!meth)
    {
        QGraphicsWidget::getContentsMargins(a0,a1,a2,a3);
        return;
    }

    extern void sipVH_QtGui_197(sip_gilstate_t,PyObject *,qreal *,qreal *,qreal *,qreal *);

    sipVH_QtGui_197(sipGILState,meth,a0,a1,a2,a3);
}

void sipQGraphicsProxyWidget::paintWindowFrame(QPainter *a0,const QStyleOptionGraphicsItem *a1,QWidget *a2)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[31],sipPySelf,NULL,sipName_paintWindowFrame);

    if (!meth)
    {
        QGraphicsWidget::paintWindowFrame(a0,a1,a2);
        return;
    }

    extern void sipVH_QtGui_196(sip_gilstate_t,PyObject *,QPainter *,const QStyleOptionGraphicsItem *,QWidget *);

    sipVH_QtGui_196(sipGILState,meth,a0,a1,a2);
}

QRectF sipQGraphicsProxyWidget::boundingRect() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[32]),sipPySelf,NULL,sipName_boundingRect);

    if (!meth)
        return QGraphicsWidget::boundingRect();

    extern QRectF sipVH_QtGui_195(sip_gilstate_t,PyObject *);

    return sipVH_QtGui_195(sipGILState,meth);
}

QPainterPath sipQGraphicsProxyWidget::shape() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[33]),sipPySelf,NULL,sipName_shape);

    if (!meth)
        return QGraphicsWidget::shape();

    extern QPainterPath sipVH_QtGui_194(sip_gilstate_t,PyObject *);

    return sipVH_QtGui_194(sipGILState,meth);
}

void sipQGraphicsProxyWidget::initStyleOption(QStyleOption *a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[34]),sipPySelf,NULL,sipName_initStyleOption);

    if (!meth)
    {
        QGraphicsWidget::initStyleOption(a0);
        return;
    }

    extern void sipVH_QtGui_193(sip_gilstate_t,PyObject *,QStyleOption *);

    sipVH_QtGui_193(sipGILState,meth,a0);
}

void sipQGraphicsProxyWidget::updateGeometry()
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[35],sipPySelf,NULL,sipName_updateGeometry);

    if (!meth)
    {
        QGraphicsWidget::updateGeometry();
        return;
    }

    typedef void (*sipVH_QtCore_11)(sip_gilstate_t,PyObject *);

    ((sipVH_QtCore_11)(sipModuleAPI_QtGui_QtCore->em_virthandlers[11]))(sipGILState,meth);
}

bool sipQGraphicsProxyWidget::sceneEvent(QEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[36],sipPySelf,NULL,sipName_sceneEvent);

    if (!meth)
        return QGraphicsWidget::sceneEvent(a0);

    typedef bool (*sipVH_QtCore_5)(sip_gilstate_t,PyObject *,QEvent *);

    return ((sipVH_QtCore_5)(sipModuleAPI_QtGui_QtCore->em_virthandlers[5]))(sipGILState,meth,a0);
}

bool sipQGraphicsProxyWidget::windowFrameEvent(QEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[37],sipPySelf,NULL,sipName_windowFrameEvent);

    if (!meth)
        return QGraphicsWidget::windowFrameEvent(a0);

    typedef bool (*sipVH_QtCore_5)(sip_gilstate_t,PyObject *,QEvent *);

    return ((sipVH_QtCore_5)(sipModuleAPI_QtGui_QtCore->em_virthandlers[5]))(sipGILState,meth,a0);
}

Qt::WindowFrameSection sipQGraphicsProxyWidget::windowFrameSectionAt(const QPointF& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[38]),sipPySelf,NULL,sipName_windowFrameSectionAt);

    if (!meth)
        return QGraphicsWidget::windowFrameSectionAt(a0);

    extern Qt::WindowFrameSection sipVH_QtGui_190(sip_gilstate_t,PyObject *,const QPointF&);

    return sipVH_QtGui_190(sipGILState,meth,a0);
}

void sipQGraphicsProxyWidget::changeEvent(QEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[39],sipPySelf,NULL,sipName_changeEvent);

    if (!meth)
    {
        QGraphicsWidget::changeEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_17)(sip_gilstate_t,PyObject *,QEvent *);

    ((sipVH_QtCore_17)(sipModuleAPI_QtGui_QtCore->em_virthandlers[17]))(sipGILState,meth,a0);
}

void sipQGraphicsProxyWidget::closeEvent(QCloseEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[40],sipPySelf,NULL,sipName_closeEvent);

    if (!meth)
    {
        QGraphicsWidget::closeEvent(a0);
        return;
    }

    extern void sipVH_QtGui_22(sip_gilstate_t,PyObject *,QCloseEvent *);

    sipVH_QtGui_22(sipGILState,meth,a0);
}

void sipQGraphicsProxyWidget::moveEvent(QGraphicsSceneMoveEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[41],sipPySelf,NULL,sipName_moveEvent);

    if (!meth)
    {
        QGraphicsWidget::moveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_189(sip_gilstate_t,PyObject *,QGraphicsSceneMoveEvent *);

    sipVH_QtGui_189(sipGILState,meth,a0);
}

void sipQGraphicsProxyWidget::polishEvent()
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[42],sipPySelf,NULL,sipName_polishEvent);

    if (!meth)
    {
        QGraphicsWidget::polishEvent();
        return;
    }

    typedef void (*sipVH_QtCore_11)(sip_gilstate_t,PyObject *);

    ((sipVH_QtCore_11)(sipModuleAPI_QtGui_QtCore->em_virthandlers[11]))(sipGILState,meth);
}

void sipQGraphicsProxyWidget::grabKeyboardEvent(QEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[43],sipPySelf,NULL,sipName_grabKeyboardEvent);

    if (!meth)
    {
        QGraphicsWidget::grabKeyboardEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_17)(sip_gilstate_t,PyObject *,QEvent *);

    ((sipVH_QtCore_17)(sipModuleAPI_QtGui_QtCore->em_virthandlers[17]))(sipGILState,meth,a0);
}

void sipQGraphicsProxyWidget::ungrabKeyboardEvent(QEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[44],sipPySelf,NULL,sipName_ungrabKeyboardEvent);

    if (!meth)
    {
        QGraphicsWidget::ungrabKeyboardEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_17)(sip_gilstate_t,PyObject *,QEvent *);

    ((sipVH_QtCore_17)(sipModuleAPI_QtGui_QtCore->em_virthandlers[17]))(sipGILState,meth,a0);
}

void sipQGraphicsProxyWidget::timerEvent(QTimerEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[45],sipPySelf,NULL,sipName_timerEvent);

    if (!meth)
    {
        QObject::timerEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_9)(sip_gilstate_t,PyObject *,QTimerEvent *);

    ((sipVH_QtCore_9)(sipModuleAPI_QtGui_QtCore->em_virthandlers[9]))(sipGILState,meth,a0);
}

void sipQGraphicsProxyWidget::childEvent(QChildEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[46],sipPySelf,NULL,sipName_childEvent);

    if (!meth)
    {
        QObject::childEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_25)(sip_gilstate_t,PyObject *,QChildEvent *);

    ((sipVH_QtCore_25)(sipModuleAPI_QtGui_QtCore->em_virthandlers[25]))(sipGILState,meth,a0);
}

void sipQGraphicsProxyWidget::customEvent(QEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[47],sipPySelf,NULL,sipName_customEvent);

    if (!meth)
    {
        QObject::customEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_17)(sip_gilstate_t,PyObject *,QEvent *);

    ((sipVH_QtCore_17)(sipModuleAPI_QtGui_QtCore->em_virthandlers[17]))(sipGILState,meth,a0);
}

void sipQGraphicsProxyWidget::connectNotify(const char *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[48],sipPySelf,NULL,sipName_connectNotify);

    if (!meth)
    {
        QObject::connectNotify(a0);
        return;
    }

    typedef void (*sipVH_QtCore_24)(sip_gilstate_t,PyObject *,const char *);

    ((sipVH_QtCore_24)(sipModuleAPI_QtGui_QtCore->em_virthandlers[24]))(sipGILState,meth,a0);
}

void sipQGraphicsProxyWidget::disconnectNotify(const char *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[49],sipPySelf,NULL,sipName_disconnectNotify);

    if (!meth)
    {
        QObject::disconnectNotify(a0);
        return;
    }

    typedef void (*sipVH_QtCore_24)(sip_gilstate_t,PyObject *,const char *);

    ((sipVH_QtCore_24)(sipModuleAPI_QtGui_QtCore->em_virthandlers[24]))(sipGILState,meth,a0);
}

void sipQGraphicsProxyWidget::advance(int a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[50],sipPySelf,NULL,sipName_advance);

    if (!meth)
    {
        QGraphicsItem::advance(a0);
        return;
    }

    typedef void (*sipVH_QtCore_4)(sip_gilstate_t,PyObject *,int);

    ((sipVH_QtCore_4)(sipModuleAPI_QtGui_QtCore->em_virthandlers[4]))(sipGILState,meth,a0);
}

bool sipQGraphicsProxyWidget::contains(const QPointF& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[51]),sipPySelf,NULL,sipName_contains);

    if (!meth)
        return QGraphicsItem::contains(a0);

    extern bool sipVH_QtGui_207(sip_gilstate_t,PyObject *,const QPointF&);

    return sipVH_QtGui_207(sipGILState,meth,a0);
}

bool sipQGraphicsProxyWidget::collidesWithItem(const QGraphicsItem *a0,Qt::ItemSelectionMode a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[52]),sipPySelf,NULL,sipName_collidesWithItem);

    if (!meth)
        return QGraphicsItem::collidesWithItem(a0,a1);

    extern bool sipVH_QtGui_210(sip_gilstate_t,PyObject *,const QGraphicsItem *,Qt::ItemSelectionMode);

    return sipVH_QtGui_210(sipGILState,meth,a0,a1);
}

bool sipQGraphicsProxyWidget::collidesWithPath(const QPainterPath& a0,Qt::ItemSelectionMode a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[53]),sipPySelf,NULL,sipName_collidesWithPath);

    if (!meth)
        return QGraphicsItem::collidesWithPath(a0,a1);

    extern bool sipVH_QtGui_209(sip_gilstate_t,PyObject *,const QPainterPath&,Qt::ItemSelectionMode);

    return sipVH_QtGui_209(sipGILState,meth,a0,a1);
}

bool sipQGraphicsProxyWidget::isObscuredBy(const QGraphicsItem *a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[54]),sipPySelf,NULL,sipName_isObscuredBy);

    if (!meth)
        return QGraphicsItem::isObscuredBy(a0);

    extern bool sipVH_QtGui_206(sip_gilstate_t,PyObject *,const QGraphicsItem *);

    return sipVH_QtGui_206(sipGILState,meth,a0);
}

QPainterPath sipQGraphicsProxyWidget::opaqueArea() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[55]),sipPySelf,NULL,sipName_opaqueArea);

    if (!meth)
        return QGraphicsItem::opaqueArea();

    extern QPainterPath sipVH_QtGui_194(sip_gilstate_t,PyObject *);

    return sipVH_QtGui_194(sipGILState,meth);
}

void sipQGraphicsProxyWidget::inputMethodEvent(QInputMethodEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[56],sipPySelf,NULL,sipName_inputMethodEvent);

    if (!meth)
    {
        QGraphicsItem::inputMethodEvent(a0);
        return;
    }

    extern void sipVH_QtGui_13(sip_gilstate_t,PyObject *,QInputMethodEvent *);

    sipVH_QtGui_13(sipGILState,meth,a0);
}

QVariant sipQGraphicsProxyWidget::inputMethodQuery(Qt::InputMethodQuery a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[57]),sipPySelf,NULL,sipName_inputMethodQuery);

    if (!meth)
        return QGraphicsItem::inputMethodQuery(a0);

    extern QVariant sipVH_QtGui_12(sip_gilstate_t,PyObject *,Qt::InputMethodQuery);

    return sipVH_QtGui_12(sipGILState,meth,a0);
}

bool sipQGraphicsProxyWidget::sceneEventFilter(QGraphicsItem *a0,QEvent *a1)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[58],sipPySelf,NULL,sipName_sceneEventFilter);

    if (!meth)
        return QGraphicsItem::sceneEventFilter(a0,a1);

    extern bool sipVH_QtGui_208(sip_gilstate_t,PyObject *,QGraphicsItem *,QEvent *);

    return sipVH_QtGui_208(sipGILState,meth,a0,a1);
}

void sipQGraphicsProxyWidget::sipProtect_setGraphicsItem(QGraphicsItem *a0)
{
    QGraphicsLayoutItem::setGraphicsItem(a0);
}

void sipQGraphicsProxyWidget::sipProtect_setOwnedByLayout(bool a0)
{
    QGraphicsLayoutItem::setOwnedByLayout(a0);
}

void sipQGraphicsProxyWidget::sipProtectVirt_inputMethodEvent(bool sipSelfWasArg,QInputMethodEvent *a0)
{
    (sipSelfWasArg ? QGraphicsItem::inputMethodEvent(a0) : inputMethodEvent(a0));
}

QVariant sipQGraphicsProxyWidget::sipProtectVirt_inputMethodQuery(bool sipSelfWasArg,Qt::InputMethodQuery a0) const
{
    return (sipSelfWasArg ? QGraphicsItem::inputMethodQuery(a0) : inputMethodQuery(a0));
}

void sipQGraphicsProxyWidget::sipProtect_prepareGeometryChange()
{
    QGraphicsItem::prepareGeometryChange();
}

bool sipQGraphicsProxyWidget::sipProtectVirt_sceneEventFilter(bool sipSelfWasArg,QGraphicsItem *a0,QEvent *a1)
{
    return (sipSelfWasArg ? QGraphicsItem::sceneEventFilter(a0,a1) : sceneEventFilter(a0,a1));
}

QObject * sipQGraphicsProxyWidget::sipProtect_sender() const
{
    return QObject::sender();
}

int sipQGraphicsProxyWidget::sipProtect_receivers(const char *a0) const
{
    return QObject::receivers(a0);
}

void sipQGraphicsProxyWidget::sipProtectVirt_timerEvent(bool sipSelfWasArg,QTimerEvent *a0)
{
    (sipSelfWasArg ? QObject::timerEvent(a0) : timerEvent(a0));
}

void sipQGraphicsProxyWidget::sipProtectVirt_childEvent(bool sipSelfWasArg,QChildEvent *a0)
{
    (sipSelfWasArg ? QObject::childEvent(a0) : childEvent(a0));
}

void sipQGraphicsProxyWidget::sipProtectVirt_customEvent(bool sipSelfWasArg,QEvent *a0)
{
    (sipSelfWasArg ? QObject::customEvent(a0) : customEvent(a0));
}

void sipQGraphicsProxyWidget::sipProtectVirt_connectNotify(bool sipSelfWasArg,const char *a0)
{
    (sipSelfWasArg ? QObject::connectNotify(a0) : connectNotify(a0));
}

void sipQGraphicsProxyWidget::sipProtectVirt_disconnectNotify(bool sipSelfWasArg,const char *a0)
{
    (sipSelfWasArg ? QObject::disconnectNotify(a0) : disconnectNotify(a0));
}

void sipQGraphicsProxyWidget::sipProtect_updateMicroFocus()
{
    QGraphicsObject::updateMicroFocus();
}

void sipQGraphicsProxyWidget::sipProtectVirt_initStyleOption(bool sipSelfWasArg,QStyleOption *a0) const
{
    (sipSelfWasArg ? QGraphicsWidget::initStyleOption(a0) : initStyleOption(a0));
}

void sipQGraphicsProxyWidget::sipProtectVirt_updateGeometry(bool sipSelfWasArg)
{
    (sipSelfWasArg ? QGraphicsWidget::updateGeometry() : updateGeometry());
}

bool sipQGraphicsProxyWidget::sipProtectVirt_sceneEvent(bool sipSelfWasArg,QEvent *a0)
{
    return (sipSelfWasArg ? QGraphicsWidget::sceneEvent(a0) : sceneEvent(a0));
}

bool sipQGraphicsProxyWidget::sipProtectVirt_windowFrameEvent(bool sipSelfWasArg,QEvent *a0)
{
    return (sipSelfWasArg ? QGraphicsWidget::windowFrameEvent(a0) : windowFrameEvent(a0));
}

Qt::WindowFrameSection sipQGraphicsProxyWidget::sipProtectVirt_windowFrameSectionAt(bool sipSelfWasArg,const QPointF& a0) const
{
    return (sipSelfWasArg ? QGraphicsWidget::windowFrameSectionAt(a0) : windowFrameSectionAt(a0));
}

void sipQGraphicsProxyWidget::sipProtectVirt_changeEvent(bool sipSelfWasArg,QEvent *a0)
{
    (sipSelfWasArg ? QGraphicsWidget::changeEvent(a0) : changeEvent(a0));
}

void sipQGraphicsProxyWidget::sipProtectVirt_closeEvent(bool sipSelfWasArg,QCloseEvent *a0)
{
    (sipSelfWasArg ? QGraphicsWidget::closeEvent(a0) : closeEvent(a0));
}

void sipQGraphicsProxyWidget::sipProtectVirt_moveEvent(bool sipSelfWasArg,QGraphicsSceneMoveEvent *a0)
{
    (sipSelfWasArg ? QGraphicsWidget::moveEvent(a0) : moveEvent(a0));
}

void sipQGraphicsProxyWidget::sipProtectVirt_polishEvent(bool sipSelfWasArg)
{
    (sipSelfWasArg ? QGraphicsWidget::polishEvent() : polishEvent());
}

void sipQGraphicsProxyWidget::sipProtectVirt_grabKeyboardEvent(bool sipSelfWasArg,QEvent *a0)
{
    (sipSelfWasArg ? QGraphicsWidget::grabKeyboardEvent(a0) : grabKeyboardEvent(a0));
}

void sipQGraphicsProxyWidget::sipProtectVirt_ungrabKeyboardEvent(bool sipSelfWasArg,QEvent *a0)
{
    (sipSelfWasArg ? QGraphicsWidget::ungrabKeyboardEvent(a0) : ungrabKeyboardEvent(a0));
}

QVariant sipQGraphicsProxyWidget::sipProtectVirt_itemChange(bool sipSelfWasArg,QGraphicsItem::GraphicsItemChange a0,const QVariant& a1)
{
    return (sipSelfWasArg ? QGraphicsProxyWidget::itemChange(a0,a1) : itemChange(a0,a1));
}

bool sipQGraphicsProxyWidget::sipProtectVirt_event(bool sipSelfWasArg,QEvent *a0)
{
    return (sipSelfWasArg ? QGraphicsProxyWidget::event(a0) : event(a0));
}

bool sipQGraphicsProxyWidget::sipProtectVirt_eventFilter(bool sipSelfWasArg,QObject *a0,QEvent *a1)
{
    return (sipSelfWasArg ? QGraphicsProxyWidget::eventFilter(a0,a1) : eventFilter(a0,a1));
}

void sipQGraphicsProxyWidget::sipProtectVirt_showEvent(bool sipSelfWasArg,QShowEvent *a0)
{
    (sipSelfWasArg ? QGraphicsProxyWidget::showEvent(a0) : showEvent(a0));
}

void sipQGraphicsProxyWidget::sipProtectVirt_hideEvent(bool sipSelfWasArg,QHideEvent *a0)
{
    (sipSelfWasArg ? QGraphicsProxyWidget::hideEvent(a0) : hideEvent(a0));
}

void sipQGraphicsProxyWidget::sipProtectVirt_contextMenuEvent(bool sipSelfWasArg,QGraphicsSceneContextMenuEvent *a0)
{
    (sipSelfWasArg ? QGraphicsProxyWidget::contextMenuEvent(a0) : contextMenuEvent(a0));
}

void sipQGraphicsProxyWidget::sipProtectVirt_hoverEnterEvent(bool sipSelfWasArg,QGraphicsSceneHoverEvent *a0)
{
    (sipSelfWasArg ? QGraphicsProxyWidget::hoverEnterEvent(a0) : hoverEnterEvent(a0));
}

void sipQGraphicsProxyWidget::sipProtectVirt_hoverLeaveEvent(bool sipSelfWasArg,QGraphicsSceneHoverEvent *a0)
{
    (sipSelfWasArg ? QGraphicsProxyWidget::hoverLeaveEvent(a0) : hoverLeaveEvent(a0));
}

void sipQGraphicsProxyWidget::sipProtectVirt_hoverMoveEvent(bool sipSelfWasArg,QGraphicsSceneHoverEvent *a0)
{
    (sipSelfWasArg ? QGraphicsProxyWidget::hoverMoveEvent(a0) : hoverMoveEvent(a0));
}

void sipQGraphicsProxyWidget::sipProtectVirt_grabMouseEvent(bool sipSelfWasArg,QEvent *a0)
{
    (sipSelfWasArg ? QGraphicsProxyWidget::grabMouseEvent(a0) : grabMouseEvent(a0));
}

void sipQGraphicsProxyWidget::sipProtectVirt_ungrabMouseEvent(bool sipSelfWasArg,QEvent *a0)
{
    (sipSelfWasArg ? QGraphicsProxyWidget::ungrabMouseEvent(a0) : ungrabMouseEvent(a0));
}

void sipQGraphicsProxyWidget::sipProtectVirt_mouseMoveEvent(bool sipSelfWasArg,QGraphicsSceneMouseEvent *a0)
{
    (sipSelfWasArg ? QGraphicsProxyWidget::mouseMoveEvent(a0) : mouseMoveEvent(a0));
}

void sipQGraphicsProxyWidget::sipProtectVirt_mousePressEvent(bool sipSelfWasArg,QGraphicsSceneMouseEvent *a0)
{
    (sipSelfWasArg ? QGraphicsProxyWidget::mousePressEvent(a0) : mousePressEvent(a0));
}

void sipQGraphicsProxyWidget::sipProtectVirt_mouseReleaseEvent(bool sipSelfWasArg,QGraphicsSceneMouseEvent *a0)
{
    (sipSelfWasArg ? QGraphicsProxyWidget::mouseReleaseEvent(a0) : mouseReleaseEvent(a0));
}

void sipQGraphicsProxyWidget::sipProtectVirt_mouseDoubleClickEvent(bool sipSelfWasArg,QGraphicsSceneMouseEvent *a0)
{
    (sipSelfWasArg ? QGraphicsProxyWidget::mouseDoubleClickEvent(a0) : mouseDoubleClickEvent(a0));
}

void sipQGraphicsProxyWidget::sipProtectVirt_wheelEvent(bool sipSelfWasArg,QGraphicsSceneWheelEvent *a0)
{
    (sipSelfWasArg ? QGraphicsProxyWidget::wheelEvent(a0) : wheelEvent(a0));
}

void sipQGraphicsProxyWidget::sipProtectVirt_keyPressEvent(bool sipSelfWasArg,QKeyEvent *a0)
{
    (sipSelfWasArg ? QGraphicsProxyWidget::keyPressEvent(a0) : keyPressEvent(a0));
}

void sipQGraphicsProxyWidget::sipProtectVirt_keyReleaseEvent(bool sipSelfWasArg,QKeyEvent *a0)
{
    (sipSelfWasArg ? QGraphicsProxyWidget::keyReleaseEvent(a0) : keyReleaseEvent(a0));
}

void sipQGraphicsProxyWidget::sipProtectVirt_focusInEvent(bool sipSelfWasArg,QFocusEvent *a0)
{
    (sipSelfWasArg ? QGraphicsProxyWidget::focusInEvent(a0) : focusInEvent(a0));
}

void sipQGraphicsProxyWidget::sipProtectVirt_focusOutEvent(bool sipSelfWasArg,QFocusEvent *a0)
{
    (sipSelfWasArg ? QGraphicsProxyWidget::focusOutEvent(a0) : focusOutEvent(a0));
}

bool sipQGraphicsProxyWidget::sipProtectVirt_focusNextPrevChild(bool sipSelfWasArg,bool a0)
{
    return (sipSelfWasArg ? QGraphicsProxyWidget::focusNextPrevChild(a0) : focusNextPrevChild(a0));
}

QSizeF sipQGraphicsProxyWidget::sipProtectVirt_sizeHint(bool sipSelfWasArg,Qt::SizeHint a0,const QSizeF& a1) const
{
    return (sipSelfWasArg ? QGraphicsProxyWidget::sizeHint(a0,a1) : sizeHint(a0,a1));
}

void sipQGraphicsProxyWidget::sipProtectVirt_resizeEvent(bool sipSelfWasArg,QGraphicsSceneResizeEvent *a0)
{
    (sipSelfWasArg ? QGraphicsProxyWidget::resizeEvent(a0) : resizeEvent(a0));
}

void sipQGraphicsProxyWidget::sipProtectVirt_dragEnterEvent(bool sipSelfWasArg,QGraphicsSceneDragDropEvent *a0)
{
    (sipSelfWasArg ? QGraphicsProxyWidget::dragEnterEvent(a0) : dragEnterEvent(a0));
}

void sipQGraphicsProxyWidget::sipProtectVirt_dragLeaveEvent(bool sipSelfWasArg,QGraphicsSceneDragDropEvent *a0)
{
    (sipSelfWasArg ? QGraphicsProxyWidget::dragLeaveEvent(a0) : dragLeaveEvent(a0));
}

void sipQGraphicsProxyWidget::sipProtectVirt_dragMoveEvent(bool sipSelfWasArg,QGraphicsSceneDragDropEvent *a0)
{
    (sipSelfWasArg ? QGraphicsProxyWidget::dragMoveEvent(a0) : dragMoveEvent(a0));
}

void sipQGraphicsProxyWidget::sipProtectVirt_dropEvent(bool sipSelfWasArg,QGraphicsSceneDragDropEvent *a0)
{
    (sipSelfWasArg ? QGraphicsProxyWidget::dropEvent(a0) : dropEvent(a0));
}

QGraphicsProxyWidget * sipQGraphicsProxyWidget::sipProtect_newProxyWidget(const QWidget *a0)
{
    return QGraphicsProxyWidget::newProxyWidget(a0);
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_setGraphicsItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_setGraphicsItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsItem * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QGraphicsItem, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtect_setGraphicsItem(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_setGraphicsItem, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_setOwnedByLayout(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_setOwnedByLayout(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtect_setOwnedByLayout(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_setOwnedByLayout, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_inputMethodEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_inputMethodEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QInputMethodEvent * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QInputMethodEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_inputMethodEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_inputMethodEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_inputMethodQuery(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_inputMethodQuery(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        Qt::InputMethodQuery a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_Qt_InputMethodQuery, &a0))
        {
            QVariant *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QVariant(sipCpp->sipProtectVirt_inputMethodQuery(sipSelfWasArg,a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QVariant,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_inputMethodQuery, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_prepareGeometryChange(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_prepareGeometryChange(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtect_prepareGeometryChange();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_prepareGeometryChange, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_sceneEventFilter(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_sceneEventFilter(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsItem * a0;
        QEvent * a1;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QGraphicsItem, &a0, sipType_QEvent, &a1))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->sipProtectVirt_sceneEventFilter(sipSelfWasArg,a0,a1);
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_sceneEventFilter, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_sender(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_sender(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp))
        {
            QObject *sipRes = 0;

#line 529 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qobject.sip"
        typedef QObject *(*helper_func)(QObject *);
        
        static helper_func helper = 0;
        
        if (!helper)
            helper = (helper_func)sipImportSymbol("qpycore_qobject_sender");
        
        if (helper)
        #if defined(SIP_PROTECTED_IS_PUBLIC)
            sipRes = helper(sipCpp->sender());
        #else
            sipRes = helper(sipCpp->sipProtect_sender());
        #endif
#line 1878 "sipQtGuiQGraphicsProxyWidget.cpp"

            return sipConvertFromType(sipRes,sipType_QObject,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_sender, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_receivers(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_receivers(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        char * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BG", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, &a0))
        {
            int sipRes = 0;

#line 546 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qobject.sip"
        // We need to take into account any proxies for Python signals. Import the
        // helper if it hasn't already been done.
        typedef int (*helper_func)(QObject *, const char *, int);
        
        static helper_func helper = 0;
        
        if (!helper)
            helper = (helper_func)sipImportSymbol("qpycore_qobject_receivers");
        
        if (helper)
        #if defined(SIP_PROTECTED_IS_PUBLIC)
            sipRes = helper(sipCpp, a0, sipCpp->receivers(a0));
        #else
            sipRes = helper(sipCpp, a0, sipCpp->sipProtect_receivers(a0));
        #endif
#line 1920 "sipQtGuiQGraphicsProxyWidget.cpp"

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_receivers, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_timerEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_timerEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QTimerEvent * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QTimerEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_timerEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_timerEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_childEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_childEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QChildEvent * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QChildEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_childEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_childEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_customEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_customEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_customEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_customEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_connectNotify(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_connectNotify(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        char * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BG", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_connectNotify(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_connectNotify, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_disconnectNotify(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_disconnectNotify(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        char * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BG", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_disconnectNotify(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_disconnectNotify, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_updateMicroFocus(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_updateMicroFocus(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtect_updateMicroFocus();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_updateMicroFocus, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_initStyleOption(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_initStyleOption(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QStyleOption * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QStyleOption, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_initStyleOption(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_initStyleOption, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_updateGeometry(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_updateGeometry(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_updateGeometry(sipSelfWasArg);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_updateGeometry, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_sceneEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_sceneEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QEvent, &a0))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->sipProtectVirt_sceneEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_sceneEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_windowFrameEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_windowFrameEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QEvent, &a0))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->sipProtectVirt_windowFrameEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_windowFrameEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_windowFrameSectionAt(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_windowFrameSectionAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QPointF * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QPointF, &a0))
        {
            Qt::WindowFrameSection sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->sipProtectVirt_windowFrameSectionAt(sipSelfWasArg,*a0);
            Py_END_ALLOW_THREADS

            return sipConvertFromEnum(sipRes,sipType_Qt_WindowFrameSection);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_windowFrameSectionAt, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_changeEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_changeEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_changeEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_changeEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_closeEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_closeEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QCloseEvent * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QCloseEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_closeEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_closeEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_moveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_moveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMoveEvent * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QGraphicsSceneMoveEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_moveEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_moveEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_polishEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_polishEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_polishEvent(sipSelfWasArg);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_polishEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_grabKeyboardEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_grabKeyboardEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_grabKeyboardEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_grabKeyboardEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_ungrabKeyboardEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_ungrabKeyboardEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_ungrabKeyboardEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_ungrabKeyboardEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_setWidget(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_setWidget(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QWidget * a0;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QWidget, &a0))
        {
#line 46 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicsproxywidget.sip"
        // The ownership of any existing widget must be passed back to Python.
        QWidget *w = sipCpp->widget();
        
        Py_BEGIN_ALLOW_THREADS
        sipCpp->setWidget(a0);
        Py_END_ALLOW_THREADS
        
        if (w)
        {
            PyObject *wo = sipGetPyObject(w, sipType_QWidget);
        
            if (wo)
                sipTransferBack(wo);
        }
#line 2434 "sipQtGuiQGraphicsProxyWidget.cpp"

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_setWidget, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_widget(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_widget(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp))
        {
            QWidget *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->widget();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QWidget,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_widget, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_subWidgetRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_subWidgetRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QWidget * a0;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QWidget, &a0))
        {
            QRectF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->subWidgetRect(a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_subWidgetRect, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_setGeometry(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_setGeometry(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QRectF * a0;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QRectF, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsProxyWidget::setGeometry(*a0) : sipCpp->setGeometry(*a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_setGeometry, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_paint(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_paint(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QPainter * a0;
        const QStyleOptionGraphicsItem * a1;
        QWidget * a2;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J8J8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QPainter, &a0, sipType_QStyleOptionGraphicsItem, &a1, sipType_QWidget, &a2))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsProxyWidget::paint(a0,a1,a2) : sipCpp->paint(a0,a1,a2));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_paint, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_type(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_type(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp))
        {
            int sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp->QGraphicsProxyWidget::type() : sipCpp->type());
            Py_END_ALLOW_THREADS

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_type, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_createProxyForChildWidget(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_createProxyForChildWidget(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QWidget * a0;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QWidget, &a0))
        {
            QGraphicsProxyWidget *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->createProxyForChildWidget(a0);
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QGraphicsProxyWidget,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_createProxyForChildWidget, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_itemChange(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_itemChange(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsItem::GraphicsItemChange a0;
        const QVariant * a1;
        int a1State = 0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BEJ1", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QGraphicsItem_GraphicsItemChange, &a0, sipType_QVariant,&a1, &a1State))
        {
            QVariant *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QVariant(sipCpp->sipProtectVirt_itemChange(sipSelfWasArg,a0,*a1));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast<QVariant *>(a1),sipType_QVariant,a1State);

            return sipConvertFromNewType(sipRes,sipType_QVariant,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_itemChange, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_event(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_event(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QEvent, &a0))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->sipProtectVirt_event(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_event, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_eventFilter(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_eventFilter(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QObject * a0;
        QEvent * a1;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QObject, &a0, sipType_QEvent, &a1))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->sipProtectVirt_eventFilter(sipSelfWasArg,a0,a1);
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_eventFilter, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_showEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_showEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QShowEvent * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QShowEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_showEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_showEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_hideEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_hideEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QHideEvent * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QHideEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_hideEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_hideEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_contextMenuEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_contextMenuEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneContextMenuEvent * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QGraphicsSceneContextMenuEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_contextMenuEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_contextMenuEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_hoverEnterEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_hoverEnterEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneHoverEvent * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QGraphicsSceneHoverEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_hoverEnterEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_hoverEnterEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_hoverLeaveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_hoverLeaveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneHoverEvent * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QGraphicsSceneHoverEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_hoverLeaveEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_hoverLeaveEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_hoverMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_hoverMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneHoverEvent * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QGraphicsSceneHoverEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_hoverMoveEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_hoverMoveEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_grabMouseEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_grabMouseEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_grabMouseEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_grabMouseEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_ungrabMouseEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_ungrabMouseEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_ungrabMouseEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_ungrabMouseEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_mouseMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_mouseMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_mouseMoveEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_mouseMoveEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_mousePressEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_mousePressEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_mousePressEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_mousePressEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_mouseReleaseEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_mouseReleaseEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_mouseReleaseEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_mouseReleaseEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_mouseDoubleClickEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_mouseDoubleClickEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_mouseDoubleClickEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_mouseDoubleClickEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_wheelEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_wheelEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneWheelEvent * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QGraphicsSceneWheelEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_wheelEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_wheelEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_keyPressEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_keyPressEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QKeyEvent * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QKeyEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_keyPressEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_keyPressEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_keyReleaseEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_keyReleaseEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QKeyEvent * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QKeyEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_keyReleaseEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_keyReleaseEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_focusInEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_focusInEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QFocusEvent * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QFocusEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_focusInEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_focusInEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_focusOutEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_focusOutEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QFocusEvent * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QFocusEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_focusOutEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_focusOutEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_focusNextPrevChild(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_focusNextPrevChild(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        bool a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, &a0))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->sipProtectVirt_focusNextPrevChild(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_focusNextPrevChild, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_sizeHint(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_sizeHint(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        Qt::SizeHint a0;
        const QSizeF& a1def = QSizeF();
        const QSizeF * a1 = &a1def;
        sipQGraphicsProxyWidget *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_constraint,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BE|J9", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_Qt_SizeHint, &a0, sipType_QSizeF, &a1))
        {
            QSizeF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QSizeF(sipCpp->sipProtectVirt_sizeHint(sipSelfWasArg,a0,*a1));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QSizeF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_sizeHint, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_resizeEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_resizeEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneResizeEvent * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QGraphicsSceneResizeEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_resizeEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_resizeEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_dragEnterEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_dragEnterEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_dragEnterEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_dragEnterEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_dragLeaveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_dragLeaveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_dragLeaveEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_dragLeaveEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_dragMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_dragMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_dragMoveEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_dragMoveEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_dropEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_dropEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_dropEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_dropEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsProxyWidget_newProxyWidget(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_newProxyWidget(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QWidget * a0;
        sipQGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QWidget, &a0))
        {
            QGraphicsProxyWidget *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->sipProtect_newProxyWidget(a0);
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QGraphicsProxyWidget,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_newProxyWidget, NULL);

    return NULL;
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_QGraphicsProxyWidget(void *, const sipTypeDef *);}
static void *cast_QGraphicsProxyWidget(void *ptr, const sipTypeDef *targetType)
{
    void *res;

    if (targetType == sipType_QGraphicsProxyWidget)
        return ptr;

    if ((res = ((const sipClassTypeDef *)sipType_QGraphicsWidget)->ctd_cast((QGraphicsWidget *)(QGraphicsProxyWidget *)ptr,targetType)) != NULL)
        return res;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_QGraphicsProxyWidget(void *, int);}
static void release_QGraphicsProxyWidget(void *sipCppV,int sipState)
{
    Py_BEGIN_ALLOW_THREADS

    if (sipState & SIP_DERIVED_CLASS)
        delete reinterpret_cast<sipQGraphicsProxyWidget *>(sipCppV);
    else
        delete reinterpret_cast<QGraphicsProxyWidget *>(sipCppV);

    Py_END_ALLOW_THREADS
}


extern "C" {static void dealloc_QGraphicsProxyWidget(sipSimpleWrapper *);}
static void dealloc_QGraphicsProxyWidget(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerived(sipSelf))
        reinterpret_cast<sipQGraphicsProxyWidget *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsPyOwned(sipSelf))
    {
        release_QGraphicsProxyWidget(sipGetAddress(sipSelf),sipSelf->flags);
    }
}


extern "C" {static void *init_QGraphicsProxyWidget(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_QGraphicsProxyWidget(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQGraphicsProxyWidget *sipCpp = 0;

    {
        QGraphicsItem * a0 = 0;
        Qt::WindowFlags a1def = 0;
        Qt::WindowFlags * a1 = &a1def;
        int a1State = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
            sipName_flags,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JHJ1", sipType_QGraphicsItem, &a0, sipOwner, sipType_Qt_WindowFlags, &a1, &a1State))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new sipQGraphicsProxyWidget(a0,*a1);
            Py_END_ALLOW_THREADS
            sipReleaseType(a1,sipType_Qt_WindowFlags,a1State);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QGraphicsProxyWidget[] = {{214, 255, 1}};


static PyMethodDef methods_QGraphicsProxyWidget[] = {
    {SIP_MLNAME_CAST(sipName_changeEvent), meth_QGraphicsProxyWidget_changeEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_childEvent), meth_QGraphicsProxyWidget_childEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_closeEvent), meth_QGraphicsProxyWidget_closeEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_connectNotify), meth_QGraphicsProxyWidget_connectNotify, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_contextMenuEvent), meth_QGraphicsProxyWidget_contextMenuEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_createProxyForChildWidget), meth_QGraphicsProxyWidget_createProxyForChildWidget, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_customEvent), meth_QGraphicsProxyWidget_customEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_disconnectNotify), meth_QGraphicsProxyWidget_disconnectNotify, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_dragEnterEvent), meth_QGraphicsProxyWidget_dragEnterEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_dragLeaveEvent), meth_QGraphicsProxyWidget_dragLeaveEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_dragMoveEvent), meth_QGraphicsProxyWidget_dragMoveEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_dropEvent), meth_QGraphicsProxyWidget_dropEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_event), meth_QGraphicsProxyWidget_event, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_eventFilter), meth_QGraphicsProxyWidget_eventFilter, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_focusInEvent), meth_QGraphicsProxyWidget_focusInEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_focusNextPrevChild), meth_QGraphicsProxyWidget_focusNextPrevChild, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_focusOutEvent), meth_QGraphicsProxyWidget_focusOutEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_grabKeyboardEvent), meth_QGraphicsProxyWidget_grabKeyboardEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_grabMouseEvent), meth_QGraphicsProxyWidget_grabMouseEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_hideEvent), meth_QGraphicsProxyWidget_hideEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_hoverEnterEvent), meth_QGraphicsProxyWidget_hoverEnterEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_hoverLeaveEvent), meth_QGraphicsProxyWidget_hoverLeaveEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_hoverMoveEvent), meth_QGraphicsProxyWidget_hoverMoveEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_initStyleOption), meth_QGraphicsProxyWidget_initStyleOption, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_inputMethodEvent), meth_QGraphicsProxyWidget_inputMethodEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_inputMethodQuery), meth_QGraphicsProxyWidget_inputMethodQuery, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_itemChange), meth_QGraphicsProxyWidget_itemChange, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_keyPressEvent), meth_QGraphicsProxyWidget_keyPressEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_keyReleaseEvent), meth_QGraphicsProxyWidget_keyReleaseEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_mouseDoubleClickEvent), meth_QGraphicsProxyWidget_mouseDoubleClickEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_mouseMoveEvent), meth_QGraphicsProxyWidget_mouseMoveEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_mousePressEvent), meth_QGraphicsProxyWidget_mousePressEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_mouseReleaseEvent), meth_QGraphicsProxyWidget_mouseReleaseEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_moveEvent), meth_QGraphicsProxyWidget_moveEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_newProxyWidget), meth_QGraphicsProxyWidget_newProxyWidget, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_paint), meth_QGraphicsProxyWidget_paint, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_polishEvent), meth_QGraphicsProxyWidget_polishEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_prepareGeometryChange), meth_QGraphicsProxyWidget_prepareGeometryChange, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_receivers), meth_QGraphicsProxyWidget_receivers, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_resizeEvent), meth_QGraphicsProxyWidget_resizeEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_sceneEvent), meth_QGraphicsProxyWidget_sceneEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_sceneEventFilter), meth_QGraphicsProxyWidget_sceneEventFilter, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_sender), meth_QGraphicsProxyWidget_sender, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setGeometry), meth_QGraphicsProxyWidget_setGeometry, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setGraphicsItem), meth_QGraphicsProxyWidget_setGraphicsItem, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setOwnedByLayout), meth_QGraphicsProxyWidget_setOwnedByLayout, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setWidget), meth_QGraphicsProxyWidget_setWidget, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_showEvent), meth_QGraphicsProxyWidget_showEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_sizeHint), (PyCFunction)meth_QGraphicsProxyWidget_sizeHint, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_subWidgetRect), meth_QGraphicsProxyWidget_subWidgetRect, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_timerEvent), meth_QGraphicsProxyWidget_timerEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_type), meth_QGraphicsProxyWidget_type, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_ungrabKeyboardEvent), meth_QGraphicsProxyWidget_ungrabKeyboardEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_ungrabMouseEvent), meth_QGraphicsProxyWidget_ungrabMouseEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_updateGeometry), meth_QGraphicsProxyWidget_updateGeometry, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_updateMicroFocus), meth_QGraphicsProxyWidget_updateMicroFocus, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_wheelEvent), meth_QGraphicsProxyWidget_wheelEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_widget), meth_QGraphicsProxyWidget_widget, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_windowFrameEvent), meth_QGraphicsProxyWidget_windowFrameEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_windowFrameSectionAt), meth_QGraphicsProxyWidget_windowFrameSectionAt, METH_VARARGS, NULL}
};


pyqt4ClassTypeDef sipTypeDef_QtGui_QGraphicsProxyWidget = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_CLASS,
        sipNameNr_QGraphicsProxyWidget,
        {0}
    },
    {
        sipNameNr_QGraphicsProxyWidget,
        {0, 0, 1},
        60, methods_QGraphicsProxyWidget,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    0,
    -1,
    -1,
    supers_QGraphicsProxyWidget,
    0,
    init_QGraphicsProxyWidget,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QGraphicsProxyWidget,
    0,
    0,
    0,
    release_QGraphicsProxyWidget,
    cast_QGraphicsProxyWidget,
    0,
    0,
    0
},
    &QGraphicsProxyWidget::staticMetaObject,
    0,
    0
};
