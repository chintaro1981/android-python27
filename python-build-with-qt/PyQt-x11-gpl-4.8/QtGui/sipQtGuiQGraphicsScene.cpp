/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.11.2 on Thu Jul 12 20:03:19 2012
 *
 * Copyright (c) 2010 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt.
 * 
 * This file may be used under the terms of the GNU General Public
 * License versions 2.0 or 3.0 as published by the Free Software
 * Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
 * included in the packaging of this file.  Alternatively you may (at
 * your option) use any later version of the GNU General Public
 * License if such license has been publicly approved by Riverbank
 * Computing Limited (or its successors, if any) and the KDE Free Qt
 * Foundation. In addition, as a special exception, Riverbank gives you
 * certain additional rights. These rights are described in the Riverbank
 * GPL Exception version 1.1, which can be found in the file
 * GPL_EXCEPTION.txt in this package.
 * 
 * Please review the following information to ensure GNU General
 * Public Licensing requirements will be met:
 * http://trolltech.com/products/qt/licenses/licensing/opensource/. If
 * you are unsure which license is appropriate for your use, please
 * review the following information:
 * http://trolltech.com/products/qt/licenses/licensing/licensingoverview
 * or contact the sales department at sales@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtGui.h"

#line 44 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicsscene.sip"
#include <qgraphicsscene.h>
#line 39 "sipQtGuiQGraphicsScene.cpp"

#line 39 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qobject.sip"
#include <qobject.h>
#line 43 "sipQtGuiQGraphicsScene.cpp"
#line 158 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qrect.sip"
#include <qrect.h>
#line 46 "sipQtGuiQGraphicsScene.cpp"
#line 44 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 49 "sipQtGuiQGraphicsScene.cpp"
#line 36 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 52 "sipQtGuiQGraphicsScene.cpp"
#line 192 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicswidget.sip"
#include <qgraphicswidget.h>
#line 55 "sipQtGuiQGraphicsScene.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qpalette.sip"
#include <qpalette.h>
#line 58 "sipQtGuiQGraphicsScene.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qfont.sip"
#include <qfont.h>
#line 61 "sipQtGuiQGraphicsScene.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qstyle.sip"
#include <qstyle.h>
#line 64 "sipQtGuiQGraphicsScene.cpp"
#line 38 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicsproxywidget.sip"
#include <qgraphicsproxywidget.h>
#line 67 "sipQtGuiQGraphicsScene.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qwidget.sip"
#include <qwidget.h>
#line 70 "sipQtGuiQGraphicsScene.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 73 "sipQtGuiQGraphicsScene.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qpainterpath.sip"
#include <qpainterpath.h>
#line 55 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qpainterpath.sip"
#include <qpainterpath.h>
#line 78 "sipQtGuiQGraphicsScene.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 611 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 83 "sipQtGuiQGraphicsScene.cpp"
#line 1760 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qstyleoption.sip"
#include <qstyleoption.h>
#line 86 "sipQtGuiQGraphicsScene.cpp"
#line 504 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 522 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 91 "sipQtGuiQGraphicsScene.cpp"
#line 88 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 94 "sipQtGuiQGraphicsScene.cpp"
#line 58 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 97 "sipQtGuiQGraphicsScene.cpp"
#line 344 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 100 "sipQtGuiQGraphicsScene.cpp"
#line 178 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 103 "sipQtGuiQGraphicsScene.cpp"
#line 372 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 106 "sipQtGuiQGraphicsScene.cpp"
#line 198 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 109 "sipQtGuiQGraphicsScene.cpp"
#line 115 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 112 "sipQtGuiQGraphicsScene.cpp"
#line 38 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qlist.sip"
#include <qlist.h>
#line 115 "sipQtGuiQGraphicsScene.cpp"
#line 44 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicsscene.sip"
#include <qgraphicsscene.h>
#line 118 "sipQtGuiQGraphicsScene.cpp"
#line 125 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qlist.sip"
#include <qlist.h>
#line 121 "sipQtGuiQGraphicsScene.cpp"
#line 44 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicsview.sip"
#include <qgraphicsview.h>
#line 124 "sipQtGuiQGraphicsScene.cpp"
#line 41 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 127 "sipQtGuiQGraphicsScene.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 130 "sipQtGuiQGraphicsScene.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qbrush.sip"
#include <qbrush.h>
#line 133 "sipQtGuiQGraphicsScene.cpp"
#line 1066 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 136 "sipQtGuiQGraphicsScene.cpp"
#line 41 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qstring.sip"
#include <qstring.h>
#line 139 "sipQtGuiQGraphicsScene.cpp"
#line 971 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 142 "sipQtGuiQGraphicsScene.cpp"
#line 729 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 145 "sipQtGuiQGraphicsScene.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qpen.sip"
#include <qpen.h>
#line 148 "sipQtGuiQGraphicsScene.cpp"
#line 791 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 151 "sipQtGuiQGraphicsScene.cpp"
#line 336 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qpolygon.sip"
#include <qpolygon.h>
#line 154 "sipQtGuiQGraphicsScene.cpp"
#line 851 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 157 "sipQtGuiQGraphicsScene.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qpixmap.sip"
#include <qpixmap.h>
#line 160 "sipQtGuiQGraphicsScene.cpp"
#line 702 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 163 "sipQtGuiQGraphicsScene.cpp"
#line 820 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 166 "sipQtGuiQGraphicsScene.cpp"
#line 107 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qline.sip"
#include <qline.h>
#line 169 "sipQtGuiQGraphicsScene.cpp"
#line 758 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 172 "sipQtGuiQGraphicsScene.cpp"
#line 1000 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 175 "sipQtGuiQGraphicsScene.cpp"
#line 125 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qlist.sip"
#include <qlist.h>
#line 178 "sipQtGuiQGraphicsScene.cpp"
#line 44 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qtransform.sip"
#include <qtransform.h>
#line 181 "sipQtGuiQGraphicsScene.cpp"
#line 92 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qpoint.sip"
#include <qpoint.h>
#line 184 "sipQtGuiQGraphicsScene.cpp"
#line 315 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 187 "sipQtGuiQGraphicsScene.cpp"
#line 303 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 190 "sipQtGuiQGraphicsScene.cpp"
#line 38 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qlist.sip"
#include <qlist.h>
#line 193 "sipQtGuiQGraphicsScene.cpp"
#line 42 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 196 "sipQtGuiQGraphicsScene.cpp"
#line 125 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qlist.sip"
#include <qlist.h>
#line 199 "sipQtGuiQGraphicsScene.cpp"
#line 36 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qthread.sip"
#include <qthread.h>
#line 202 "sipQtGuiQGraphicsScene.cpp"
#line 40 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qregexp.sip"
#include <qregexp.h>
#line 205 "sipQtGuiQGraphicsScene.cpp"
#line 36 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 208 "sipQtGuiQGraphicsScene.cpp"


class sipQGraphicsScene : public QGraphicsScene
{
public:
    sipQGraphicsScene(QObject *);
    sipQGraphicsScene(const QRectF&,QObject *);
    sipQGraphicsScene(qreal,qreal,qreal,qreal,QObject *);
    virtual ~sipQGraphicsScene();

    int qt_metacall(QMetaObject::Call,int,void **);
    void *qt_metacast(const char *);
    const QMetaObject *metaObject() const;

    /*
     * There is a public method for every protected method visible from
     * this class.
     */
    QObject * sipProtect_sender() const;
    int sipProtect_receivers(const char *) const;
    void sipProtectVirt_timerEvent(bool,QTimerEvent *);
    void sipProtectVirt_childEvent(bool,QChildEvent *);
    void sipProtectVirt_customEvent(bool,QEvent *);
    void sipProtectVirt_connectNotify(bool,const char *);
    void sipProtectVirt_disconnectNotify(bool,const char *);
    bool sipProtectVirt_event(bool,QEvent *);
    void sipProtectVirt_contextMenuEvent(bool,QGraphicsSceneContextMenuEvent *);
    void sipProtectVirt_dragEnterEvent(bool,QGraphicsSceneDragDropEvent *);
    void sipProtectVirt_dragMoveEvent(bool,QGraphicsSceneDragDropEvent *);
    void sipProtectVirt_dragLeaveEvent(bool,QGraphicsSceneDragDropEvent *);
    void sipProtectVirt_dropEvent(bool,QGraphicsSceneDragDropEvent *);
    void sipProtectVirt_focusInEvent(bool,QFocusEvent *);
    void sipProtectVirt_focusOutEvent(bool,QFocusEvent *);
    void sipProtectVirt_helpEvent(bool,QGraphicsSceneHelpEvent *);
    void sipProtectVirt_keyPressEvent(bool,QKeyEvent *);
    void sipProtectVirt_keyReleaseEvent(bool,QKeyEvent *);
    void sipProtectVirt_mousePressEvent(bool,QGraphicsSceneMouseEvent *);
    void sipProtectVirt_mouseMoveEvent(bool,QGraphicsSceneMouseEvent *);
    void sipProtectVirt_mouseReleaseEvent(bool,QGraphicsSceneMouseEvent *);
    void sipProtectVirt_mouseDoubleClickEvent(bool,QGraphicsSceneMouseEvent *);
    void sipProtectVirt_wheelEvent(bool,QGraphicsSceneWheelEvent *);
    void sipProtectVirt_inputMethodEvent(bool,QInputMethodEvent *);
    void sipProtectVirt_drawBackground(bool,QPainter *,const QRectF&);
    void sipProtectVirt_drawForeground(bool,QPainter *,const QRectF&);
    void sipProtectVirt_drawItems(bool,QPainter *,int,QGraphicsItem **,const QStyleOptionGraphicsItem *,QWidget *);
    bool sipProtectVirt_eventFilter(bool,QObject *,QEvent *);
    bool sipProtect_focusNextPrevChild(bool);

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    QVariant inputMethodQuery(Qt::InputMethodQuery) const;
    bool event(QEvent *);
    void contextMenuEvent(QGraphicsSceneContextMenuEvent *);
    void dragEnterEvent(QGraphicsSceneDragDropEvent *);
    void dragMoveEvent(QGraphicsSceneDragDropEvent *);
    void dragLeaveEvent(QGraphicsSceneDragDropEvent *);
    void dropEvent(QGraphicsSceneDragDropEvent *);
    void focusInEvent(QFocusEvent *);
    void focusOutEvent(QFocusEvent *);
    void helpEvent(QGraphicsSceneHelpEvent *);
    void keyPressEvent(QKeyEvent *);
    void keyReleaseEvent(QKeyEvent *);
    void mousePressEvent(QGraphicsSceneMouseEvent *);
    void mouseMoveEvent(QGraphicsSceneMouseEvent *);
    void mouseReleaseEvent(QGraphicsSceneMouseEvent *);
    void mouseDoubleClickEvent(QGraphicsSceneMouseEvent *);
    void wheelEvent(QGraphicsSceneWheelEvent *);
    void inputMethodEvent(QInputMethodEvent *);
    void drawBackground(QPainter *,const QRectF&);
    void drawForeground(QPainter *,const QRectF&);
    void drawItems(QPainter *,int,QGraphicsItem **,const QStyleOptionGraphicsItem *,QWidget *);
    bool eventFilter(QObject *,QEvent *);
    void timerEvent(QTimerEvent *);
    void childEvent(QChildEvent *);
    void customEvent(QEvent *);
    void connectNotify(const char *);
    void disconnectNotify(const char *);

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQGraphicsScene(const sipQGraphicsScene &);
    sipQGraphicsScene &operator = (const sipQGraphicsScene &);

    char sipPyMethods[27];
};

sipQGraphicsScene::sipQGraphicsScene(QObject *a0): QGraphicsScene(a0), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsScene::sipQGraphicsScene(const QRectF& a0,QObject *a1): QGraphicsScene(a0,a1), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsScene::sipQGraphicsScene(qreal a0,qreal a1,qreal a2,qreal a3,QObject *a4): QGraphicsScene(a0,a1,a2,a3,a4), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsScene::~sipQGraphicsScene()
{
    sipCommonDtor(sipPySelf);
}

const QMetaObject *sipQGraphicsScene::metaObject() const
{
    return sip_QtGui_qt_metaobject(sipPySelf,sipType_QGraphicsScene);
}

int sipQGraphicsScene::qt_metacall(QMetaObject::Call _c,int _id,void **_a)
{
    _id = QGraphicsScene::qt_metacall(_c,_id,_a);

    if (_id >= 0)
        _id = sip_QtGui_qt_metacall(sipPySelf,sipType_QGraphicsScene,_c,_id,_a);

    return _id;
}

void *sipQGraphicsScene::qt_metacast(const char *_clname)
{
    return (sip_QtGui_qt_metacast && sip_QtGui_qt_metacast(sipPySelf,sipType_QGraphicsScene,_clname)) ? this : QGraphicsScene::qt_metacast(_clname);
}

QVariant sipQGraphicsScene::inputMethodQuery(Qt::InputMethodQuery a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[0]),sipPySelf,NULL,sipName_inputMethodQuery);

    if (!meth)
        return QGraphicsScene::inputMethodQuery(a0);

    extern QVariant sipVH_QtGui_12(sip_gilstate_t,PyObject *,Qt::InputMethodQuery);

    return sipVH_QtGui_12(sipGILState,meth,a0);
}

bool sipQGraphicsScene::event(QEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[1],sipPySelf,NULL,sipName_event);

    if (!meth)
        return QGraphicsScene::event(a0);

    typedef bool (*sipVH_QtCore_5)(sip_gilstate_t,PyObject *,QEvent *);

    return ((sipVH_QtCore_5)(sipModuleAPI_QtGui_QtCore->em_virthandlers[5]))(sipGILState,meth,a0);
}

void sipQGraphicsScene::contextMenuEvent(QGraphicsSceneContextMenuEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,NULL,sipName_contextMenuEvent);

    if (!meth)
    {
        QGraphicsScene::contextMenuEvent(a0);
        return;
    }

    extern void sipVH_QtGui_203(sip_gilstate_t,PyObject *,QGraphicsSceneContextMenuEvent *);

    sipVH_QtGui_203(sipGILState,meth,a0);
}

void sipQGraphicsScene::dragEnterEvent(QGraphicsSceneDragDropEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[3],sipPySelf,NULL,sipName_dragEnterEvent);

    if (!meth)
    {
        QGraphicsScene::dragEnterEvent(a0);
        return;
    }

    extern void sipVH_QtGui_202(sip_gilstate_t,PyObject *,QGraphicsSceneDragDropEvent *);

    sipVH_QtGui_202(sipGILState,meth,a0);
}

void sipQGraphicsScene::dragMoveEvent(QGraphicsSceneDragDropEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[4],sipPySelf,NULL,sipName_dragMoveEvent);

    if (!meth)
    {
        QGraphicsScene::dragMoveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_202(sip_gilstate_t,PyObject *,QGraphicsSceneDragDropEvent *);

    sipVH_QtGui_202(sipGILState,meth,a0);
}

void sipQGraphicsScene::dragLeaveEvent(QGraphicsSceneDragDropEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[5],sipPySelf,NULL,sipName_dragLeaveEvent);

    if (!meth)
    {
        QGraphicsScene::dragLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_202(sip_gilstate_t,PyObject *,QGraphicsSceneDragDropEvent *);

    sipVH_QtGui_202(sipGILState,meth,a0);
}

void sipQGraphicsScene::dropEvent(QGraphicsSceneDragDropEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[6],sipPySelf,NULL,sipName_dropEvent);

    if (!meth)
    {
        QGraphicsScene::dropEvent(a0);
        return;
    }

    extern void sipVH_QtGui_202(sip_gilstate_t,PyObject *,QGraphicsSceneDragDropEvent *);

    sipVH_QtGui_202(sipGILState,meth,a0);
}

void sipQGraphicsScene::focusInEvent(QFocusEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[7],sipPySelf,NULL,sipName_focusInEvent);

    if (!meth)
    {
        QGraphicsScene::focusInEvent(a0);
        return;
    }

    extern void sipVH_QtGui_24(sip_gilstate_t,PyObject *,QFocusEvent *);

    sipVH_QtGui_24(sipGILState,meth,a0);
}

void sipQGraphicsScene::focusOutEvent(QFocusEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[8],sipPySelf,NULL,sipName_focusOutEvent);

    if (!meth)
    {
        QGraphicsScene::focusOutEvent(a0);
        return;
    }

    extern void sipVH_QtGui_24(sip_gilstate_t,PyObject *,QFocusEvent *);

    sipVH_QtGui_24(sipGILState,meth,a0);
}

void sipQGraphicsScene::helpEvent(QGraphicsSceneHelpEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[9],sipPySelf,NULL,sipName_helpEvent);

    if (!meth)
    {
        QGraphicsScene::helpEvent(a0);
        return;
    }

    extern void sipVH_QtGui_201(sip_gilstate_t,PyObject *,QGraphicsSceneHelpEvent *);

    sipVH_QtGui_201(sipGILState,meth,a0);
}

void sipQGraphicsScene::keyPressEvent(QKeyEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[10],sipPySelf,NULL,sipName_keyPressEvent);

    if (!meth)
    {
        QGraphicsScene::keyPressEvent(a0);
        return;
    }

    extern void sipVH_QtGui_25(sip_gilstate_t,PyObject *,QKeyEvent *);

    sipVH_QtGui_25(sipGILState,meth,a0);
}

void sipQGraphicsScene::keyReleaseEvent(QKeyEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[11],sipPySelf,NULL,sipName_keyReleaseEvent);

    if (!meth)
    {
        QGraphicsScene::keyReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtGui_25(sip_gilstate_t,PyObject *,QKeyEvent *);

    sipVH_QtGui_25(sipGILState,meth,a0);
}

void sipQGraphicsScene::mousePressEvent(QGraphicsSceneMouseEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[12],sipPySelf,NULL,sipName_mousePressEvent);

    if (!meth)
    {
        QGraphicsScene::mousePressEvent(a0);
        return;
    }

    extern void sipVH_QtGui_200(sip_gilstate_t,PyObject *,QGraphicsSceneMouseEvent *);

    sipVH_QtGui_200(sipGILState,meth,a0);
}

void sipQGraphicsScene::mouseMoveEvent(QGraphicsSceneMouseEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[13],sipPySelf,NULL,sipName_mouseMoveEvent);

    if (!meth)
    {
        QGraphicsScene::mouseMoveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_200(sip_gilstate_t,PyObject *,QGraphicsSceneMouseEvent *);

    sipVH_QtGui_200(sipGILState,meth,a0);
}

void sipQGraphicsScene::mouseReleaseEvent(QGraphicsSceneMouseEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[14],sipPySelf,NULL,sipName_mouseReleaseEvent);

    if (!meth)
    {
        QGraphicsScene::mouseReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtGui_200(sip_gilstate_t,PyObject *,QGraphicsSceneMouseEvent *);

    sipVH_QtGui_200(sipGILState,meth,a0);
}

void sipQGraphicsScene::mouseDoubleClickEvent(QGraphicsSceneMouseEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[15],sipPySelf,NULL,sipName_mouseDoubleClickEvent);

    if (!meth)
    {
        QGraphicsScene::mouseDoubleClickEvent(a0);
        return;
    }

    extern void sipVH_QtGui_200(sip_gilstate_t,PyObject *,QGraphicsSceneMouseEvent *);

    sipVH_QtGui_200(sipGILState,meth,a0);
}

void sipQGraphicsScene::wheelEvent(QGraphicsSceneWheelEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[16],sipPySelf,NULL,sipName_wheelEvent);

    if (!meth)
    {
        QGraphicsScene::wheelEvent(a0);
        return;
    }

    extern void sipVH_QtGui_199(sip_gilstate_t,PyObject *,QGraphicsSceneWheelEvent *);

    sipVH_QtGui_199(sipGILState,meth,a0);
}

void sipQGraphicsScene::inputMethodEvent(QInputMethodEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[17],sipPySelf,NULL,sipName_inputMethodEvent);

    if (!meth)
    {
        QGraphicsScene::inputMethodEvent(a0);
        return;
    }

    extern void sipVH_QtGui_13(sip_gilstate_t,PyObject *,QInputMethodEvent *);

    sipVH_QtGui_13(sipGILState,meth,a0);
}

void sipQGraphicsScene::drawBackground(QPainter *a0,const QRectF& a1)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[18],sipPySelf,NULL,sipName_drawBackground);

    if (!meth)
    {
        QGraphicsScene::drawBackground(a0,a1);
        return;
    }

    extern void sipVH_QtGui_185(sip_gilstate_t,PyObject *,QPainter *,const QRectF&);

    sipVH_QtGui_185(sipGILState,meth,a0,a1);
}

void sipQGraphicsScene::drawForeground(QPainter *a0,const QRectF& a1)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[19],sipPySelf,NULL,sipName_drawForeground);

    if (!meth)
    {
        QGraphicsScene::drawForeground(a0,a1);
        return;
    }

    extern void sipVH_QtGui_185(sip_gilstate_t,PyObject *,QPainter *,const QRectF&);

    sipVH_QtGui_185(sipGILState,meth,a0,a1);
}

void sipQGraphicsScene::drawItems(QPainter *a0,int a1,QGraphicsItem **a2,const QStyleOptionGraphicsItem *a3,QWidget *a4)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[20],sipPySelf,NULL,sipName_drawItems);

    if (!meth)
    {
        QGraphicsScene::drawItems(a0,a1,a2,a3,a4);
        return;
    }

    extern void sipVH_QtGui_198(sip_gilstate_t,PyObject *,QPainter *,int,QGraphicsItem **,const QStyleOptionGraphicsItem *,QWidget *);

    sipVH_QtGui_198(sipGILState,meth,a0,a1,a2,a3,a4);
}

bool sipQGraphicsScene::eventFilter(QObject *a0,QEvent *a1)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[21],sipPySelf,NULL,sipName_eventFilter);

    if (!meth)
        return QGraphicsScene::eventFilter(a0,a1);

    typedef bool (*sipVH_QtCore_18)(sip_gilstate_t,PyObject *,QObject *,QEvent *);

    return ((sipVH_QtCore_18)(sipModuleAPI_QtGui_QtCore->em_virthandlers[18]))(sipGILState,meth,a0,a1);
}

void sipQGraphicsScene::timerEvent(QTimerEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[22],sipPySelf,NULL,sipName_timerEvent);

    if (!meth)
    {
        QObject::timerEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_9)(sip_gilstate_t,PyObject *,QTimerEvent *);

    ((sipVH_QtCore_9)(sipModuleAPI_QtGui_QtCore->em_virthandlers[9]))(sipGILState,meth,a0);
}

void sipQGraphicsScene::childEvent(QChildEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[23],sipPySelf,NULL,sipName_childEvent);

    if (!meth)
    {
        QObject::childEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_25)(sip_gilstate_t,PyObject *,QChildEvent *);

    ((sipVH_QtCore_25)(sipModuleAPI_QtGui_QtCore->em_virthandlers[25]))(sipGILState,meth,a0);
}

void sipQGraphicsScene::customEvent(QEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[24],sipPySelf,NULL,sipName_customEvent);

    if (!meth)
    {
        QObject::customEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_17)(sip_gilstate_t,PyObject *,QEvent *);

    ((sipVH_QtCore_17)(sipModuleAPI_QtGui_QtCore->em_virthandlers[17]))(sipGILState,meth,a0);
}

void sipQGraphicsScene::connectNotify(const char *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[25],sipPySelf,NULL,sipName_connectNotify);

    if (!meth)
    {
        QObject::connectNotify(a0);
        return;
    }

    typedef void (*sipVH_QtCore_24)(sip_gilstate_t,PyObject *,const char *);

    ((sipVH_QtCore_24)(sipModuleAPI_QtGui_QtCore->em_virthandlers[24]))(sipGILState,meth,a0);
}

void sipQGraphicsScene::disconnectNotify(const char *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[26],sipPySelf,NULL,sipName_disconnectNotify);

    if (!meth)
    {
        QObject::disconnectNotify(a0);
        return;
    }

    typedef void (*sipVH_QtCore_24)(sip_gilstate_t,PyObject *,const char *);

    ((sipVH_QtCore_24)(sipModuleAPI_QtGui_QtCore->em_virthandlers[24]))(sipGILState,meth,a0);
}

QObject * sipQGraphicsScene::sipProtect_sender() const
{
    return QObject::sender();
}

int sipQGraphicsScene::sipProtect_receivers(const char *a0) const
{
    return QObject::receivers(a0);
}

void sipQGraphicsScene::sipProtectVirt_timerEvent(bool sipSelfWasArg,QTimerEvent *a0)
{
    (sipSelfWasArg ? QObject::timerEvent(a0) : timerEvent(a0));
}

void sipQGraphicsScene::sipProtectVirt_childEvent(bool sipSelfWasArg,QChildEvent *a0)
{
    (sipSelfWasArg ? QObject::childEvent(a0) : childEvent(a0));
}

void sipQGraphicsScene::sipProtectVirt_customEvent(bool sipSelfWasArg,QEvent *a0)
{
    (sipSelfWasArg ? QObject::customEvent(a0) : customEvent(a0));
}

void sipQGraphicsScene::sipProtectVirt_connectNotify(bool sipSelfWasArg,const char *a0)
{
    (sipSelfWasArg ? QObject::connectNotify(a0) : connectNotify(a0));
}

void sipQGraphicsScene::sipProtectVirt_disconnectNotify(bool sipSelfWasArg,const char *a0)
{
    (sipSelfWasArg ? QObject::disconnectNotify(a0) : disconnectNotify(a0));
}

bool sipQGraphicsScene::sipProtectVirt_event(bool sipSelfWasArg,QEvent *a0)
{
    return (sipSelfWasArg ? QGraphicsScene::event(a0) : event(a0));
}

void sipQGraphicsScene::sipProtectVirt_contextMenuEvent(bool sipSelfWasArg,QGraphicsSceneContextMenuEvent *a0)
{
    (sipSelfWasArg ? QGraphicsScene::contextMenuEvent(a0) : contextMenuEvent(a0));
}

void sipQGraphicsScene::sipProtectVirt_dragEnterEvent(bool sipSelfWasArg,QGraphicsSceneDragDropEvent *a0)
{
    (sipSelfWasArg ? QGraphicsScene::dragEnterEvent(a0) : dragEnterEvent(a0));
}

void sipQGraphicsScene::sipProtectVirt_dragMoveEvent(bool sipSelfWasArg,QGraphicsSceneDragDropEvent *a0)
{
    (sipSelfWasArg ? QGraphicsScene::dragMoveEvent(a0) : dragMoveEvent(a0));
}

void sipQGraphicsScene::sipProtectVirt_dragLeaveEvent(bool sipSelfWasArg,QGraphicsSceneDragDropEvent *a0)
{
    (sipSelfWasArg ? QGraphicsScene::dragLeaveEvent(a0) : dragLeaveEvent(a0));
}

void sipQGraphicsScene::sipProtectVirt_dropEvent(bool sipSelfWasArg,QGraphicsSceneDragDropEvent *a0)
{
    (sipSelfWasArg ? QGraphicsScene::dropEvent(a0) : dropEvent(a0));
}

void sipQGraphicsScene::sipProtectVirt_focusInEvent(bool sipSelfWasArg,QFocusEvent *a0)
{
    (sipSelfWasArg ? QGraphicsScene::focusInEvent(a0) : focusInEvent(a0));
}

void sipQGraphicsScene::sipProtectVirt_focusOutEvent(bool sipSelfWasArg,QFocusEvent *a0)
{
    (sipSelfWasArg ? QGraphicsScene::focusOutEvent(a0) : focusOutEvent(a0));
}

void sipQGraphicsScene::sipProtectVirt_helpEvent(bool sipSelfWasArg,QGraphicsSceneHelpEvent *a0)
{
    (sipSelfWasArg ? QGraphicsScene::helpEvent(a0) : helpEvent(a0));
}

void sipQGraphicsScene::sipProtectVirt_keyPressEvent(bool sipSelfWasArg,QKeyEvent *a0)
{
    (sipSelfWasArg ? QGraphicsScene::keyPressEvent(a0) : keyPressEvent(a0));
}

void sipQGraphicsScene::sipProtectVirt_keyReleaseEvent(bool sipSelfWasArg,QKeyEvent *a0)
{
    (sipSelfWasArg ? QGraphicsScene::keyReleaseEvent(a0) : keyReleaseEvent(a0));
}

void sipQGraphicsScene::sipProtectVirt_mousePressEvent(bool sipSelfWasArg,QGraphicsSceneMouseEvent *a0)
{
    (sipSelfWasArg ? QGraphicsScene::mousePressEvent(a0) : mousePressEvent(a0));
}

void sipQGraphicsScene::sipProtectVirt_mouseMoveEvent(bool sipSelfWasArg,QGraphicsSceneMouseEvent *a0)
{
    (sipSelfWasArg ? QGraphicsScene::mouseMoveEvent(a0) : mouseMoveEvent(a0));
}

void sipQGraphicsScene::sipProtectVirt_mouseReleaseEvent(bool sipSelfWasArg,QGraphicsSceneMouseEvent *a0)
{
    (sipSelfWasArg ? QGraphicsScene::mouseReleaseEvent(a0) : mouseReleaseEvent(a0));
}

void sipQGraphicsScene::sipProtectVirt_mouseDoubleClickEvent(bool sipSelfWasArg,QGraphicsSceneMouseEvent *a0)
{
    (sipSelfWasArg ? QGraphicsScene::mouseDoubleClickEvent(a0) : mouseDoubleClickEvent(a0));
}

void sipQGraphicsScene::sipProtectVirt_wheelEvent(bool sipSelfWasArg,QGraphicsSceneWheelEvent *a0)
{
    (sipSelfWasArg ? QGraphicsScene::wheelEvent(a0) : wheelEvent(a0));
}

void sipQGraphicsScene::sipProtectVirt_inputMethodEvent(bool sipSelfWasArg,QInputMethodEvent *a0)
{
    (sipSelfWasArg ? QGraphicsScene::inputMethodEvent(a0) : inputMethodEvent(a0));
}

void sipQGraphicsScene::sipProtectVirt_drawBackground(bool sipSelfWasArg,QPainter *a0,const QRectF& a1)
{
    (sipSelfWasArg ? QGraphicsScene::drawBackground(a0,a1) : drawBackground(a0,a1));
}

void sipQGraphicsScene::sipProtectVirt_drawForeground(bool sipSelfWasArg,QPainter *a0,const QRectF& a1)
{
    (sipSelfWasArg ? QGraphicsScene::drawForeground(a0,a1) : drawForeground(a0,a1));
}

void sipQGraphicsScene::sipProtectVirt_drawItems(bool sipSelfWasArg,QPainter *a0,int a1,QGraphicsItem **a2,const QStyleOptionGraphicsItem *a3,QWidget *a4)
{
    (sipSelfWasArg ? QGraphicsScene::drawItems(a0,a1,a2,a3,a4) : drawItems(a0,a1,a2,a3,a4));
}

bool sipQGraphicsScene::sipProtectVirt_eventFilter(bool sipSelfWasArg,QObject *a0,QEvent *a1)
{
    return (sipSelfWasArg ? QGraphicsScene::eventFilter(a0,a1) : eventFilter(a0,a1));
}

bool sipQGraphicsScene::sipProtect_focusNextPrevChild(bool a0)
{
    return QGraphicsScene::focusNextPrevChild(a0);
}


extern "C" {static PyObject *meth_QGraphicsScene_sender(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_sender(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        sipQGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            QObject *sipRes = 0;

#line 529 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qobject.sip"
        typedef QObject *(*helper_func)(QObject *);
        
        static helper_func helper = 0;
        
        if (!helper)
            helper = (helper_func)sipImportSymbol("qpycore_qobject_sender");
        
        if (helper)
        #if defined(SIP_PROTECTED_IS_PUBLIC)
            sipRes = helper(sipCpp->sender());
        #else
            sipRes = helper(sipCpp->sipProtect_sender());
        #endif
#line 989 "sipQtGuiQGraphicsScene.cpp"

            return sipConvertFromType(sipRes,sipType_QObject,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_sender, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_receivers(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_receivers(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        char * a0;
        sipQGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BG", &sipSelf, sipType_QGraphicsScene, &sipCpp, &a0))
        {
            int sipRes = 0;

#line 546 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtCore/qobject.sip"
        // We need to take into account any proxies for Python signals. Import the
        // helper if it hasn't already been done.
        typedef int (*helper_func)(QObject *, const char *, int);
        
        static helper_func helper = 0;
        
        if (!helper)
            helper = (helper_func)sipImportSymbol("qpycore_qobject_receivers");
        
        if (helper)
        #if defined(SIP_PROTECTED_IS_PUBLIC)
            sipRes = helper(sipCpp, a0, sipCpp->receivers(a0));
        #else
            sipRes = helper(sipCpp, a0, sipCpp->sipProtect_receivers(a0));
        #endif
#line 1031 "sipQtGuiQGraphicsScene.cpp"

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_receivers, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_timerEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_timerEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QTimerEvent * a0;
        sipQGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QTimerEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_timerEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_timerEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_childEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_childEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QChildEvent * a0;
        sipQGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QChildEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_childEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_childEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_customEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_customEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent * a0;
        sipQGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_customEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_customEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_connectNotify(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_connectNotify(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        char * a0;
        sipQGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BG", &sipSelf, sipType_QGraphicsScene, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_connectNotify(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_connectNotify, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_disconnectNotify(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_disconnectNotify(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        char * a0;
        sipQGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BG", &sipSelf, sipType_QGraphicsScene, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_disconnectNotify(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_disconnectNotify, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_sceneRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_sceneRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            QRectF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->sceneRect());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_sceneRect, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_width(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_width(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->width();
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_width, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_height(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_height(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->height();
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_height, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_setSceneRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_setSceneRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QRectF * a0;
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QRectF, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setSceneRect(*a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QGraphicsScene, &sipCpp, &a0, &a1, &a2, &a3))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setSceneRect(a0,a1,a2,a3);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_setSceneRect, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_render(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_render(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        QPainter * a0;
        const QRectF& a1def = QRectF();
        const QRectF * a1 = &a1def;
        const QRectF& a2def = QRectF();
        const QRectF * a2 = &a2def;
        Qt::AspectRatioMode a3 = Qt::KeepAspectRatio;
        QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_target,
            sipName_source,
            sipName_mode,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ8|J9J9E", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QPainter, &a0, sipType_QRectF, &a1, sipType_QRectF, &a2, sipType_Qt_AspectRatioMode, &a3))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->render(a0,*a1,*a2,a3);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_render, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_itemIndexMethod(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_itemIndexMethod(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            QGraphicsScene::ItemIndexMethod sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->itemIndexMethod();
            Py_END_ALLOW_THREADS

            return sipConvertFromEnum(sipRes,sipType_QGraphicsScene_ItemIndexMethod);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_itemIndexMethod, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_setItemIndexMethod(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_setItemIndexMethod(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsScene::ItemIndexMethod a0;
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsScene_ItemIndexMethod, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setItemIndexMethod(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_setItemIndexMethod, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_itemsBoundingRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_itemsBoundingRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            QRectF *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->itemsBoundingRect());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_itemsBoundingRect, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_items(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_items(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsScene *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            QList<QGraphicsItem *> *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QList<QGraphicsItem *>(sipCpp->items());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,NULL);
        }
    }

    {
        const QPointF * a0;
        QGraphicsScene *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QPointF, &a0))
        {
            QList<QGraphicsItem *> *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QList<QGraphicsItem *>(sipCpp->items(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,NULL);
        }
    }

    {
        const QRectF * a0;
        Qt::ItemSelectionMode a1 = Qt::IntersectsItemShape;
        QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_mode,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ9|E", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QRectF, &a0, sipType_Qt_ItemSelectionMode, &a1))
        {
            QList<QGraphicsItem *> *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QList<QGraphicsItem *>(sipCpp->items(*a0,a1));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,NULL);
        }
    }

    {
        const QPolygonF * a0;
        Qt::ItemSelectionMode a1 = Qt::IntersectsItemShape;
        QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_mode,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ9|E", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QPolygonF, &a0, sipType_Qt_ItemSelectionMode, &a1))
        {
            QList<QGraphicsItem *> *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QList<QGraphicsItem *>(sipCpp->items(*a0,a1));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,NULL);
        }
    }

    {
        const QPainterPath * a0;
        Qt::ItemSelectionMode a1 = Qt::IntersectsItemShape;
        QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_mode,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ9|E", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QPainterPath, &a0, sipType_Qt_ItemSelectionMode, &a1))
        {
            QList<QGraphicsItem *> *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QList<QGraphicsItem *>(sipCpp->items(*a0,a1));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,NULL);
        }
    }

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        Qt::ItemSelectionMode a4 = Qt::IntersectsItemShape;
        QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            NULL,
            NULL,
            sipName_mode,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "Bdddd|E", &sipSelf, sipType_QGraphicsScene, &sipCpp, &a0, &a1, &a2, &a3, sipType_Qt_ItemSelectionMode, &a4))
        {
            QList<QGraphicsItem *> *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QList<QGraphicsItem *>(sipCpp->items(a0,a1,a2,a3,a4));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,NULL);
        }
    }

    {
        Qt::SortOrder a0;
        QGraphicsScene *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BE", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_Qt_SortOrder, &a0))
        {
            QList<QGraphicsItem *> *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QList<QGraphicsItem *>(sipCpp->items(a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,NULL);
        }
    }

    {
        const QPointF * a0;
        Qt::ItemSelectionMode a1;
        Qt::SortOrder a2;
        const QTransform& a3def = QTransform();
        const QTransform * a3 = &a3def;
        QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            NULL,
            sipName_deviceTransform,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ9EE|J9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QPointF, &a0, sipType_Qt_ItemSelectionMode, &a1, sipType_Qt_SortOrder, &a2, sipType_QTransform, &a3))
        {
            QList<QGraphicsItem *> *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QList<QGraphicsItem *>(sipCpp->items(*a0,a1,a2,*a3));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,NULL);
        }
    }

    {
        const QRectF * a0;
        Qt::ItemSelectionMode a1;
        Qt::SortOrder a2;
        const QTransform& a3def = QTransform();
        const QTransform * a3 = &a3def;
        QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            NULL,
            sipName_deviceTransform,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ9EE|J9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QRectF, &a0, sipType_Qt_ItemSelectionMode, &a1, sipType_Qt_SortOrder, &a2, sipType_QTransform, &a3))
        {
            QList<QGraphicsItem *> *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QList<QGraphicsItem *>(sipCpp->items(*a0,a1,a2,*a3));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,NULL);
        }
    }

    {
        const QPolygonF * a0;
        Qt::ItemSelectionMode a1;
        Qt::SortOrder a2;
        const QTransform& a3def = QTransform();
        const QTransform * a3 = &a3def;
        QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            NULL,
            sipName_deviceTransform,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ9EE|J9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QPolygonF, &a0, sipType_Qt_ItemSelectionMode, &a1, sipType_Qt_SortOrder, &a2, sipType_QTransform, &a3))
        {
            QList<QGraphicsItem *> *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QList<QGraphicsItem *>(sipCpp->items(*a0,a1,a2,*a3));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,NULL);
        }
    }

    {
        const QPainterPath * a0;
        Qt::ItemSelectionMode a1;
        Qt::SortOrder a2;
        const QTransform& a3def = QTransform();
        const QTransform * a3 = &a3def;
        QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            NULL,
            sipName_deviceTransform,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ9EE|J9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QPainterPath, &a0, sipType_Qt_ItemSelectionMode, &a1, sipType_Qt_SortOrder, &a2, sipType_QTransform, &a3))
        {
            QList<QGraphicsItem *> *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QList<QGraphicsItem *>(sipCpp->items(*a0,a1,a2,*a3));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,NULL);
        }
    }

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        Qt::ItemSelectionMode a4;
        Qt::SortOrder a5;
        const QTransform& a6def = QTransform();
        const QTransform * a6 = &a6def;
        QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            NULL,
            NULL,
            NULL,
            NULL,
            sipName_deviceTransform,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BddddEE|J9", &sipSelf, sipType_QGraphicsScene, &sipCpp, &a0, &a1, &a2, &a3, sipType_Qt_ItemSelectionMode, &a4, sipType_Qt_SortOrder, &a5, sipType_QTransform, &a6))
        {
            QList<QGraphicsItem *> *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QList<QGraphicsItem *>(sipCpp->items(a0,a1,a2,a3,a4,a5,*a6));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_items, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_collidingItems(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_collidingItems(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem * a0;
        Qt::ItemSelectionMode a1 = Qt::IntersectsItemShape;
        QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_mode,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ8|E", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsItem, &a0, sipType_Qt_ItemSelectionMode, &a1))
        {
            QList<QGraphicsItem *> *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QList<QGraphicsItem *>(sipCpp->collidingItems(a0,a1));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_collidingItems, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_itemAt(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_itemAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QPointF * a0;
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QPointF, &a0))
        {
            QGraphicsItem *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->itemAt(*a0);
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsItem,NULL);
        }
    }

    {
        qreal a0;
        qreal a1;
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QGraphicsScene, &sipCpp, &a0, &a1))
        {
            QGraphicsItem *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->itemAt(a0,a1);
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsItem,NULL);
        }
    }

    {
        const QPointF * a0;
        const QTransform * a1;
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9J9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QPointF, &a0, sipType_QTransform, &a1))
        {
            QGraphicsItem *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->itemAt(*a0,*a1);
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsItem,NULL);
        }
    }

    {
        qreal a0;
        qreal a1;
        const QTransform * a2;
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BddJ9", &sipSelf, sipType_QGraphicsScene, &sipCpp, &a0, &a1, sipType_QTransform, &a2))
        {
            QGraphicsItem *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->itemAt(a0,a1,*a2);
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_itemAt, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_selectedItems(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_selectedItems(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            QList<QGraphicsItem *> *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QList<QGraphicsItem *>(sipCpp->selectedItems());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_selectedItems, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_setSelectionArea(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_setSelectionArea(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QPainterPath * a0;
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QPainterPath, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setSelectionArea(*a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        const QPainterPath * a0;
        Qt::ItemSelectionMode a1;
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9E", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QPainterPath, &a0, sipType_Qt_ItemSelectionMode, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setSelectionArea(*a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        const QPainterPath * a0;
        const QTransform * a1;
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9J9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QPainterPath, &a0, sipType_QTransform, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setSelectionArea(*a0,*a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        const QPainterPath * a0;
        Qt::ItemSelectionMode a1;
        const QTransform * a2;
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9EJ9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QPainterPath, &a0, sipType_Qt_ItemSelectionMode, &a1, sipType_QTransform, &a2))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setSelectionArea(*a0,a1,*a2);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_setSelectionArea, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_clearSelection(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_clearSelection(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->clearSelection();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_clearSelection, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_createItemGroup(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_createItemGroup(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QList<QGraphicsItem *> * a0;
        int a0State = 0;
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ3", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QList_0101QGraphicsItem,&a0, &a0State))
        {
            QGraphicsItemGroup *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->createItemGroup(*a0);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast<QList<QGraphicsItem *> *>(a0),sipType_QList_0101QGraphicsItem,a0State);

            return sipConvertFromType(sipRes,sipType_QGraphicsItemGroup,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_createItemGroup, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_destroyItemGroup(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_destroyItemGroup(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsItemGroup * a0;
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsItemGroup, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->destroyItemGroup(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_destroyItemGroup, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_addItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_addItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsItem * a0;
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsItem, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->addItem(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_addItem, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_addEllipse(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_addEllipse(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const QRectF * a0;
        const QPen& a1def = QPen();
        const QPen * a1 = &a1def;
        int a1State = 0;
        const QBrush& a2def = QBrush();
        const QBrush * a2 = &a2def;
        int a2State = 0;
        QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_pen,
            sipName_brush,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ9|J1J1", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QRectF, &a0, sipType_QPen, &a1, &a1State, sipType_QBrush, &a2, &a2State))
        {
            QGraphicsEllipseItem *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->addEllipse(*a0,*a1,*a2);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast<QPen *>(a1),sipType_QPen,a1State);
            sipReleaseType(const_cast<QBrush *>(a2),sipType_QBrush,a2State);

            return sipConvertFromType(sipRes,sipType_QGraphicsEllipseItem,NULL);
        }
    }

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        const QPen& a4def = QPen();
        const QPen * a4 = &a4def;
        int a4State = 0;
        const QBrush& a5def = QBrush();
        const QBrush * a5 = &a5def;
        int a5State = 0;
        QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            NULL,
            NULL,
            sipName_pen,
            sipName_brush,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "Bdddd|J1J1", &sipSelf, sipType_QGraphicsScene, &sipCpp, &a0, &a1, &a2, &a3, sipType_QPen, &a4, &a4State, sipType_QBrush, &a5, &a5State))
        {
            QGraphicsEllipseItem *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->addEllipse(a0,a1,a2,a3,*a4,*a5);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast<QPen *>(a4),sipType_QPen,a4State);
            sipReleaseType(const_cast<QBrush *>(a5),sipType_QBrush,a5State);

            return sipConvertFromType(sipRes,sipType_QGraphicsEllipseItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_addEllipse, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_addLine(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_addLine(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const QLineF * a0;
        const QPen& a1def = QPen();
        const QPen * a1 = &a1def;
        int a1State = 0;
        QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_pen,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ9|J1", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QLineF, &a0, sipType_QPen, &a1, &a1State))
        {
            QGraphicsLineItem *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->addLine(*a0,*a1);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast<QPen *>(a1),sipType_QPen,a1State);

            return sipConvertFromType(sipRes,sipType_QGraphicsLineItem,NULL);
        }
    }

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        const QPen& a4def = QPen();
        const QPen * a4 = &a4def;
        int a4State = 0;
        QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            NULL,
            NULL,
            sipName_pen,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "Bdddd|J1", &sipSelf, sipType_QGraphicsScene, &sipCpp, &a0, &a1, &a2, &a3, sipType_QPen, &a4, &a4State))
        {
            QGraphicsLineItem *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->addLine(a0,a1,a2,a3,*a4);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast<QPen *>(a4),sipType_QPen,a4State);

            return sipConvertFromType(sipRes,sipType_QGraphicsLineItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_addLine, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_addPath(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_addPath(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const QPainterPath * a0;
        const QPen& a1def = QPen();
        const QPen * a1 = &a1def;
        int a1State = 0;
        const QBrush& a2def = QBrush();
        const QBrush * a2 = &a2def;
        int a2State = 0;
        QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_pen,
            sipName_brush,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ9|J1J1", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QPainterPath, &a0, sipType_QPen, &a1, &a1State, sipType_QBrush, &a2, &a2State))
        {
            QGraphicsPathItem *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->addPath(*a0,*a1,*a2);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast<QPen *>(a1),sipType_QPen,a1State);
            sipReleaseType(const_cast<QBrush *>(a2),sipType_QBrush,a2State);

            return sipConvertFromType(sipRes,sipType_QGraphicsPathItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_addPath, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_addPixmap(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_addPixmap(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QPixmap * a0;
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QPixmap, &a0))
        {
            QGraphicsPixmapItem *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->addPixmap(*a0);
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsPixmapItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_addPixmap, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_addPolygon(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_addPolygon(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const QPolygonF * a0;
        const QPen& a1def = QPen();
        const QPen * a1 = &a1def;
        int a1State = 0;
        const QBrush& a2def = QBrush();
        const QBrush * a2 = &a2def;
        int a2State = 0;
        QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_pen,
            sipName_brush,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ9|J1J1", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QPolygonF, &a0, sipType_QPen, &a1, &a1State, sipType_QBrush, &a2, &a2State))
        {
            QGraphicsPolygonItem *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->addPolygon(*a0,*a1,*a2);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast<QPen *>(a1),sipType_QPen,a1State);
            sipReleaseType(const_cast<QBrush *>(a2),sipType_QBrush,a2State);

            return sipConvertFromType(sipRes,sipType_QGraphicsPolygonItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_addPolygon, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_addRect(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_addRect(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const QRectF * a0;
        const QPen& a1def = QPen();
        const QPen * a1 = &a1def;
        int a1State = 0;
        const QBrush& a2def = QBrush();
        const QBrush * a2 = &a2def;
        int a2State = 0;
        QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_pen,
            sipName_brush,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ9|J1J1", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QRectF, &a0, sipType_QPen, &a1, &a1State, sipType_QBrush, &a2, &a2State))
        {
            QGraphicsRectItem *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->addRect(*a0,*a1,*a2);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast<QPen *>(a1),sipType_QPen,a1State);
            sipReleaseType(const_cast<QBrush *>(a2),sipType_QBrush,a2State);

            return sipConvertFromType(sipRes,sipType_QGraphicsRectItem,NULL);
        }
    }

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        const QPen& a4def = QPen();
        const QPen * a4 = &a4def;
        int a4State = 0;
        const QBrush& a5def = QBrush();
        const QBrush * a5 = &a5def;
        int a5State = 0;
        QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            NULL,
            NULL,
            sipName_pen,
            sipName_brush,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "Bdddd|J1J1", &sipSelf, sipType_QGraphicsScene, &sipCpp, &a0, &a1, &a2, &a3, sipType_QPen, &a4, &a4State, sipType_QBrush, &a5, &a5State))
        {
            QGraphicsRectItem *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->addRect(a0,a1,a2,a3,*a4,*a5);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast<QPen *>(a4),sipType_QPen,a4State);
            sipReleaseType(const_cast<QBrush *>(a5),sipType_QBrush,a5State);

            return sipConvertFromType(sipRes,sipType_QGraphicsRectItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_addRect, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_addSimpleText(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_addSimpleText(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const QString * a0;
        int a0State = 0;
        const QFont& a1def = QFont();
        const QFont * a1 = &a1def;
        QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_font,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ1|J9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QString,&a0, &a0State, sipType_QFont, &a1))
        {
            QGraphicsSimpleTextItem *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->addSimpleText(*a0,*a1);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast<QString *>(a0),sipType_QString,a0State);

            return sipConvertFromType(sipRes,sipType_QGraphicsSimpleTextItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_addSimpleText, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_addText(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_addText(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const QString * a0;
        int a0State = 0;
        const QFont& a1def = QFont();
        const QFont * a1 = &a1def;
        QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_font,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ1|J9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QString,&a0, &a0State, sipType_QFont, &a1))
        {
            QGraphicsTextItem *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->addText(*a0,*a1);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast<QString *>(a0),sipType_QString,a0State);

            return sipConvertFromType(sipRes,sipType_QGraphicsTextItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_addText, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_removeItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_removeItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsItem * a0;
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ<", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsItem, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->removeItem(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_removeItem, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_focusItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_focusItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            QGraphicsItem *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->focusItem();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_focusItem, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_setFocusItem(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_setFocusItem(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsItem * a0;
        Qt::FocusReason a1 = Qt::OtherFocusReason;
        QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_focusReason,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ8|E", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsItem, &a0, sipType_Qt_FocusReason, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setFocusItem(a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_setFocusItem, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_hasFocus(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_hasFocus(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->hasFocus();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_hasFocus, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_setFocus(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_setFocus(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        Qt::FocusReason a0 = Qt::OtherFocusReason;
        QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            sipName_focusReason,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "B|E", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_Qt_FocusReason, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setFocus(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_setFocus, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_clearFocus(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_clearFocus(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->clearFocus();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_clearFocus, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_mouseGrabberItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_mouseGrabberItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            QGraphicsItem *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->mouseGrabberItem();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_mouseGrabberItem, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_backgroundBrush(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_backgroundBrush(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            QBrush *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QBrush(sipCpp->backgroundBrush());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QBrush,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_backgroundBrush, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_setBackgroundBrush(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_setBackgroundBrush(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QBrush * a0;
        int a0State = 0;
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QBrush, &a0, &a0State))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setBackgroundBrush(*a0);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast<QBrush *>(a0),sipType_QBrush,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_setBackgroundBrush, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_foregroundBrush(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_foregroundBrush(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            QBrush *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QBrush(sipCpp->foregroundBrush());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QBrush,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_foregroundBrush, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_setForegroundBrush(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_setForegroundBrush(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QBrush * a0;
        int a0State = 0;
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QBrush, &a0, &a0State))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setForegroundBrush(*a0);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast<QBrush *>(a0),sipType_QBrush,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_setForegroundBrush, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_inputMethodQuery(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_inputMethodQuery(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        Qt::InputMethodQuery a0;
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_Qt_InputMethodQuery, &a0))
        {
            QVariant *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QVariant((sipSelfWasArg ? sipCpp->QGraphicsScene::inputMethodQuery(a0) : sipCpp->inputMethodQuery(a0)));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QVariant,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_inputMethodQuery, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_views(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_views(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            QList<QGraphicsView *> *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QList<QGraphicsView *>(sipCpp->views());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsView,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_views, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_advance(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_advance(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->advance();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_advance, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_update(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_update(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const QRectF& a0def = QRectF();
        const QRectF * a0 = &a0def;
        QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            sipName_rect,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "B|J9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QRectF, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->update(*a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        QGraphicsScene *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "Bdddd", &sipSelf, sipType_QGraphicsScene, &sipCpp, &a0, &a1, &a2, &a3))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->update(a0,a1,a2,a3);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_update, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_invalidate(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_invalidate(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const QRectF& a0def = QRectF();
        const QRectF * a0 = &a0def;
        QGraphicsScene::SceneLayers a1def = QGraphicsScene::AllLayers;
        QGraphicsScene::SceneLayers * a1 = &a1def;
        int a1State = 0;
        QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            sipName_rect,
            sipName_layers,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "B|J9J1", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QRectF, &a0, sipType_QGraphicsScene_SceneLayers, &a1, &a1State))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->invalidate(*a0,*a1);
            Py_END_ALLOW_THREADS
            sipReleaseType(a1,sipType_QGraphicsScene_SceneLayers,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        QGraphicsScene::SceneLayers a4def = QGraphicsScene::AllLayers;
        QGraphicsScene::SceneLayers * a4 = &a4def;
        int a4State = 0;
        QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            NULL,
            NULL,
            sipName_layers,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "Bdddd|J1", &sipSelf, sipType_QGraphicsScene, &sipCpp, &a0, &a1, &a2, &a3, sipType_QGraphicsScene_SceneLayers, &a4, &a4State))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->invalidate(a0,a1,a2,a3,*a4);
            Py_END_ALLOW_THREADS
            sipReleaseType(a4,sipType_QGraphicsScene_SceneLayers,a4State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_invalidate, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_clear(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_clear(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->clear();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_clear, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_event(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_event(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent * a0;
        sipQGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QEvent, &a0))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->sipProtectVirt_event(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_event, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_contextMenuEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_contextMenuEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneContextMenuEvent * a0;
        sipQGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsSceneContextMenuEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_contextMenuEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_contextMenuEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_dragEnterEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_dragEnterEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent * a0;
        sipQGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_dragEnterEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_dragEnterEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_dragMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_dragMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent * a0;
        sipQGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_dragMoveEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_dragMoveEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_dragLeaveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_dragLeaveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent * a0;
        sipQGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_dragLeaveEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_dragLeaveEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_dropEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_dropEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent * a0;
        sipQGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_dropEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_dropEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_focusInEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_focusInEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QFocusEvent * a0;
        sipQGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QFocusEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_focusInEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_focusInEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_focusOutEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_focusOutEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QFocusEvent * a0;
        sipQGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QFocusEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_focusOutEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_focusOutEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_helpEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_helpEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneHelpEvent * a0;
        sipQGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsSceneHelpEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_helpEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_helpEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_keyPressEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_keyPressEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QKeyEvent * a0;
        sipQGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QKeyEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_keyPressEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_keyPressEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_keyReleaseEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_keyReleaseEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QKeyEvent * a0;
        sipQGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QKeyEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_keyReleaseEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_keyReleaseEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_mousePressEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_mousePressEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent * a0;
        sipQGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_mousePressEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_mousePressEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_mouseMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_mouseMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent * a0;
        sipQGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_mouseMoveEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_mouseMoveEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_mouseReleaseEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_mouseReleaseEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent * a0;
        sipQGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_mouseReleaseEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_mouseReleaseEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_mouseDoubleClickEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_mouseDoubleClickEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent * a0;
        sipQGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_mouseDoubleClickEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_mouseDoubleClickEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_wheelEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_wheelEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneWheelEvent * a0;
        sipQGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsSceneWheelEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_wheelEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_wheelEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_inputMethodEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_inputMethodEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QInputMethodEvent * a0;
        sipQGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QInputMethodEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_inputMethodEvent(sipSelfWasArg,a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_inputMethodEvent, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_drawBackground(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_drawBackground(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QPainter * a0;
        const QRectF * a1;
        sipQGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QPainter, &a0, sipType_QRectF, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_drawBackground(sipSelfWasArg,a0,*a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_drawBackground, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_drawForeground(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_drawForeground(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QPainter * a0;
        const QRectF * a1;
        sipQGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QPainter, &a0, sipType_QRectF, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->sipProtectVirt_drawForeground(sipSelfWasArg,a0,*a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_drawForeground, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_drawItems(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_drawItems(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QPainter * a0;
        PyObject * a1;
        PyObject * a2;
        QWidget * a3 = 0;
        sipQGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            sipName_painter,
            sipName_items,
            sipName_options,
            sipName_widget,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ8TT|J8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QPainter, &a0, &PyList_Type, &a1, &PyList_Type, &a2, sipType_QWidget, &a3))
        {
            int sipIsErr = 0;

#line 183 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicsscene.sip"
        // PyQt takes lists as the items and options arguments.
        
        // Adjust the number items according to the actual list lengths.
        SIP_SSIZE_T numItems = PyList_GET_SIZE(a1);
        
        if (numItems > PyList_GET_SIZE(a2))
            numItems = PyList_GET_SIZE(a2);
        
        // Allocate temporary storage for the C++ conversions.
        QGraphicsItem **items = new QGraphicsItem *[numItems];
        QStyleOptionGraphicsItem *options = new QStyleOptionGraphicsItem[numItems];
        
        for (int i = 0; i < numItems; ++i)
        {
            void *cpp;
        
            cpp = sipForceConvertToType(PyList_GET_ITEM(a1, i), sipType_QGraphicsItem, NULL, SIP_NO_CONVERTORS, NULL, &sipIsErr);
            items[i] = reinterpret_cast<QGraphicsItem *>(cpp);
        
            cpp = sipForceConvertToType(PyList_GET_ITEM(a2, i), sipType_QStyleOptionGraphicsItem, NULL, SIP_NOT_NONE|SIP_NO_CONVERTORS, NULL, &sipIsErr);
            options[i] = *reinterpret_cast<QStyleOptionGraphicsItem *>(cpp);
        }
        
        if (!sipIsErr)
        {
            Py_BEGIN_ALLOW_THREADS
        #if defined(SIP_PROTECTED_IS_PUBLIC)
            if (sipSelfWasArg)
                sipCpp->QGraphicsScene::drawItems(a0, numItems, items, options, a3);
            else
                sipCpp->drawItems(a0, numItems, items, options, a3);
        #else
            sipCpp->sipProtectVirt_drawItems(sipSelfWasArg, a0, numItems, items, options, a3);
        #endif
            Py_END_ALLOW_THREADS
        }
        
        delete[] items;
        delete[] options;
#line 3595 "sipQtGuiQGraphicsScene.cpp"

            if (sipIsErr)
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_drawItems, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_bspTreeDepth(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_bspTreeDepth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            int sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->bspTreeDepth();
            Py_END_ALLOW_THREADS

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_bspTreeDepth, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_setBspTreeDepth(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_setBspTreeDepth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsScene, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setBspTreeDepth(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_setBspTreeDepth, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_selectionArea(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_selectionArea(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            QPainterPath *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPainterPath(sipCpp->selectionArea());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_selectionArea, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_addWidget(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_addWidget(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        QWidget * a0;
        Qt::WindowFlags a1def = 0;
        Qt::WindowFlags * a1 = &a1def;
        int a1State = 0;
        QGraphicsScene *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_flags,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ:|J1", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QWidget, &a0, sipType_Qt_WindowFlags, &a1, &a1State))
        {
            QGraphicsProxyWidget *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->addWidget(a0,*a1);
            Py_END_ALLOW_THREADS
            sipReleaseType(a1,sipType_Qt_WindowFlags,a1State);

            return sipConvertFromType(sipRes,sipType_QGraphicsProxyWidget,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_addWidget, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_style(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_style(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            QStyle *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->style();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QStyle,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_style, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_setStyle(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_setStyle(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QStyle * a0;
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QStyle, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setStyle(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_setStyle, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_font(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_font(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            QFont *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QFont(sipCpp->font());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QFont,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_font, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_setFont(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_setFont(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QFont * a0;
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QFont, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setFont(*a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_setFont, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_palette(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_palette(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            QPalette *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPalette(sipCpp->palette());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPalette,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_palette, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_setPalette(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_setPalette(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QPalette * a0;
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QPalette, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setPalette(*a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_setPalette, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_activeWindow(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_activeWindow(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            QGraphicsWidget *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->activeWindow();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsWidget,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_activeWindow, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_setActiveWindow(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_setActiveWindow(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsWidget * a0;
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsWidget, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setActiveWindow(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_setActiveWindow, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_eventFilter(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_eventFilter(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QObject * a0;
        QEvent * a1;
        sipQGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QObject, &a0, sipType_QEvent, &a1))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->sipProtectVirt_eventFilter(sipSelfWasArg,a0,a1);
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_eventFilter, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_focusNextPrevChild(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_focusNextPrevChild(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
        sipQGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QGraphicsScene, &sipCpp, &a0))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->sipProtect_focusNextPrevChild(a0);
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_focusNextPrevChild, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_isSortCacheEnabled(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_isSortCacheEnabled(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->isSortCacheEnabled();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_isSortCacheEnabled, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_setSortCacheEnabled(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_setSortCacheEnabled(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QGraphicsScene, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setSortCacheEnabled(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_setSortCacheEnabled, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_setStickyFocus(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_setStickyFocus(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QGraphicsScene, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setStickyFocus(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_setStickyFocus, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_stickyFocus(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_stickyFocus(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->stickyFocus();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_stickyFocus, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_isActive(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_isActive(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->isActive();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_isActive, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_activePanel(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_activePanel(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsScene, &sipCpp))
        {
            QGraphicsItem *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->activePanel();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_activePanel, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_setActivePanel(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_setActivePanel(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsItem * a0;
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsItem, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setActivePanel(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_setActivePanel, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QGraphicsScene_sendEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsScene_sendEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsItem * a0;
        QEvent * a1;
        QGraphicsScene *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J8", &sipSelf, sipType_QGraphicsScene, &sipCpp, sipType_QGraphicsItem, &a0, sipType_QEvent, &a1))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->sendEvent(a0,a1);
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsScene, sipName_sendEvent, NULL);

    return NULL;
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_QGraphicsScene(void *, const sipTypeDef *);}
static void *cast_QGraphicsScene(void *ptr, const sipTypeDef *targetType)
{
    void *res;

    if (targetType == sipType_QGraphicsScene)
        return ptr;

    if ((res = ((const sipClassTypeDef *)sipType_QObject)->ctd_cast((QObject *)(QGraphicsScene *)ptr,targetType)) != NULL)
        return res;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_QGraphicsScene(void *, int);}
static void release_QGraphicsScene(void *sipCppV,int sipState)
{
    Py_BEGIN_ALLOW_THREADS

    if (sipState & SIP_DERIVED_CLASS)
        delete reinterpret_cast<sipQGraphicsScene *>(sipCppV);
    else
        delete reinterpret_cast<QGraphicsScene *>(sipCppV);

    Py_END_ALLOW_THREADS
}


extern "C" {static void dealloc_QGraphicsScene(sipSimpleWrapper *);}
static void dealloc_QGraphicsScene(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerived(sipSelf))
        reinterpret_cast<sipQGraphicsScene *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsPyOwned(sipSelf))
    {
        release_QGraphicsScene(sipGetAddress(sipSelf),sipSelf->flags);
    }
}


extern "C" {static void *init_QGraphicsScene(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_QGraphicsScene(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQGraphicsScene *sipCpp = 0;

    {
        QObject * a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QObject, &a0, sipOwner))
        {
#line 56 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicsscene.sip"
        // We want to track the instance.
        
        Py_BEGIN_ALLOW_THREADS
        sipCpp = new sipQGraphicsScene(a0);
        qtgui_track(sipCpp);
        Py_END_ALLOW_THREADS
#line 4287 "sipQtGuiQGraphicsScene.cpp"

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    {
        const QRectF * a0;
        QObject * a1 = 0;

        static const char *sipKwdList[] = {
            NULL,
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "J9|JH", sipType_QRectF, &a0, sipType_QObject, &a1, sipOwner))
        {
#line 66 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicsscene.sip"
        // We want to track the instance.
        
        Py_BEGIN_ALLOW_THREADS
        sipCpp = new sipQGraphicsScene(*a0, a1);
        qtgui_track(sipCpp);
        Py_END_ALLOW_THREADS
#line 4313 "sipQtGuiQGraphicsScene.cpp"

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        QObject * a4 = 0;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            NULL,
            NULL,
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "dddd|JH", &a0, &a1, &a2, &a3, sipType_QObject, &a4, sipOwner))
        {
#line 76 "/home/tsheasha/GUC/Bachelors/android-python27/python-build/PyQt-x11-gpl-4.8/sip/QtGui/qgraphicsscene.sip"
        // We want to track the instance.
        
        Py_BEGIN_ALLOW_THREADS
        sipCpp = new sipQGraphicsScene(a0, a1, a2, a3, a4);
        qtgui_track(sipCpp);
        Py_END_ALLOW_THREADS
#line 4345 "sipQtGuiQGraphicsScene.cpp"

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QGraphicsScene[] = {{133, 0, 1}};


static PyMethodDef methods_QGraphicsScene[] = {
    {SIP_MLNAME_CAST(sipName_activePanel), meth_QGraphicsScene_activePanel, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_activeWindow), meth_QGraphicsScene_activeWindow, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_addEllipse), (PyCFunction)meth_QGraphicsScene_addEllipse, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_addItem), meth_QGraphicsScene_addItem, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_addLine), (PyCFunction)meth_QGraphicsScene_addLine, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_addPath), (PyCFunction)meth_QGraphicsScene_addPath, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_addPixmap), meth_QGraphicsScene_addPixmap, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_addPolygon), (PyCFunction)meth_QGraphicsScene_addPolygon, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_addRect), (PyCFunction)meth_QGraphicsScene_addRect, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_addSimpleText), (PyCFunction)meth_QGraphicsScene_addSimpleText, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_addText), (PyCFunction)meth_QGraphicsScene_addText, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_addWidget), (PyCFunction)meth_QGraphicsScene_addWidget, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_advance), meth_QGraphicsScene_advance, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_backgroundBrush), meth_QGraphicsScene_backgroundBrush, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_bspTreeDepth), meth_QGraphicsScene_bspTreeDepth, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_childEvent), meth_QGraphicsScene_childEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_clear), meth_QGraphicsScene_clear, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_clearFocus), meth_QGraphicsScene_clearFocus, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_clearSelection), meth_QGraphicsScene_clearSelection, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_collidingItems), (PyCFunction)meth_QGraphicsScene_collidingItems, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_connectNotify), meth_QGraphicsScene_connectNotify, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_contextMenuEvent), meth_QGraphicsScene_contextMenuEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_createItemGroup), meth_QGraphicsScene_createItemGroup, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_customEvent), meth_QGraphicsScene_customEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_destroyItemGroup), meth_QGraphicsScene_destroyItemGroup, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_disconnectNotify), meth_QGraphicsScene_disconnectNotify, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_dragEnterEvent), meth_QGraphicsScene_dragEnterEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_dragLeaveEvent), meth_QGraphicsScene_dragLeaveEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_dragMoveEvent), meth_QGraphicsScene_dragMoveEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_drawBackground), meth_QGraphicsScene_drawBackground, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_drawForeground), meth_QGraphicsScene_drawForeground, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_drawItems), (PyCFunction)meth_QGraphicsScene_drawItems, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_dropEvent), meth_QGraphicsScene_dropEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_event), meth_QGraphicsScene_event, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_eventFilter), meth_QGraphicsScene_eventFilter, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_focusInEvent), meth_QGraphicsScene_focusInEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_focusItem), meth_QGraphicsScene_focusItem, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_focusNextPrevChild), meth_QGraphicsScene_focusNextPrevChild, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_focusOutEvent), meth_QGraphicsScene_focusOutEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_font), meth_QGraphicsScene_font, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_foregroundBrush), meth_QGraphicsScene_foregroundBrush, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_hasFocus), meth_QGraphicsScene_hasFocus, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_height), meth_QGraphicsScene_height, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_helpEvent), meth_QGraphicsScene_helpEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_inputMethodEvent), meth_QGraphicsScene_inputMethodEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_inputMethodQuery), meth_QGraphicsScene_inputMethodQuery, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_invalidate), (PyCFunction)meth_QGraphicsScene_invalidate, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_isActive), meth_QGraphicsScene_isActive, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_isSortCacheEnabled), meth_QGraphicsScene_isSortCacheEnabled, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_itemAt), meth_QGraphicsScene_itemAt, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_itemIndexMethod), meth_QGraphicsScene_itemIndexMethod, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_items), (PyCFunction)meth_QGraphicsScene_items, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_itemsBoundingRect), meth_QGraphicsScene_itemsBoundingRect, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_keyPressEvent), meth_QGraphicsScene_keyPressEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_keyReleaseEvent), meth_QGraphicsScene_keyReleaseEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_mouseDoubleClickEvent), meth_QGraphicsScene_mouseDoubleClickEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_mouseGrabberItem), meth_QGraphicsScene_mouseGrabberItem, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_mouseMoveEvent), meth_QGraphicsScene_mouseMoveEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_mousePressEvent), meth_QGraphicsScene_mousePressEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_mouseReleaseEvent), meth_QGraphicsScene_mouseReleaseEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_palette), meth_QGraphicsScene_palette, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_receivers), meth_QGraphicsScene_receivers, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_removeItem), meth_QGraphicsScene_removeItem, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_render), (PyCFunction)meth_QGraphicsScene_render, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_sceneRect), meth_QGraphicsScene_sceneRect, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_selectedItems), meth_QGraphicsScene_selectedItems, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_selectionArea), meth_QGraphicsScene_selectionArea, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_sendEvent), meth_QGraphicsScene_sendEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_sender), meth_QGraphicsScene_sender, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setActivePanel), meth_QGraphicsScene_setActivePanel, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setActiveWindow), meth_QGraphicsScene_setActiveWindow, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setBackgroundBrush), meth_QGraphicsScene_setBackgroundBrush, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setBspTreeDepth), meth_QGraphicsScene_setBspTreeDepth, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setFocus), (PyCFunction)meth_QGraphicsScene_setFocus, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_setFocusItem), (PyCFunction)meth_QGraphicsScene_setFocusItem, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_setFont), meth_QGraphicsScene_setFont, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setForegroundBrush), meth_QGraphicsScene_setForegroundBrush, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setItemIndexMethod), meth_QGraphicsScene_setItemIndexMethod, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setPalette), meth_QGraphicsScene_setPalette, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setSceneRect), meth_QGraphicsScene_setSceneRect, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setSelectionArea), meth_QGraphicsScene_setSelectionArea, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setSortCacheEnabled), meth_QGraphicsScene_setSortCacheEnabled, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setStickyFocus), meth_QGraphicsScene_setStickyFocus, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_setStyle), meth_QGraphicsScene_setStyle, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_stickyFocus), meth_QGraphicsScene_stickyFocus, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_style), meth_QGraphicsScene_style, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_timerEvent), meth_QGraphicsScene_timerEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_update), (PyCFunction)meth_QGraphicsScene_update, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_views), meth_QGraphicsScene_views, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_wheelEvent), meth_QGraphicsScene_wheelEvent, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_width), meth_QGraphicsScene_width, METH_VARARGS, NULL}
};

static sipEnumMemberDef enummembers_QGraphicsScene[] = {
    {sipName_AllLayers, QGraphicsScene::AllLayers, 191},
    {sipName_BackgroundLayer, QGraphicsScene::BackgroundLayer, 191},
    {sipName_BspTreeIndex, QGraphicsScene::BspTreeIndex, 190},
    {sipName_ForegroundLayer, QGraphicsScene::ForegroundLayer, 191},
    {sipName_ItemLayer, QGraphicsScene::ItemLayer, 191},
    {sipName_NoIndex, QGraphicsScene::NoIndex, 190},
};


/* Define this type's PyQt4 signals. */
static const pyqt4QtSignal pyqt4_signals_QGraphicsScene[] = {
    {"selectionChanged()", 0, 0},
    {"sceneRectChanged(QRectF)", 0, 0},
    {"changed(QList<QRectF>)", 0, 0},
    {0, 0, 0}
};


pyqt4ClassTypeDef sipTypeDef_QtGui_QGraphicsScene = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_CLASS,
        sipNameNr_QGraphicsScene,
        {0}
    },
    {
        sipNameNr_QGraphicsScene,
        {0, 0, 1},
        91, methods_QGraphicsScene,
        6, enummembers_QGraphicsScene,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    0,
    -1,
    -1,
    supers_QGraphicsScene,
    0,
    init_QGraphicsScene,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QGraphicsScene,
    0,
    0,
    0,
    release_QGraphicsScene,
    cast_QGraphicsScene,
    0,
    0,
    0
},
    &QGraphicsScene::staticMetaObject,
    0,
    pyqt4_signals_QGraphicsScene
};
